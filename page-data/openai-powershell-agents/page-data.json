{"componentChunkName":"component---src-templates-note-js","path":"/openai-powershell-agents/","result":{"data":{"remark":{"fields":{"path":"openai-powershell-agents"},"meta":{"title":""},"headings":[{"value":"OpenAI Agents SDK via PowerShell"}],"html":"<h1>OpenAI Agents SDK via PowerShell</h1>\n<p>After figuring out how to use <a href=\"/openai-powershell-functions/\">functions</a></p>\n<p>It is time to play with Agents</p>\n<p>Key idea here is that we can not pass bazillion of tools into the model, and need to find some way to split them into chunks.</p>\n<p>There is an <a href=\"https://github.com/openai/openai-agents-python/blob/main/examples/customer_service/main.py\">customer_service</a> example which does exactly this</p>\n<p>If you play little bit with code and put few print statements here and ther, you may get full log of requests which will be something like <a href=\"/b8a1d80681feffc913bb614005b4a359/log.txt\">this</a></p>\n<h2>How does it work?</h2>\n<p>At the top level we have <strong>Triage Agent</strong> its job is to decide to which other agent user message should be sent</p>\n<p>We are achieving this by passing corresponding instructions and tool definitions</p>\n<p>Here is an brief exapmle:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$headers</span> = @<span class=\"token punctuation\">{</span> Authorization = <span class=\"token string\">\"Bearer <span class=\"token variable\">$env</span>:OPENAI_API_KEY\"</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$baseInstructions</span> = @<span class=\"token string\">\"\n# System context\n\nYou are part of a multi-agent system called the Agents SDK, designed to make agent coordination and execution easy.\n\nAgents uses two primary abstraction: **Agents** and **Handoffs**.\n\nAn agent encompasses instructions and tools and can hand off a conversation to another agent when appropriate.\n\nHandoffs are achieved by calling a handoff function, generally named `transfer_to_&lt;agent_name>`.\n\nTransfers between agents are handled seamlessly in the background; do not mention or draw attention to these transfers in your conversation with the user.\n\"</span>@\n\n<span class=\"token variable\">$triageAgentInstructions</span> = @<span class=\"token string\">\"\n<span class=\"token variable\">$baseInstructions</span>\n\nYou are a helpful triaging agent. You can use your tools to delegate questions to other appropriate agents.\n\"</span>@\n\n<span class=\"token comment\"># note: tools here, are kind of fake functions to switch between available agents</span>\n<span class=\"token variable\">$triageAgentTools</span> = @<span class=\"token punctuation\">(</span>\n  @<span class=\"token punctuation\">{</span>\n    name        = <span class=\"token string\">\"transfer_to_faq_agent\"</span>\n    parameters  = @<span class=\"token punctuation\">{</span>\n      additionalProperties = <span class=\"token boolean\">$false</span>\n      <span class=\"token function\">type</span>                 = <span class=\"token string\">\"object\"</span>\n      properties           = @<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      required             = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    strict      = <span class=\"token boolean\">$true</span>\n    <span class=\"token function\">type</span>        = <span class=\"token string\">\"function\"</span>\n    description = <span class=\"token string\">\"Handoff to the FAQ Agent agent to handle the request. A helpful agent that can answer questions about the airline.\"</span>\n  <span class=\"token punctuation\">}</span>\n  @<span class=\"token punctuation\">{</span>\n    name        = <span class=\"token string\">\"transfer_to_seat_booking_agent\"</span>\n    parameters  = @<span class=\"token punctuation\">{</span>\n      additionalProperties = <span class=\"token boolean\">$false</span>\n      <span class=\"token function\">type</span>                 = <span class=\"token string\">\"object\"</span>\n      properties           = @<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      required             = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    strict      = <span class=\"token boolean\">$true</span>\n    <span class=\"token function\">type</span>        = <span class=\"token string\">\"function\"</span>\n    description = <span class=\"token string\">\"Handoff to the Seat Booking Agent agent to handle the request. A helpful agent that can update a seat on a flight.\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n    input        = @<span class=\"token punctuation\">(</span>\n      @<span class=\"token punctuation\">{</span>\n        role    = <span class=\"token string\">\"user\"</span>\n        content = <span class=\"token string\">\"lets book a seat\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span>\n    model        = <span class=\"token string\">\"gpt-4o\"</span>\n    include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    instructions = <span class=\"token variable\">$triageAgentInstructions</span>\n    stream       = <span class=\"token boolean\">$false</span>\n    tools        = <span class=\"token variable\">$triageAgentTools</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100</code></pre></div></p>\n<p>which will respond like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"function_call\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fc_67dd8bce982481929f5f2d56f88799aa08e37110f459307f\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"call_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"call_goIRf9LIVdFCGVPEtL1gnVKs\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"transfer_to_seat_booking_agent\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"arguments\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{}\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"completed\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>So, our triage agent decided to switch context to seat booking agent based on user input, and asks us to call corresponding function.</p>\n<p>There is no <code class=\"language-text\">transfer_to_seat_booking_agent</code> function, but, the key here is that:</p>\n<ol>\n<li>we will append this response as is to conversation</li>\n<li>we will append fake response like this <code class=\"language-text\">{\"type\": \"function_call_output\", \"call_id\": \"call_VbNO0xX5vd4a6RfonLs1A0nw\", \"output\": \"{</code>\"assistant<code class=\"language-text\">\": </code>\"Seat Booking Agent<code class=\"language-text\">\"}\"}</code></li>\n<li>change instructions and tools definition to ones belong to seat booking agent</li>\n<li>pass all this back to OpenAI</li>\n</ol>\n<p>e.g.: subsequent request will be:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$headers</span> = @<span class=\"token punctuation\">{</span> Authorization = <span class=\"token string\">\"Bearer <span class=\"token variable\">$env</span>:OPENAI_API_KEY\"</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$baseInstructions</span> = @<span class=\"token string\">\"\n# System context\n\nYou are part of a multi-agent system called the Agents SDK, designed to make agent coordination and execution easy.\n\nAgents uses two primary abstraction: **Agents** and **Handoffs**.\n\nAn agent encompasses instructions and tools and can hand off a conversation to another agent when appropriate.\n\nHandoffs are achieved by calling a handoff function, generally named `transfer_to_&lt;agent_name>`.\n\nTransfers between agents are handled seamlessly in the background; do not mention or draw attention to these transfers in your conversation with the user.\n\"</span>@\n\n<span class=\"token variable\">$seatBookingAgentInstructions</span> = @<span class=\"token string\">\"\n<span class=\"token variable\">$baseInstructions</span>\n\nYou are a seat booking agent. If you are speaking to a customer, you probably were transferred to from the triage agent.\n\nUse the following routine to support the customer.\n\n# Routine\n\n1. Ask for their confirmation number.\n2. Ask the customer what their desired seat number is.\n3. Use the update seat tool to update the seat on the flight.\n\nIf the customer asks a question that is not related to the routine, transfer back to the triage agent. \"</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"@\n\n<span class=\"token variable\">$seatBookingAgentTools</span> = @(\n  # real function, that is supposed to update seat by calling external API\n  @{\n    name        = \"</span>update_seat<span class=\"token string\">\"\n    parameters  = @{\n      properties           = @{\n        confirmation_number = @{\n          description = \"</span>The confirmation number <span class=\"token keyword\">for</span> the flight<span class=\"token punctuation\">.</span><span class=\"token string\">\"\n          title       = \"</span>Confirmation Number<span class=\"token string\">\"\n          type        = \"</span>string<span class=\"token string\">\"\n        }\n        new_seat            = @{\n          description = \"</span>The new seat to update to<span class=\"token punctuation\">.</span><span class=\"token string\">\"\n          title       = \"</span>New Seat<span class=\"token string\">\"\n          type        = \"</span>string<span class=\"token string\">\"\n        }\n      }\n      required             = @(\"</span>confirmation_number<span class=\"token string\">\", \"</span>new_seat<span class=\"token string\">\")\n      title                = \"</span>update_seat_args<span class=\"token string\">\"\n      type                 = \"</span>object<span class=\"token string\">\"\n      additionalProperties = <span class=\"token boolean\">$false</span>\n    }\n    strict      = <span class=\"token boolean\">$true</span>\n    type        = \"</span><span class=\"token keyword\">function</span><span class=\"token string\">\"\n    description = \"</span>Update the seat <span class=\"token keyword\">for</span> a given confirmation number<span class=\"token punctuation\">.</span><span class=\"token string\">\"\n  },\n  # fake function, to switch back to triage agent\n  @{\n    name        = \"</span>transfer_to_triage_agent<span class=\"token string\">\"\n    parameters  = @{\n      additionalProperties = <span class=\"token boolean\">$false</span>\n      type                 = \"</span>object<span class=\"token string\">\"\n      properties           = @{}\n      required             = @()\n    }\n    strict      = <span class=\"token boolean\">$true</span>\n    type        = \"</span><span class=\"token keyword\">function</span><span class=\"token string\">\"\n    description = \"</span>Handoff to the Triage Agent agent to handle the request<span class=\"token punctuation\">.</span> A triage agent that can delegate a customer's request to the appropriate agent<span class=\"token punctuation\">.</span><span class=\"token string\">\"\n  }\n)\n\n\n<span class=\"token variable\">$res</span> = Invoke-RestMethod -Method Post -Uri \"</span>https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>api<span class=\"token punctuation\">.</span>openai<span class=\"token punctuation\">.</span>com/v1/responses<span class=\"token string\">\" -Headers <span class=\"token variable\">$headers</span> -ContentType \"</span>application/json<span class=\"token punctuation\">;</span> charset=utf-8<span class=\"token string\">\" -Body (ConvertTo-Json -Depth 100 -InputObject @{\n    input        = @(\n      @{\n        role    = \"</span>user<span class=\"token string\">\"\n        content = \"</span>lets book a seat<span class=\"token string\">\"\n      },\n      # append previous response as is\n      @{\n        type      = \"</span>function_call<span class=\"token string\">\"\n        id        = \"</span>fc_67dd8bce982481929f5f2d56f88799aa08e37110f459307f<span class=\"token string\">\"\n        call_id   = \"</span>call_goIRf9LIVdFCGVPEtL1gnVKs<span class=\"token string\">\"\n        name      = \"</span>transfer_to_seat_booking_agent<span class=\"token string\">\"\n        arguments = \"</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token string\">\"\n        status    = \"</span>completed<span class=\"token string\">\"\n      },\n      # as well as our fake function call result\n      @{\n        type    = \"</span>function_call_output<span class=\"token string\">\"\n        call_id = \"</span>call_goIRf9LIVdFCGVPEtL1gnVKs<span class=\"token string\">\"\n        output  = \"</span><span class=\"token punctuation\">{</span>`<span class=\"token string\">\"assistant`\": `\"Seat Booking Agent`\"}\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span>\n    model        = <span class=\"token string\">\"gpt-4o\"</span>\n    include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    instructions = <span class=\"token variable\">$seatBookingAgentInstructions</span> <span class=\"token comment\"># note: we are using seat booking agent instructions now</span>\n    stream       = <span class=\"token boolean\">$false</span>\n    tools        = <span class=\"token variable\">$seatBookingAgentTools</span> <span class=\"token comment\"># note: we are using seat booking agent tools now</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100</code></pre></div></p>\n<p>which will respond with:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"msg_67dd8e004e208192b3ea40b3a369b8a108e37110f459307f\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"completed\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"role\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"assistant\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"output_text\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Sure! Please provide your confirmation number.\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"annotations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>user will enter his confirmation number and we will call model with current instructions and tools still set to seat booking agent, which will then ask for seat number and at the end call update seat function</p>\n<p>whenever user asks for something that current agent can not recognize - it will fallback to triage agent which will decide what to do</p>\n<h2>PowerShell customer support agent</h2>\n<p>here is full example of commands ran one by one:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$headers</span> = @<span class=\"token punctuation\">{</span> Authorization = <span class=\"token string\">\"Bearer <span class=\"token variable\">$env</span>:OPENAI_API_KEY\"</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$baseInstructions</span> = @<span class=\"token string\">\"\n# System context\n\nYou are part of a multi-agent system called the Agents SDK, designed to make agent coordination and execution easy. \n\nAgents uses two primary abstraction: **Agents** and **Handoffs**.\n\nAn agent encompasses instructions and tools and can hand off a conversation to another agent when appropriate.\n\nHandoffs are achieved by calling a handoff function, generally named `transfer_to_&lt;agent_name>`.\n\nTransfers between agents are handled seamlessly in the background; do not mention or draw attention to these transfers in your conversation with the user.\n\"</span>@\n\n<span class=\"token variable\">$triageAgentInstructions</span> = @<span class=\"token string\">\"\n<span class=\"token variable\">$baseInstructions</span>\n\nYou are a helpful triaging agent. You can use your tools to delegate questions to other appropriate agents.\n\"</span>@\n\n<span class=\"token comment\"># note: tools here, are kind of fake functions to switch between available agents</span>\n<span class=\"token variable\">$triageAgentTools</span> = @<span class=\"token punctuation\">(</span>\n  @<span class=\"token punctuation\">{</span>\n    name        = <span class=\"token string\">\"transfer_to_faq_agent\"</span>\n    parameters  = @<span class=\"token punctuation\">{</span>\n      additionalProperties = <span class=\"token boolean\">$false</span>\n      <span class=\"token function\">type</span>                 = <span class=\"token string\">\"object\"</span>\n      properties           = @<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      required             = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    strict      = <span class=\"token boolean\">$true</span>\n    <span class=\"token function\">type</span>        = <span class=\"token string\">\"function\"</span>\n    description = <span class=\"token string\">\"Handoff to the FAQ Agent agent to handle the request. A helpful agent that can answer questions about the airline.\"</span>\n  <span class=\"token punctuation\">}</span>\n  @<span class=\"token punctuation\">{</span>\n    name        = <span class=\"token string\">\"transfer_to_seat_booking_agent\"</span>\n    parameters  = @<span class=\"token punctuation\">{</span>\n      additionalProperties = <span class=\"token boolean\">$false</span>\n      <span class=\"token function\">type</span>                 = <span class=\"token string\">\"object\"</span>\n      properties           = @<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      required             = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    strict      = <span class=\"token boolean\">$true</span>\n    <span class=\"token function\">type</span>        = <span class=\"token string\">\"function\"</span>\n    description = <span class=\"token string\">\"Handoff to the Seat Booking Agent agent to handle the request. A helpful agent that can update a seat on a flight.\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token variable\">$seatBookingAgentInstructions</span> = @<span class=\"token string\">\"\n<span class=\"token variable\">$baseInstructions</span>\n\nYou are a seat booking agent. If you are speaking to a customer, you probably were transferred to from the triage agent.\n\nUse the following routine to support the customer.\n\n# Routine\n\n1. Ask for their confirmation number.\n2. Ask the customer what their desired seat number is.\n3. Use the update seat tool to update the seat on the flight.\n\nIf the customer asks a question that is not related to the routine, transfer back to the triage agent. \"</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"@\n\n<span class=\"token variable\">$seatBookingAgentTools</span> = @(\n  # real function, that is supposed to update seat by calling external API\n  @{\n    name        = \"</span>update_seat<span class=\"token string\">\"\n    parameters  = @{\n      properties           = @{\n        confirmation_number = @{\n          description = \"</span>The confirmation number <span class=\"token keyword\">for</span> the flight<span class=\"token punctuation\">.</span><span class=\"token string\">\"\n          title       = \"</span>Confirmation Number<span class=\"token string\">\"\n          type        = \"</span>string<span class=\"token string\">\"\n        }\n        new_seat            = @{\n          description = \"</span>The new seat to update to<span class=\"token punctuation\">.</span><span class=\"token string\">\"\n          title       = \"</span>New Seat<span class=\"token string\">\"\n          type        = \"</span>string<span class=\"token string\">\"\n        }\n      }\n      required             = @(\"</span>confirmation_number<span class=\"token string\">\", \"</span>new_seat<span class=\"token string\">\")\n      title                = \"</span>update_seat_args<span class=\"token string\">\"\n      type                 = \"</span>object<span class=\"token string\">\"\n      additionalProperties = <span class=\"token boolean\">$false</span>\n    }\n    strict      = <span class=\"token boolean\">$true</span>\n    type        = \"</span><span class=\"token keyword\">function</span><span class=\"token string\">\"\n    description = \"</span>Update the seat <span class=\"token keyword\">for</span> a given confirmation number<span class=\"token punctuation\">.</span><span class=\"token string\">\"\n  },\n  # fake function, to switch back to triage agent\n  @{\n    name        = \"</span>transfer_to_triage_agent<span class=\"token string\">\"\n    parameters  = @{\n      additionalProperties = <span class=\"token boolean\">$false</span>\n      type                 = \"</span>object<span class=\"token string\">\"\n      properties           = @{}\n      required             = @()\n    }\n    strict      = <span class=\"token boolean\">$true</span>\n    type        = \"</span><span class=\"token keyword\">function</span><span class=\"token string\">\"\n    description = \"</span>Handoff to the Triage Agent agent to handle the request<span class=\"token punctuation\">.</span> A triage agent that can delegate a customer<span class=\"token string\">'s request to the appropriate agent.\"\n  }\n)\n\n$faqAgentInstructions = @\"\n$baseInstructions\n\nYou are an FAQ agent. If you are speaking to a customer, you probably were transferred to from the triage agent.\n\nUse the following routine to support the customer.\n\n# Routine\n\n1. Identify the last question asked by the customer.\n2. Use the faq lookup tool to answer the question. Do not rely on your own knowledge.\n3. If you cannot answer the question, transfer back to the triage agent.\n\"@\n\n$faqAgentTools = @(\n  # real function, that is supposed to update seat by calling external API\n  @{\n    name        = \"faq_lookup_tool\"\n    parameters  = @{\n      properties           = @{\n        question = @{\n          title = \"Question\"\n          type  = \"string\"\n        }\n      }\n      required             = @(\"question\")\n      title                = \"faq_lookup_tool_args\"\n      type                 = \"object\"\n      additionalProperties = $false\n    }\n    strict      = $true\n    type        = \"function\"\n    description = \"Lookup frequently asked questions.\"\n  },\n  # fake function, to switch back to triage agent\n  @{\n    name        = \"transfer_to_triage_agent\"\n    parameters  = @{\n      additionalProperties = $false\n      type                 = \"object\"\n      properties           = @{}\n      required             = @()\n    }\n    strict      = $true\n    type        = \"function\"\n    description = \"Handoff to the Triage Agent agent to handle the request. A triage agent that can delegate a customer'</span>s request to the appropriate agent<span class=\"token punctuation\">.</span><span class=\"token string\">\"\n  }\n)\n\n# ---------------------------------\n\n<span class=\"token variable\">$currentInstructions</span> = <span class=\"token variable\">$triageAgentInstructions</span>\n<span class=\"token variable\">$currentTools</span> = <span class=\"token variable\">$triageAgentTools</span>\n<span class=\"token variable\">$conversation</span> = @()\n\n# ---------------------------------\n\n<span class=\"token variable\">$conversation</span> += @{\n  role    = \"</span>user<span class=\"token string\">\"\n  content = \"</span>lets book a seat<span class=\"token string\">\"\n}\n\n<span class=\"token variable\">$res</span> = Invoke-RestMethod -Method Post -Uri \"</span>https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>api<span class=\"token punctuation\">.</span>openai<span class=\"token punctuation\">.</span>com/v1/responses<span class=\"token string\">\" -Headers <span class=\"token variable\">$headers</span> -ContentType \"</span>application/json<span class=\"token punctuation\">;</span> charset=utf-8<span class=\"token string\">\" -Body (ConvertTo-Json -Depth 100 -InputObject @{\n    input        = <span class=\"token variable\">$conversation</span>\n    model        = \"</span>gpt-4o<span class=\"token string\">\"\n    include      = @()\n    instructions = <span class=\"token variable\">$currentInstructions</span>\n    stream       = <span class=\"token boolean\">$false</span>\n    tools        = <span class=\"token variable\">$currentTools</span>\n  })\n  \n<span class=\"token variable\">$conversation</span> += <span class=\"token variable\">$res</span>.output  \n<span class=\"token variable\">$res</span>.output | ConvertTo-Json -Depth 100\n&lt;#\n{\n  \"</span><span class=\"token function\">type</span><span class=\"token string\">\": \"</span>function_call<span class=\"token string\">\",\n  \"</span>id<span class=\"token string\">\": \"</span>fc_67dd5c1dca848192a9fb5db5b763c9c10bcefeefee80cd8b<span class=\"token string\">\",\n  \"</span>call_id<span class=\"token string\">\": \"</span>call_Pg1xsRsU5f97E44Bvu8079jW<span class=\"token string\">\",\n  \"</span>name<span class=\"token string\">\": \"</span>transfer_to_seat_booking_agent<span class=\"token string\">\",\n  \"</span>arguments<span class=\"token string\">\": \"</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token string\">\",\n  \"</span>status<span class=\"token string\">\": \"</span>completed<span class=\"token string\">\"\n}\n#>\n\n# because switch is a face function, append result as well\n<span class=\"token variable\">$conversation</span> += @{\n  call_id = <span class=\"token variable\">$res</span>.output.call_id\n  output  = \"</span><span class=\"token punctuation\">{</span>`<span class=\"token string\">\"assistant`\": `\"Seat Booking Agent`\"}\"</span>\n  <span class=\"token function\">type</span>    = <span class=\"token string\">\"function_call_output\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># and switch agent</span>\n<span class=\"token variable\">$currentInstructions</span> = <span class=\"token variable\">$seatBookingAgentInstructions</span>\n<span class=\"token variable\">$currentTools</span> = <span class=\"token variable\">$seatBookingAgentTools</span>\n\n<span class=\"token comment\"># and make new request with corresponding context</span>\n<span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n    input        = <span class=\"token variable\">$conversation</span>\n    model        = <span class=\"token string\">\"gpt-4o\"</span>\n    include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    instructions = <span class=\"token variable\">$currentInstructions</span>\n    stream       = <span class=\"token boolean\">$false</span>\n    tools        = <span class=\"token variable\">$currentTools</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output  \n<span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100\n<span class=\"token comment\">&lt;#\n{\n  \"type\": \"message\",\n  \"id\": \"msg_67dd5c2e38b08192a09a0901b6c7e89b0bcefeefee80cd8b\",\n  \"status\": \"completed\",\n  \"role\": \"assistant\",\n  \"content\": [\n    {\n      \"type\": \"output_text\",\n      \"text\": \"I can help you with that! Could you please provide your confirmation number?\",\n      \"annotations\": []\n    }\n  ]\n}\n#></span>\n\n<span class=\"token comment\"># pass user response</span>\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> @<span class=\"token punctuation\">{</span>\n  role    = <span class=\"token string\">\"user\"</span>\n  content = <span class=\"token string\">\"123\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n    input        = <span class=\"token variable\">$conversation</span>\n    model        = <span class=\"token string\">\"gpt-4o\"</span>\n    include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    instructions = <span class=\"token variable\">$currentInstructions</span>\n    stream       = <span class=\"token boolean\">$false</span>\n    tools        = <span class=\"token variable\">$currentTools</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output  \n<span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100\n<span class=\"token comment\">&lt;#\n{\n  \"type\": \"message\",\n  \"id\": \"msg_67dd5c43402c81928454a86c0c7ff3190bcefeefee80cd8b\",\n  \"status\": \"completed\",\n  \"role\": \"assistant\",\n  \"content\": [\n    {\n      \"type\": \"output_text\",\n      \"text\": \"Great, what seat number would you like to book?\",\n      \"annotations\": []\n    }\n  ]\n}\n#></span>\n\n<span class=\"token comment\"># pass user response</span>\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> @<span class=\"token punctuation\">{</span>\n  role    = <span class=\"token string\">\"user\"</span>\n  content = <span class=\"token string\">\"2B\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n    input        = <span class=\"token variable\">$conversation</span>\n    model        = <span class=\"token string\">\"gpt-4o\"</span>\n    include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    instructions = <span class=\"token variable\">$currentInstructions</span>\n    stream       = <span class=\"token boolean\">$false</span>\n    tools        = <span class=\"token variable\">$currentTools</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output  \n<span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100\n<span class=\"token comment\">&lt;#\n{\n  \"type\": \"function_call\",\n  \"id\": \"fc_67dd5c55f3588192af24286b4363433d0bcefeefee80cd8b\",\n  \"call_id\": \"call_bJ8UmdANmEUdQArUvSHPdAvE\",\n  \"name\": \"update_seat\",\n  \"arguments\": \"{\\\"confirmation_number\\\":\\\"123\\\",\\\"new_seat\\\":\\\"2B\\\"}\",\n  \"status\": \"completed\"\n}\n#></span>\n\n<span class=\"token comment\"># pretend we have called external API to update seat and add response</span>\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> @<span class=\"token punctuation\">{</span>\n  call_id = <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>call_id\n  output  = <span class=\"token string\">\"Updated seat to 2B for confirmation number 123\"</span>\n  <span class=\"token function\">type</span>    = <span class=\"token string\">\"function_call_output\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n    input        = <span class=\"token variable\">$conversation</span>\n    model        = <span class=\"token string\">\"gpt-4o\"</span>\n    include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    instructions = <span class=\"token variable\">$currentInstructions</span>\n    stream       = <span class=\"token boolean\">$false</span>\n    tools        = <span class=\"token variable\">$currentTools</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output  \n<span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100\n<span class=\"token comment\">&lt;#\n{\n  \"type\": \"message\",\n  \"id\": \"msg_67dd5c7ed324819285f0b8da049a1a970bcefeefee80cd8b\",\n  \"status\": \"completed\",\n  \"role\": \"assistant\",\n  \"content\": [\n    {\n      \"type\": \"output_text\",\n      \"text\": \"Your seat has been successfully updated to 2B. Safe travels! If you have any more questions, feel free to ask.\",\n      \"annotations\": []\n    }\n  ]\n}\n#></span>\n\n<span class=\"token comment\"># here, our flow is completed</span>\n\n\n<span class=\"token comment\"># ---------------------------------</span>\n<span class=\"token comment\"># Starting sencond request, asking about allowed bags</span>\n\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> @<span class=\"token punctuation\">{</span>\n  role    = <span class=\"token string\">\"user\"</span>\n  content = <span class=\"token string\">\"how many bags can i bring?\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># note: we are still in the context of seat booking agent, so we will make a request with the same context</span>\n<span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n    input        = <span class=\"token variable\">$conversation</span>\n    model        = <span class=\"token string\">\"gpt-4o\"</span>\n    include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    instructions = <span class=\"token variable\">$currentInstructions</span>\n    stream       = <span class=\"token boolean\">$false</span>\n    tools        = <span class=\"token variable\">$currentTools</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output  \n<span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100\n<span class=\"token comment\">&lt;#\n{\n  \"type\": \"function_call\",\n  \"id\": \"fc_67dd5ccd27448192b2cf2bf6127001560bcefeefee80cd8b\",\n  \"call_id\": \"call_1D61UAqL2RsEUGop9lrgo3X5\",\n  \"name\": \"transfer_to_triage_agent\",\n  \"arguments\": \"{}\",\n  \"status\": \"completed\"\n}\n#></span>\n\n<span class=\"token comment\"># note: because this request can not be handled by seat booking agent, and there is `transfer_to_triage_agent` model chooses to call it</span>\n<span class=\"token comment\"># transfer_to_triage_agent is an fake function, that will switch to triage agent</span>\n<span class=\"token comment\"># so add fake function call results to conversation as if we switched agent</span>\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> @<span class=\"token punctuation\">{</span>\n  call_id = <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>call_id\n  output  = <span class=\"token string\">\"{`\"assistant`\": `\"Triage Agent`\"}\"</span>\n  <span class=\"token function\">type</span>    = <span class=\"token string\">\"function_call_output\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># and switch agent</span>\n<span class=\"token variable\">$currentInstructions</span> = <span class=\"token variable\">$triageAgentInstructions</span>\n<span class=\"token variable\">$currentTools</span> = <span class=\"token variable\">$triageAgentTools</span>\n\n<span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n    input        = <span class=\"token variable\">$conversation</span>\n    model        = <span class=\"token string\">\"gpt-4o\"</span>\n    include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    instructions = <span class=\"token variable\">$currentInstructions</span>\n    stream       = <span class=\"token boolean\">$false</span>\n    tools        = <span class=\"token variable\">$currentTools</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output  \n<span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100\n<span class=\"token comment\">&lt;#\n{\n  \"type\": \"function_call\",\n  \"id\": \"fc_67dd5d286c808192b2ca7304a6a51ae70bcefeefee80cd8b\",\n  \"call_id\": \"call_Ak9B4malozIwVSlyzTChMHZo\",\n  \"name\": \"transfer_to_faq_agent\",\n  \"arguments\": \"{}\",\n  \"status\": \"completed\"\n}\n#></span>\n\n<span class=\"token comment\"># note: triage agent desided to switch us to faq agent</span>\n<span class=\"token comment\"># add fake function call response as if we have switched agent</span>\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> @<span class=\"token punctuation\">{</span>\n  call_id = <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>call_id\n  output  = <span class=\"token string\">\"{`\"assistant`\": `\"FAQ Agent`\"}\"</span>\n  <span class=\"token function\">type</span>    = <span class=\"token string\">\"function_call_output\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># and switch agent</span>\n<span class=\"token variable\">$currentInstructions</span> = <span class=\"token variable\">$faqAgentInstructions</span>\n<span class=\"token variable\">$currentTools</span> = <span class=\"token variable\">$faqAgentTools</span>\n\n<span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n    input        = <span class=\"token variable\">$conversation</span>\n    model        = <span class=\"token string\">\"gpt-4o\"</span>\n    include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    instructions = <span class=\"token variable\">$currentInstructions</span>\n    stream       = <span class=\"token boolean\">$false</span>\n    tools        = <span class=\"token variable\">$currentTools</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output  \n<span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100\n<span class=\"token comment\">&lt;#\n{\n  \"type\": \"function_call\",\n  \"id\": \"fc_67dd5d63537481928089fbfa8aca47da0bcefeefee80cd8b\",\n  \"call_id\": \"call_zuYpDRDCzKf4NC0Fb3khSIdv\",\n  \"name\": \"faq_lookup_tool\",\n  \"arguments\": \"{\\\"question\\\":\\\"how many bags can i bring\\\"}\",\n  \"status\": \"completed\"\n}\n#></span>\n\n<span class=\"token comment\"># note: because of tools, our model recognized call to faq lookup and tries to cal that function</span>\n\n<span class=\"token comment\"># after calling faq lookup, we will receive response with answer which we pass back to the model</span>\n<span class=\"token comment\"># append function call result to conversation</span>\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> @<span class=\"token punctuation\">{</span>\n  call_id = <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>call_id\n  output  = <span class=\"token string\">\"You are allowed to bring one bag on the plane, which must be under 50 pounds and 22 inches x 14 inches x 9 inches in size. If you have more questions, feel free to ask!\"</span>\n  <span class=\"token function\">type</span>    = <span class=\"token string\">\"function_call_output\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n    input        = <span class=\"token variable\">$conversation</span>\n    model        = <span class=\"token string\">\"gpt-4o\"</span>\n    include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    instructions = <span class=\"token variable\">$currentInstructions</span>\n    stream       = <span class=\"token boolean\">$false</span>\n    tools        = <span class=\"token variable\">$currentTools</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output  \n<span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100\n<span class=\"token comment\">&lt;#\n{\n  \"type\": \"message\",\n  \"id\": \"msg_67dd5dc85a908192bfe87df417a897430bcefeefee80cd8b\",\n  \"status\": \"completed\",\n  \"role\": \"assistant\",\n  \"content\": [\n    {\n      \"type\": \"output_text\",\n      \"text\": \"You are allowed to bring one bag on the plane, which must be under 50 pounds and 22 inches x 14 inches x 9 inches in size. If you have more questions, feel free to ask!\",\n      \"annotations\": []\n    }\n  ]\n}\n#></span>\n\n<span class=\"token comment\"># note: having the response from function call, model uses it to respond to user</span></code></pre></div></p>\n<p>and the same but with everything <a href=\"/18586ac5c150073a0046039f21a27311/inlined.ps1\">inlined</a></p>\n<h2>Interactive sample</h2>\n<p>of course we do want something interactive, so here is combined script</p>\n<p><div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$headers</span> = @<span class=\"token punctuation\">{</span> Authorization = <span class=\"token string\">\"Bearer <span class=\"token variable\">$env</span>:OPENAI_API_KEY\"</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$baseInstructions</span> = @<span class=\"token string\">\"\n# System context\n\nYou are part of a multi-agent system called the Agents SDK, designed to make agent coordination and execution easy. \n\nAgents uses two primary abstraction: **Agents** and **Handoffs**.\n\nAn agent encompasses instructions and tools and can hand off a conversation to another agent when appropriate.\n\nHandoffs are achieved by calling a handoff function, generally named `transfer_to_&lt;agent_name>`.\n\nTransfers between agents are handled seamlessly in the background; do not mention or draw attention to these transfers in your conversation with the user.\n\"</span>@\n\n<span class=\"token variable\">$triageAgentInstructions</span> = @<span class=\"token string\">\"\n<span class=\"token variable\">$baseInstructions</span>\n\nYou are a helpful triaging agent. You can use your tools to delegate questions to other appropriate agents.\n\"</span>@\n\n<span class=\"token comment\"># note: tools here, are kind of fake functions to switch between available agents</span>\n<span class=\"token variable\">$triageAgentTools</span> = @<span class=\"token punctuation\">(</span>\n  @<span class=\"token punctuation\">{</span>\n    name        = <span class=\"token string\">\"transfer_to_faq_agent\"</span>\n    parameters  = @<span class=\"token punctuation\">{</span>\n      additionalProperties = <span class=\"token boolean\">$false</span>\n      <span class=\"token function\">type</span>                 = <span class=\"token string\">\"object\"</span>\n      properties           = @<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      required             = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    strict      = <span class=\"token boolean\">$true</span>\n    <span class=\"token function\">type</span>        = <span class=\"token string\">\"function\"</span>\n    description = <span class=\"token string\">\"Handoff to the FAQ Agent agent to handle the request. A helpful agent that can answer questions about the airline.\"</span>\n  <span class=\"token punctuation\">}</span>\n  @<span class=\"token punctuation\">{</span>\n    name        = <span class=\"token string\">\"transfer_to_seat_booking_agent\"</span>\n    parameters  = @<span class=\"token punctuation\">{</span>\n      additionalProperties = <span class=\"token boolean\">$false</span>\n      <span class=\"token function\">type</span>                 = <span class=\"token string\">\"object\"</span>\n      properties           = @<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      required             = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    strict      = <span class=\"token boolean\">$true</span>\n    <span class=\"token function\">type</span>        = <span class=\"token string\">\"function\"</span>\n    description = <span class=\"token string\">\"Handoff to the Seat Booking Agent agent to handle the request. A helpful agent that can update a seat on a flight.\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token variable\">$seatBookingAgentInstructions</span> = @<span class=\"token string\">\"\n<span class=\"token variable\">$baseInstructions</span>\n\nYou are a seat booking agent. If you are speaking to a customer, you probably were transferred to from the triage agent.\n\nUse the following routine to support the customer.\n\n# Routine\n\n1. Ask for their confirmation number.\n2. Ask the customer what their desired seat number is.\n3. Use the update seat tool to update the seat on the flight.\n\nIf the customer asks a question that is not related to the routine, transfer back to the triage agent. \"</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"@\n\n<span class=\"token variable\">$seatBookingAgentTools</span> = @(\n  # real function, that is supposed to update seat by calling external API\n  @{\n    name        = \"</span>update_seat<span class=\"token string\">\"\n    parameters  = @{\n      properties           = @{\n        confirmation_number = @{\n          description = \"</span>The confirmation number <span class=\"token keyword\">for</span> the flight<span class=\"token punctuation\">.</span><span class=\"token string\">\"\n          title       = \"</span>Confirmation Number<span class=\"token string\">\"\n          type        = \"</span>string<span class=\"token string\">\"\n        }\n        new_seat            = @{\n          description = \"</span>The new seat to update to<span class=\"token punctuation\">.</span><span class=\"token string\">\"\n          title       = \"</span>New Seat<span class=\"token string\">\"\n          type        = \"</span>string<span class=\"token string\">\"\n        }\n      }\n      required             = @(\"</span>confirmation_number<span class=\"token string\">\", \"</span>new_seat<span class=\"token string\">\")\n      title                = \"</span>update_seat_args<span class=\"token string\">\"\n      type                 = \"</span>object<span class=\"token string\">\"\n      additionalProperties = <span class=\"token boolean\">$false</span>\n    }\n    strict      = <span class=\"token boolean\">$true</span>\n    type        = \"</span><span class=\"token keyword\">function</span><span class=\"token string\">\"\n    description = \"</span>Update the seat <span class=\"token keyword\">for</span> a given confirmation number<span class=\"token punctuation\">.</span><span class=\"token string\">\"\n  },\n  # fake function, to switch back to triage agent\n  @{\n    name        = \"</span>transfer_to_triage_agent<span class=\"token string\">\"\n    parameters  = @{\n      additionalProperties = <span class=\"token boolean\">$false</span>\n      type                 = \"</span>object<span class=\"token string\">\"\n      properties           = @{}\n      required             = @()\n    }\n    strict      = <span class=\"token boolean\">$true</span>\n    type        = \"</span><span class=\"token keyword\">function</span><span class=\"token string\">\"\n    description = \"</span>Handoff to the Triage Agent agent to handle the request<span class=\"token punctuation\">.</span> A triage agent that can delegate a customer<span class=\"token string\">'s request to the appropriate agent.\"\n  }\n)\n\n$faqAgentInstructions = @\"\n$baseInstructions\n\nYou are an FAQ agent. If you are speaking to a customer, you probably were transferred to from the triage agent.\n\nUse the following routine to support the customer.\n\n# Routine\n\n1. Identify the last question asked by the customer.\n2. Use the faq lookup tool to answer the question. Do not rely on your own knowledge.\n3. If you cannot answer the question, transfer back to the triage agent.\n\"@\n\n$faqAgentTools = @(\n  # real function, that is supposed to update seat by calling external API\n  @{\n    name        = \"faq_lookup_tool\"\n    parameters  = @{\n      properties           = @{\n        question = @{\n          title = \"Question\"\n          type  = \"string\"\n        }\n      }\n      required             = @(\"question\")\n      title                = \"faq_lookup_tool_args\"\n      type                 = \"object\"\n      additionalProperties = $false\n    }\n    strict      = $true\n    type        = \"function\"\n    description = \"Lookup frequently asked questions.\"\n  },\n  # fake function, to switch back to triage agent\n  @{\n    name        = \"transfer_to_triage_agent\"\n    parameters  = @{\n      additionalProperties = $false\n      type                 = \"object\"\n      properties           = @{}\n      required             = @()\n    }\n    strict      = $true\n    type        = \"function\"\n    description = \"Handoff to the Triage Agent agent to handle the request. A triage agent that can delegate a customer'</span>s request to the appropriate agent<span class=\"token punctuation\">.</span><span class=\"token string\">\"\n  }\n)\n\n# ---------------------------------\n\n<span class=\"token variable\">$currentInstructions</span> = <span class=\"token variable\">$triageAgentInstructions</span>\n<span class=\"token variable\">$currentTools</span> = <span class=\"token variable\">$triageAgentTools</span>\n<span class=\"token variable\">$conversation</span> = @()\n<span class=\"token variable\">$prompt</span> = <span class=\"token boolean\">$true</span>\n\nwhile (<span class=\"token boolean\">$true</span>) {\n  if (<span class=\"token variable\">$prompt</span>) {\n    <span class=\"token variable\">$message</span> = Read-Host \"</span>Enter your message<span class=\"token string\">\"\n    if (-not <span class=\"token variable\">$message</span> -or <span class=\"token variable\">$message</span>.ToLower() -eq \"</span><span class=\"token keyword\">exit</span><span class=\"token string\">\" -or <span class=\"token variable\">$message</span>.ToLower() -eq \"</span>quit<span class=\"token string\">\") {\n      Write-Host \"</span>Bye!<span class=\"token string\">\"\n      break\n    }\n    <span class=\"token variable\">$conversation</span> += @{\n      role    = \"</span>user<span class=\"token string\">\"\n      content = <span class=\"token variable\">$message</span>\n    }\n\n    <span class=\"token variable\">$res</span> = Invoke-RestMethod -Method Post -Uri \"</span>https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>api<span class=\"token punctuation\">.</span>openai<span class=\"token punctuation\">.</span>com/v1/responses<span class=\"token string\">\" -Headers <span class=\"token variable\">$headers</span> -ContentType \"</span>application/json<span class=\"token punctuation\">;</span> charset=utf-8<span class=\"token string\">\" -Body (ConvertTo-Json -Depth 100 -InputObject @{\n        input        = <span class=\"token variable\">$conversation</span>\n        model        = \"</span>gpt-4o<span class=\"token string\">\"\n        include      = @()\n        instructions = <span class=\"token variable\">$currentInstructions</span>\n        stream       = <span class=\"token boolean\">$false</span>\n        tools        = <span class=\"token variable\">$currentTools</span>\n      })\n  \n    <span class=\"token variable\">$conversation</span> += <span class=\"token variable\">$res</span>.output\n    <span class=\"token variable\">$prompt</span> = <span class=\"token boolean\">$false</span>\n  }\n  \n  if (<span class=\"token variable\">$res</span>.output.type -eq \"</span>message<span class=\"token string\">\") {\n    Write-Host <span class=\"token variable\">$res</span>.output.content[0].text\n    <span class=\"token variable\">$prompt</span> = <span class=\"token boolean\">$true</span>\n  }\n  elseif (<span class=\"token variable\">$res</span>.output.type -eq \"</span>function_call<span class=\"token string\">\" -and <span class=\"token variable\">$res</span>.output.name -eq \"</span>transfer_to_seat_booking_agent<span class=\"token string\">\") {\n    <span class=\"token variable\">$conversation</span> += @{\n      call_id = <span class=\"token variable\">$res</span>.output.call_id\n      output  = \"</span><span class=\"token punctuation\">{</span>`<span class=\"token string\">\"assistant`\": `\"Seat Booking Agent`\"}\"</span>\n      <span class=\"token function\">type</span>    = <span class=\"token string\">\"function_call_output\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$currentInstructions</span> = <span class=\"token variable\">$seatBookingAgentInstructions</span>\n    <span class=\"token variable\">$currentTools</span> = <span class=\"token variable\">$seatBookingAgentTools</span>\n    <span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n        input        = <span class=\"token variable\">$conversation</span>\n        model        = <span class=\"token string\">\"gpt-4o\"</span>\n        include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        instructions = <span class=\"token variable\">$currentInstructions</span>\n        stream       = <span class=\"token boolean\">$false</span>\n        tools        = <span class=\"token variable\">$currentTools</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  \n    <span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span><span class=\"token function\">type</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">\"function_call\"</span> <span class=\"token operator\">-and</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>name <span class=\"token operator\">-eq</span> <span class=\"token string\">\"transfer_to_faq_agent\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> @<span class=\"token punctuation\">{</span>\n      call_id = <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>call_id\n      output  = <span class=\"token string\">\"{`\"assistant`\": `\"FAQ Agent`\"}\"</span>\n      <span class=\"token function\">type</span>    = <span class=\"token string\">\"function_call_output\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$currentInstructions</span> = <span class=\"token variable\">$faqAgentInstructions</span>\n    <span class=\"token variable\">$currentTools</span> = <span class=\"token variable\">$faqAgentTools</span>\n    <span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n        input        = <span class=\"token variable\">$conversation</span>\n        model        = <span class=\"token string\">\"gpt-4o\"</span>\n        include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        instructions = <span class=\"token variable\">$currentInstructions</span>\n        stream       = <span class=\"token boolean\">$false</span>\n        tools        = <span class=\"token variable\">$currentTools</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span><span class=\"token function\">type</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">\"function_call\"</span> <span class=\"token operator\">-and</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>name <span class=\"token operator\">-eq</span> <span class=\"token string\">\"transfer_to_triage_agent\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> @<span class=\"token punctuation\">{</span>\n      call_id = <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>call_id\n      output  = <span class=\"token string\">\"{`\"assistant`\": `\"Triage Agent`\"}\"</span>\n      <span class=\"token function\">type</span>    = <span class=\"token string\">\"function_call_output\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$currentInstructions</span> = <span class=\"token variable\">$triageAgentInstructions</span>\n    <span class=\"token variable\">$currentTools</span> = <span class=\"token variable\">$triageAgentTools</span>\n    <span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n        input        = <span class=\"token variable\">$conversation</span>\n        model        = <span class=\"token string\">\"gpt-4o\"</span>\n        include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        instructions = <span class=\"token variable\">$currentInstructions</span>\n        stream       = <span class=\"token boolean\">$false</span>\n        tools        = <span class=\"token variable\">$currentTools</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span><span class=\"token function\">type</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">\"function_call\"</span> <span class=\"token operator\">-and</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>name <span class=\"token operator\">-eq</span> <span class=\"token string\">\"update_seat\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\"># pretend we have called external API to update seat and add response</span>\n    <span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> @<span class=\"token punctuation\">{</span>\n      call_id = <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>call_id\n      output  = <span class=\"token string\">\"Updated seat to <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>arguments<span class=\"token punctuation\">.</span>new_seat<span class=\"token punctuation\">)</span></span> for confirmation number <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>arguments<span class=\"token punctuation\">.</span>confirmation_number<span class=\"token punctuation\">)</span></span>\"</span>\n      <span class=\"token function\">type</span>    = <span class=\"token string\">\"function_call_output\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n        input        = <span class=\"token variable\">$conversation</span>\n        model        = <span class=\"token string\">\"gpt-4o\"</span>\n        include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        instructions = <span class=\"token variable\">$currentInstructions</span>\n        stream       = <span class=\"token boolean\">$false</span>\n        tools        = <span class=\"token variable\">$currentTools</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span><span class=\"token function\">type</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">\"function_call\"</span> <span class=\"token operator\">-and</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>name <span class=\"token operator\">-eq</span> <span class=\"token string\">\"faq_lookup_tool\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\"># pretend we have called external API to update seat and add response</span>\n    <span class=\"token variable\">$question</span> = <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>arguments <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertFrom-Json</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty question\n    <span class=\"token variable\">$answer</span> = <span class=\"token string\">\"I'm sorry, I don't know the answer to that question.\"</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$question</span><span class=\"token punctuation\">.</span>ToLower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Contains<span class=\"token punctuation\">(</span><span class=\"token string\">\"bag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$answer</span> = <span class=\"token string\">\"You are allowed to bring one bag on the plane. It must be under 50 pounds and 22 inches x 14 inches x 9 inches.\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$question</span><span class=\"token punctuation\">.</span>ToLower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Contains<span class=\"token punctuation\">(</span><span class=\"token string\">\"seats\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-or</span> <span class=\"token variable\">$question</span><span class=\"token punctuation\">.</span>ToLower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Contains<span class=\"token punctuation\">(</span><span class=\"token string\">\"plane\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$answer</span> = <span class=\"token string\">\"There are 120 seats on the plane. There are 22 business class seats and 98 economy seats. Exit rows are rows 4 and 16. Rows 5-8 are Economy Plus, with extra legroom. \"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$question</span><span class=\"token punctuation\">.</span>ToLower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Contains<span class=\"token punctuation\">(</span><span class=\"token string\">\"wifi\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-or</span> <span class=\"token variable\">$question</span><span class=\"token punctuation\">.</span>ToLower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Contains<span class=\"token punctuation\">(</span><span class=\"token string\">\"wi-fi\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-or</span> <span class=\"token variable\">$question</span><span class=\"token punctuation\">.</span>ToLower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Contains<span class=\"token punctuation\">(</span><span class=\"token string\">\"internet\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$answer</span> = <span class=\"token string\">\"We have free wifi on the plane, join Airline-Wifi\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> @<span class=\"token punctuation\">{</span>\n      call_id = <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>call_id\n      output  = <span class=\"token variable\">$answer</span>\n      <span class=\"token function\">type</span>    = <span class=\"token string\">\"function_call_output\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">\"https://api.openai.com/v1/responses\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json; charset=utf-8\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n        input        = <span class=\"token variable\">$conversation</span>\n        model        = <span class=\"token string\">\"gpt-4o\"</span>\n        include      = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        instructions = <span class=\"token variable\">$currentInstructions</span>\n        stream       = <span class=\"token boolean\">$false</span>\n        tools        = <span class=\"token variable\">$currentTools</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token variable\">$conversation</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>output\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div></p>\n<p>and its transcript:</p>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\"><span class=\"token property\">Enter your message:</span> lets book a seat\nCould you please provide your confirmation number<span class=\"token operator\">?</span>\n<span class=\"token property\">Enter your message:</span> <span class=\"token number\">123</span>\nWhat seat number would you like to book<span class=\"token operator\">?</span>\n<span class=\"token property\">Enter your message:</span> <span class=\"token number\">2B</span>\nYour seat has been successfully updated to <span class=\"token number\">2B</span><span class=\"token punctuation\">.</span> Safe travels<span class=\"token operator\">!</span> If you need further assistance<span class=\"token punctuation\">,</span> feel free to ask<span class=\"token punctuation\">.</span>\n<span class=\"token property\">Enter your message:</span> how much bags can i bring<span class=\"token operator\">?</span>\nYou are allowed to bring one bag on the plane<span class=\"token punctuation\">,</span> and it must be under <span class=\"token number\">50</span> pounds with dimensions not exceeding <span class=\"token number\">22</span> inches x <span class=\"token number\">14</span> inches x <span class=\"token number\">9</span> inches<span class=\"token punctuation\">.</span></code></pre></div>\n<p>So, key idea here is that we may have many different agents definted, with specific instructions and tools and can reuse/combine them and at the top level we will have this triage agent to choose correct agent to pass request to</p>"}},"pageContext":{"id":"e3a29f70-b301-5d9f-8d5d-159608bd5fed"}},"staticQueryHashes":[],"slicesMap":{}}