{"componentChunkName":"component---src-templates-note-js","path":"/node-exporter-metrics","result":{"data":{"remark":{"fields":{"path":"node-exporter-metrics"},"meta":{"title":""},"headings":[{"value":"node_exporter metrics"}],"html":"<h1>node_exporter metrics</h1>\n<p>node_exporter has bazillion of metrics, most of then wont be used, so why collect them, did tried to go thrue all of them and make some notes</p>\n<p>in my case I'm on single virtual machine with kafka, so no docker, kubernetes etc, good old plain virtual machine</p>\n<p>actual version - <a href=\"https://github.com/prometheus/node_exporter/releases\">https://github.com/prometheus/node_exporter/releases</a> (looking for <code class=\"language-text\">node_exporter-*.linux-amd64.tar.gz</code>, at moment <code class=\"language-text\">1.3.1</code>)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /opt/node_exporter-1.3.1.linux-amd64.tar.gz https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz\n<span class=\"token function\">sudo</span> <span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xzf</span> /opt/node_exporter-1.3.1.linux-amd64.tar.gz <span class=\"token parameter variable\">-C</span> /opt\n<span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> /opt/node_exporter-1.3.1.linux-amd64.tar.gz\n<span class=\"token function\">sudo</span> <span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /opt/node_exporter-1.3.1.linux-amd64 /opt/node_exporter</code></pre></div>\n<p>add it to path</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/environment <span class=\"token operator\">></span> /dev/null <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOT\nPATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/node_exporter\"\nEOT</span>\n<span class=\"token builtin class-name\">source</span> /etc/environment</code></pre></div>\n<p>from now we can simply run <code class=\"language-text\">node_exporter</code> and open <code class=\"language-text\">http://localhost:9100/metrics</code></p>\n<p>to see available options run <code class=\"language-text\">node_exporter --help</code></p>\n<p>to run as a service:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/systemd/system/node_exporter.service <span class=\"token operator\">></span> /dev/null <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOT\n[Unit]\nAfter=network.target\n\n[Service]\nType=simple\nUser=root\nExecStart=/opt/node_exporter/node_exporter --collector.disable-defaults --web.max-requests=10 --web.disable-exporter-metrics\n\n[Install]\nWantedBy=multi-user.target\nEOT</span></code></pre></div>\n<p>notes:</p>\n<ul>\n<li>it should not be ran as root user, but for sacke of simplicity it leaved as is</li>\n<li>if no commandline arguments passed all default collectors enabled, to run it without everything use <code class=\"language-text\">--collector.disable-defaults --web.disable-exporter-metrics</code></li>\n</ul>\n<h2>chrome prometheus formatter extension</h2>\n<p>for easier discovery of what available there is <a href=\"https://chrome.google.com/webstore/detail/prometheus-formatter/jhfbpphccndhifmpfbnpobpclhedckbb/related\">prometheus formatter</a> chrome extension which will colorize endpoint output</p>\n<p><img src=\"https://raw.githubusercontent.com/fhemberger/prometheus-formatter/master/_images/after.png\" alt=\"prometheus formatter\"></p>\n<p>sources can be found <a href=\"https://github.com/fhemberger/prometheus-formatter\">here</a></p>\n<h2>collector.cpu</h2>\n<p>in most tutorials used to calculate cpu usage percentage</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--collector.cpu</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_cpu_seconds_total{cpu=\"0\",mode=\"idle\"} 418594.7\nnode_cpu_seconds_total{cpu=\"0\",mode=\"iowait\"} 569.35\nnode_cpu_seconds_total{cpu=\"0\",mode=\"irq\"} 0\nnode_cpu_seconds_total{cpu=\"0\",mode=\"nice\"} 10.64\nnode_cpu_seconds_total{cpu=\"0\",mode=\"softirq\"} 892.53\nnode_cpu_seconds_total{cpu=\"0\",mode=\"steal\"} 0\nnode_cpu_seconds_total{cpu=\"0\",mode=\"system\"} 4018.45\nnode_cpu_seconds_total{cpu=\"0\",mode=\"user\"} 11230.68</code></pre></div>\n<h2>collector.filesystem</h2>\n<p>watch for disk space</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--collector.filesystem\n--path.rootfs=\"/\"\n--path.sysfs=\"/sys\"\n--path.procfs=\"/proc\"\n--collector.filesystem.fs-types-exclude=\"^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$\"</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_filesystem_avail_bytes{device=\"/dev/sda1\",fstype=\"ext4\",mountpoint=\"/\"} 7.015657472e+09\nnode_filesystem_size_bytes{device=\"/dev/sda1\",fstype=\"ext4\",mountpoint=\"/\"} 1.0222829568e+10</code></pre></div>\n<h2>collector.diskstats</h2>\n<p>unfortunatelly there is no queue metrics, but still we can watch for current io operations or measure reads vs writes count, bytes, time</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--collector.diskstats\n--collector.diskstats.ignored-devices=\"^(ram|loop|fd|(h|s|v|xv)d[a-z]|nvme\\\\d+n\\\\d+p)\\\\d+$\"</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_disk_io_now{device=\"sda\"} 0</code></pre></div>\n<h2>collector.filefd</h2>\n<p>technically if file descriptors will be bigger than maximum system will die, but not sure how big app should be</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--collector.filefd</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_filefd_allocated 2656\nnode_filefd_maximum 9.223372036854776e+18</code></pre></div>\n<h2>collector.loadavg</h2>\n<p>cpu usage</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--collector.loadavg</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_load1 0.06\nnode_load5 0.03\nnode_load15 0</code></pre></div>\n<h2>collector.logind</h2>\n<p>technically can be used to watch for ssh sessions, e.g. imagine that you are paranoic and want alert if there is ssh connection being established</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--collector.logind</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_logind_sessions{class=\"user\",remote=\"true\",seat=\"\",type=\"tty\"} 2</code></pre></div>\n<h2>collector.meminfo</h2>\n<p>all memory related stuff, at least to watch for memory not to become bottleneck</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--collector.meminfo</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_memory_MemFree_bytes 1.54710016e+08\nnode_memory_MemTotal_bytes 3.108298752e+09\n</code></pre></div>\n<h2>collector.netdev</h2>\n<p>can be used to watch for incomming and ongoing traffic</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--collector.netdev\n--collector.netdev.device-include=ens160</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_network_receive_bytes_total{device=\"ens160\"} 5.79413802e+09\nnode_network_transmit_bytes_total{device=\"ens160\"} 8.744797443e+09</code></pre></div>\n<h2>collector.os</h2>\n<p>theoretically if you have bazillion servers can be useful to watch for outdated ones</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--collector.os</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_os_info{build_id=\"\",id=\"ubuntu\",id_like=\"debian\",image_id=\"\",image_version=\"\",name=\"Ubuntu\",pretty_name=\"Ubuntu 20.04.3 LTS\",variant=\"\",variant_id=\"\",version=\"20.04.3 LTS (Focal Fossa)\",version_codename=\"focal\",version_id=\"20.04\"} 1\nnode_os_version{id=\"ubuntu\",id_like=\"debian\",name=\"Ubuntu\"} 20.04</code></pre></div>\n<h2>collector.pressure</h2>\n<p>can be used to watch for lack of server resources</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--collector.pressure</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># counter Total time in seconds that processes have waited for CPU time\nnode_pressure_cpu_waiting_seconds_total 5063.650201\n# counter Total time in seconds no process could make progress due to IO congestion\nnode_pressure_io_stalled_seconds_total 586.542031\n# counter Total time in seconds that processes have waited due to IO congestion\nnode_pressure_io_waiting_seconds_total 633.69588\n# counter Total time in seconds no process could make progress due to memory congestion\nnode_pressure_memory_stalled_seconds_total 0.08806399999999999\n# counter Total time in seconds that processes have waited for memory\nnode_pressure_memory_waiting_seconds_total 0.589262</code></pre></div>\n<h2>collector.processes</h2>\n<p>from <code class=\"language-text\">man ps</code></p>\n<blockquote>\n<p>D uninterruptible sleep (usually IO)\nI Idle kernel thread\nR running or runnable (on run queue)\nS interruptible sleep (waiting for an event to complete)\nT stopped by job control signal\nt stopped by debugger during the tracing\nW paging (not valid since the 2.6.xx kernel)\nX dead (should never be seen)\nZ defunct (\"zombie\") process, terminated but not reaped by its parent</p>\n</blockquote>\n<p>can be seen <code class=\"language-text\">ps -o pid,state,command</code></p>\n<p>technically can be used for spikes of processes, also for a zoombie processes</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--collector.processes</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_processes_state{state=\"I\"} 70\nnode_processes_state{state=\"R\"} 1\nnode_processes_state{state=\"S\"} 120\n\nnode_processes_threads_state{thread_state=\"I\"} 70\nnode_processes_threads_state{thread_state=\"R\"} 1\nnode_processes_threads_state{thread_state=\"S\"} 315</code></pre></div>\n<h2>collector.stat</h2>\n<p>Can be used to watch for services stuck waiting for IO</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--collector.stat</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_procs_blocked 0</code></pre></div>\n<h2>collector.systemd</h2>\n<p>Can be used to monitor that required services are up and running</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">--collector.systemd\n--collector.systemd.unit-include=\"(ssh|zookeeper|kafka|schema-registry|kafka-rest)\\\\.service\"</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node_systemd_unit_state{name=\"zookeeper.service\",state=\"activating\",type=\"simple\"} 0\nnode_systemd_unit_state{name=\"zookeeper.service\",state=\"active\",type=\"simple\"} 1\nnode_systemd_unit_state{name=\"zookeeper.service\",state=\"deactivating\",type=\"simple\"} 0\nnode_systemd_unit_state{name=\"zookeeper.service\",state=\"failed\",type=\"simple\"} 0\nnode_systemd_unit_state{name=\"zookeeper.service\",state=\"inactive\",type=\"simple\"} 0</code></pre></div>"}},"pageContext":{"id":"fc6a7f38-8bbd-518f-84e1-ba6380c87bf4"}},"staticQueryHashes":[]}