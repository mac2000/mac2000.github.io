{"componentChunkName":"component---src-templates-note-js","path":"/octopus-deploy-self-hosted-worker-in-kubernetes","result":{"data":{"remark":{"fields":{"path":"octopus-deploy-self-hosted-worker-in-kubernetes"},"meta":{"title":""},"headings":[{"value":"Octopus Deploy self-hosted worker in Kubernetes"}],"html":"<h1>Octopus Deploy self-hosted worker in Kubernetes</h1>\n<p>Becasue Octopus Deploy workers have no static IP addresses we are enforced to host our own workers, which has some benefits (worker from inside Kubernetes sees all services and may be used to run some integration stuff)</p>\n<p><a href=\"https://octopus.com/blog/kubernetes-workers\">Creating workers on a Kubernetes cluster</a> describes over all process of creating workers in Kuberntes</p>\n<h2>Docker image</h2>\n<p><a href=\"https://github.com/OctopusDeploy/OctopusTentacle/blob/main/docker/linux/Dockerfile\">Original image</a> has no additional tools</p>\n<p>So we are building our own</p>\n<p><div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">FROM octopusdeploy/tentacle:6.2.218\n\n# Set to Y to indicate that you accept the EULA\nENV ACCEPT_EULA=Y\n# The port on the Octopus Server that the Tentacle will poll for work. Defaults to 10943. Implies a polling Tentacle\nENV ServerPort=\"10943\"\n# The Url of the Octopus Server the Tentacle should register with\nENV ServerUrl=\"https://contoso.octopus.app\"\n# The name of the space which the Tentacle will be added to. Defaults to the default space\nENV Space=\"RUA\"\n\n# utils\nRUN apt-get update \\\n    && apt-get install -y \\\n        curl \\\n        wget \\\n        ca-certificates \\\n        jq \\\n        sudo \\\n    && echo done\n\n# powershell - https://learn.microsoft.com/en-us/powershell/scripting/install/install-debian?view=powershell-7.2#installation-on-debian-10-via-package-repository\nRUN wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb \\\n    && sudo dpkg -i packages-microsoft-prod.deb \\\n    && sudo apt-get update \\\n    && sudo apt-get install -y powershell \\\n    && rm packages-microsoft-prod.deb\n\n# kubectl - https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#install-using-native-package-management\nRUN curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg \\\n    && echo \"deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main\" | tee /etc/apt/sources.list.d/kubernetes.list \\\n    && apt-get update \\\n    && apt-get install -y kubectl\n\n\n# helm - https://helm.sh/docs/intro/install/#from-apt-debianubuntu\nRUN curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null \\\n    && apt-get install apt-transport-https --yes \\\n    && echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | tee /etc/apt/sources.list.d/helm-stable-debian.list \\\n    && apt-get update \\\n    && apt-get install helm</code></pre></div></p>\n<h2>Kubernetes</h2>\n<p>Because we preventing access to kubernetes api from outside we have \"chicken vs egg\" problem, aka we deploy everything via Octopus Deploy, but without worker being deployed we can not deploy anything, thats why worker itself should be deployed somehow outside of Octopus</p>\n<p><strong>Note about stateful set</strong></p>\n<p>Because removed pods are not removed from Octopus Deploy automatically it will become mess in future</p>\n<p>That's why we are deploying stateful set instead of deployment so naming will be always the same</p>\n<p>Note that there are examples with pre-stop lifecycle hooks which also may be used to solve this, but they not guarantied to run and add unwanted complexity</p>\n<p>Here is an example of manifest used:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> StatefulSet\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> octoworker\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> production\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> octoworker\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">serviceName</span><span class=\"token punctuation\">:</span> octoworker\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">revisionHistoryLimit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">updateStrategy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> RollingUpdate\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> octoworker\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> octoworker\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">nodeSelector</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">kubernetes.io/os</span><span class=\"token punctuation\">:</span> linux\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> octoworker\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> gcr.io/majestic<span class=\"token punctuation\">-</span>cairn<span class=\"token punctuation\">-</span>171208/octoworker<span class=\"token punctuation\">:</span>latest\n        <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ServerApiKey\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"API-XXXXXXXXXXX\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> TargetWorkerPool\n          <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"aks\"</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 50m\n            <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 256Mi\n          <span class=\"token key atrule\">limits</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 500m\n            <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 2048Mi\n        <span class=\"token key atrule\">securityContext</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">privileged</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre></div>\n<h2>Octopus Deploy</h2>\n<p>From Octopus Deploy side we should switch from \"Dynamic worker pool\" to created one</p>\n<p>In case if there are multiple environments and cluster it may be a good idea to create dedicated common variable, which may hold worker pool name dependant on environment</p>\n<h2>Migration</h2>\n<p>So now everything is almost done, but there is an problem, you may have 100500 projects in Octopus Deploy which needs to be changed</p>\n<p>Here is an sample script that may be used as an starting point to do so:</p>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">$headers = @{&#39;X-Octopus-ApiKey&#39; = $env:OCTOPUS_CLI_API_KEY }\n$projects = Invoke-RestMethod -Uri &quot;https://contoso.octopus.app/api/projects?skip=0&amp;take=1000&quot; -Headers $headers | Select-Object -ExpandProperty Items\nWrite-Host &quot;Got $($projects.Count) projects&quot;\n\nforeach ($project in $projects) {\n  # $project = $projects |? Name -eq &#39;my-awesome-app&#39;\n  Write-Host &#39;----------------------------------&#39;\n  Write-Host $project.Name\n  if ($project.IsDisabled) {\n    Write-Host &quot;skipping disabled project...&quot; -ForegroundColor Yellow\n    continue\n  }\n  $process = Invoke-RestMethod -Uri &quot;https://contoso.octopus.app$($project.Links.DeploymentProcess)&quot; -Headers $headers\n  $changed = $false\n  foreach ($step in $process.Steps) {\n    # $process.Steps | Select-Object name\n    # $step = $process.Steps[0]\n    if (-not ($step.Actions | Where-Object IsDisabled -EQ $false)) {\n      Write-Host &quot;skipping &#39;$($step.name)&#39; actions disabled...&quot; -ForegroundColor Yellow\n      continue\n    }\n    if ($step.Properties.&#39;Octopus.Action.TargetRoles&#39; -ne &#39;kube-azure&#39;) {\n      Write-Host &quot;skipping &#39;$($step.Name)&#39; has &#39;$($step.Properties.&#39;Octopus.Action.TargetRoles&#39;)&#39; taget role instead of expected &#39;kube-azure&#39;...&quot; -ForegroundColor Yellow\n      continue\n    }\n    foreach ($action in $step.Actions) {\n      # $step.Actions | Select-Object name\n      # $action = $step.Actions[0]\n      if ($action.IsDisabled) {\n        Write-Host &quot;skipping disabled action...&quot; -ForegroundColor Yellow\n        continue\n      }\n      $actionTypes = @(\n        &#39;Octopus.KubernetesDeployContainers&#39;,\n        &#39;Octopus.KubernetesDeployRawYaml&#39;,\n        &#39;Octopus.KubernetesDeployService&#39;,\n        &#39;Octopus.KubernetesDeploySecret&#39;,\n        &#39;Octopus.KubernetesDeployIngress&#39;,\n        &#39;Octopus.KubernetesDeployConfigMap&#39;\n      )\n      if ($action.ActionType -notin $actionTypes) {\n        Write-Host &quot;skipping &#39;$($action.ActionType)&#39; non kubernetes action...&quot; -ForegroundColor Yellow\n        continue\n      }\n      # raw yaml deployments has no such property but in our case it does not matter\n      # if ($action.Properties.&#39;Octopus.Action.KubernetesContainers.DeploymentResourceType&#39; -notin @(&#39;Deployment&#39;, &#39;StatefulSet&#39;)) {\n      #   Write-Host &quot;skipping &#39;$($action.Properties.&#39;Octopus.Action.KubernetesContainers.DeploymentResourceType&#39;)&#39; non deployment action...&quot; -ForegroundColor Yellow\n      #   continue\n      # }\n      if ($action.WorkerPoolId) {\n        Write-Host &quot;skipping &#39;$($action.WorkerPoolId)&#39; action has non default worker pool...&quot; -ForegroundColor Yellow\n        continue\n      }\n\n\n      &lt;#\n      $action.WorkerPoolVariable = &#39;octoworker&#39; - will switch to our self hosted workers\n      $action.WorkerPoolVariable = $null - will switch to default octopus workers\n      #&gt;\n\n      if ($action.WorkerPoolVariable -eq &#39;octoworker&#39;) {\n        Write-Host &quot;skipping already has octoworker variable...&quot; -ForegroundColor Yellow\n        continue\n      }\n      $action.WorkerPoolVariable = &#39;octoworker&#39;\n\n      # if ($action.WorkerPoolVariable -ne &#39;octoworker&#39;) {\n      #   Write-Host &quot;skipping already has octoworker variable...&quot; -ForegroundColor Yellow\n      #   continue\n      # }\n      # $action.WorkerPoolVariable = $null\n\n\n\n      $changed = $true\n    }\n  }\n\n  if ($changed) {\n    try {\n      Invoke-RestMethod -Method Put &quot;https://contoso.octopus.app$($project.Links.DeploymentProcess)&quot; -Headers $headers -Body ($process | ConvertTo-Json -Depth 100) | Out-Null\n      Write-Host &quot;$($project.Name) - success&quot; -ForegroundColor Green\n    }\n    catch {\n      Write-Host &quot;$($project.Name) - failed&quot; -ForegroundColor Red\n    }\n  }\n}</code></pre></div>\n<h2>Followup steps</h2>\n<ul>\n<li>tune resource requests and limits</li>\n<li>check if we can have probes, at least liveness</li>\n<li>consider dedicated node pool</li>\n<li>rover subgraph checks may now access all containers in environment</li>\n<li>consider priviledged service account so can run some scripts</li>\n</ul>"}},"pageContext":{"id":"7752e650-8d58-5a68-84e3-1f52be9c236e"}},"staticQueryHashes":[]}