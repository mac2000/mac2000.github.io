{"componentChunkName":"component---src-templates-note-js","path":"/uml-basics","result":{"data":{"remark":{"fields":{"path":"uml-basics"},"meta":{"title":""},"headings":[{"value":"UML basics"},{"value":"Association"},{"value":"Dependency"},{"value":"Realization (Implementation)"},{"value":"Generalization (Inheritance)"}],"html":"<h1>UML basics</h1>\n<p>Here is simples ever UML basics</p>\n<h1>Association</h1>\n<h2>Unidirectional</h2>\n<p>One object store other</p>\n<p><img src=\"/b216514d3a84ef2fae1b83e8706e5c6e/UML.svg\" alt=\"Unidirectional Association\"></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Engine</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Car</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n    * @var Engine\n    */</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$engine</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Bidirectional</h2>\n<p>Both objects know about each other</p>\n<p><img src=\"/3265c4139989e9989e26b0bd4f77ebcd/UML.svg\" alt=\"Bidirectional Association\"></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Book</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n    * @var Person\n    */</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$person</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Person</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n    * @var array Books[]\n    */</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$books</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Composition</h2>\n<p>Coupling (dependency) - object not only knowing about its dependency but also creates it. Todays trend is Dependency Injection which expects that all that objects will be passed to constructors or methods (Dependency Association)</p>\n<p><img src=\"/e366b220efb4c37f4d7061b37372525f/UML.svg\" alt=\"Composition Association\"></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Set</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Slim</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n    * @var Set\n    */</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$container</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">container</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// -- OR --</span>\n\n    <span class=\"token comment\">/**\n    * @return Set\n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getContainer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">container</span> <span class=\"token operator\">==</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">container</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">container</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Aggregation</h2>\n<p>Object knows about its children but does not create them, it recieves them through methods and/or constructor</p>\n<p><img src=\"/d5ba3042a77c3dfbf3f79f8daf68778c/UML.svg\" alt=\"Aggregation Association\"></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Swift_Transport</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Swift_Mailer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n    * @var Swift_Transport\n    */</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$transport</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n    * @param Swift_Transport $transport\n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Swift_Transport</span> <span class=\"token variable\">$transport</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">transport</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$transport</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// -- OR --</span>\n\n    <span class=\"token comment\">/**\n    * @param Swift_Transport $transport ;\n    * @return Swift_Mailer\n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Swift_Transport</span> <span class=\"token variable\">$transport</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$transport</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1>Dependency</h1>\n<p>One object uses another, but not store it</p>\n<p><img src=\"/de1c1767731c1ea391f28959d904126d/UML.svg\" alt=\"Dependency\"></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Request</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">HomeController</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">indexAction</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1>Realization (Implementation)</h1>\n<p><img src=\"/2a57ac25cabc9c491861925586dba53c/UML.svg\" alt=\"Implementation\"></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">interface</span> <span class=\"token class-name-definition class-name\">LoggerInterface</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ConsoleLogger</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">LoggerInterface</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h1>Generalization (Inheritance)</h1>\n<p><img src=\"/171141047e0686d173e7ae309dba9b31/UML.svg\" alt=\"Inheritance\"></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Response</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">HttpResponse</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Response</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>"}},"pageContext":{"id":"590a5deb-386a-5271-9d59-f7e3d19e7aa7"}},"staticQueryHashes":[]}