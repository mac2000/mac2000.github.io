{"componentChunkName":"component---src-templates-note-js","path":"/cleanup-azure-container-registry/","result":{"data":{"remark":{"fields":{"path":"cleanup-azure-container-registry"},"meta":{"title":""},"headings":[{"value":"Cleaning up Azure Container Registry"}],"html":"<h1>Cleaning up Azure Container Registry</h1>\n<p>Goal: remove unwanted images from container registry to save some space</p>\n<p>Problem: how to determine if image is safe to delete?</p>\n<p>Tag strategy: in our case all images are tagged like so <code class=\"language-text\">2.1.[build-num]-[commit-sha]-[branch-name]</code>, so image may have tags like <code class=\"language-text\">2.1.23-9c4b0a9-feature1</code> for <code class=\"language-text\">feature1</code> branch, <code class=\"language-text\">2.1.24-3e158f8-main</code> for main branch</p>\n<p>In our case we going to keep:</p>\n<ul>\n<li>images with <code class=\"language-text\">latest</code> tag</li>\n<li>images used in any cluster</li>\n<li>last 10 images for main branch</li>\n<li>last 10 images for any branch</li>\n<li>last 3 months</li>\n</ul>\n<p>Here is blueprint for the script</p>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">$registry = &#39;mactemp&#39; # mactemp.azurecr.io\n\n# Step 1: retrieve used images from all clusters\n# kubectl get all -A -o json | jq -r &#39;.. | .image? // empty&#39; | sort | uniq | wc -l\n$used = @()\nforeach($cluster in @(&#39;dev&#39;, &#39;test&#39;, &#39;prod&#39;)) {\n    kubectx $cluster\n    foreach($tag in kubectl get all -o json | ConvertFrom-Json | Select-Object -ExpandProperty items) {\n        $used += $tag | ConvertTo-Json -Depth 100 | Select-String -Pattern &#39;&quot;image&quot;: &quot;(.+)&quot;&#39; | Select-Object -ExpandProperty Matches | Select-Object -ExpandProperty Groups | Where-Object Name -EQ 1 | Select-Object -ExpandProperty Value\n    }\n}\n\n$used = $used | Sort-Object -Unique\n$used = $used | Where-Object { $_ -match &quot;$($registry).azurecr.io/&quot; }\n$used = $used | Where-Object { $_ -notmatch &#39;#{&#39; } # had few broken deployments where octopus variables like &#39;#{Octopus.Action.Package[my-app].PackageVersion}&#39; were not substituted\n$used.Count\nif ($used.Count -lt 600) {\n    Write-Host &quot;Unexpected low number of images $($used.Count)&quot; -ForegroundColor Red\n    exit 1\n}\n\n# Step 2: cleanup container registry\n# Restrictions:\n# - keep used\n# - keep latest\n# - keep last 10 tags for any branch\n# - keep last 10 tags for main branch\n# - keep last 3 months\n$repositories = az acr repository list -n $registry | ConvertFrom-Json\nforeach($repository in $repositories) {\n    $tags = az acr repository show-tags -n $registry --repository $repository --orderby time_desc --detail | ConvertFrom-Json\n\n    $lastTenTagsAnyBranch = $tags | Select-Object -First 10 -ExpandProperty name -Unique\n    $lastTenTagsMainBrans = $tags | Where-Object { ($_.name -match &#39;-main$&#39;) -or ($_.name -match &#39;-master$&#39;) } | Select-Object -First 10 -ExpandProperty name -Unique\n    $tagsToKeep = $lastTenTagsAnyBranch + $lastTenTagsMainBrans\n\n    foreach($tag in $tags) {\n        if ($tag.name.Contains(&#39;latest&#39;)) {\n            Write-Host &quot;$($repository):$($tag.name) - keep latest&quot; -ForegroundColor Cyan\n            continue\n        }\n        if (&quot;$($registry).azurecr.io/$($repository):$($tag.name)&quot; -in $used) {\n            Write-Host &quot;$($repository):$($tag.name) - keep used&quot; -ForegroundColor Cyan\n            continue\n        }\n        if ($tag.name -in $tagsToKeep) {\n            Write-Host &quot;$($repository):$($tag.name) - keep last 10&quot; -ForegroundColor Cyan\n            continue\n        }\n        $age = [int]((Get-Date).Subtract($tag.createdTime).Days)\n        if ($age -lt 90) {\n            Write-Host &quot;$($repository):$($tag.name) - keep young ($($age) days old)&quot; -ForegroundColor Cyan\n            continue\n        }\n\n        try {\n            # az acr repository delete -n $registry --image &quot;$($repository):$($tag.name)&quot; --yes\n            Write-Host &quot;$($repository):$($tag.name) - deleted&quot; -ForegroundColor Green\n        } catch {\n            Write-Host &quot;$($repository):$($tag.name) - failed&quot; -ForegroundColor Red\n        }\n    }\n}</code></pre></div>\n<p>So nothing fancy here, techincally we may even run it as GitHub scheduled action</p>\n<p>But the question is - how can we get list of all used images being outside of clusters?</p>\n<p>There is an opportunity to make yet another trick</p>\n<p>We are going to deploy small deployment, backed by powershell script (as described in <a href=\"https://mac-blog.org.ua/docker-nginx-shell-script/\">fastcgi</a> notes)</p>\n<p>It will run under elevated service account so will be able to list all images in cluster</p>\n<p>And for authentication purposes we will allow tokens signed by either Azure or GitHub</p>\n<p>Which means from GitHub actions we will sign OIDC token and just call our API in all clusters to receive all images from everywhere without the need to be inside the cluster</p>\n<p>And what is cool - no need to share/rotate/revoke any secrets - everything is \"passwordless\"</p>\n<p>First of all we need custom entry point to install fastcgi and enable it</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n\napk <span class=\"token function\">add</span> fcgiwrap spawn-fcgi <span class=\"token function\">curl</span> powershell\n\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-sLO</span> https://storage.googleapis.com/kubernetes-release/release/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> https://storage.googleapis.com/kubernetes-release/release/stable.txt<span class=\"token variable\">)</span></span>/bin/linux/amd64/kubectl\n<span class=\"token function\">chmod</span> +x kubectl\n<span class=\"token function\">mv</span> ./kubectl /usr/bin/kubectl\n\n/usr/bin/spawn-fcgi <span class=\"token parameter variable\">-s</span> /var/run/fcgiwrap.socket <span class=\"token parameter variable\">-M</span> <span class=\"token number\">766</span> /usr/bin/fcgiwrap</code></pre></div>\n<p>We are installing wanted tools like powershell, kubectl, fastcgi itself and spawning fastcgi</p>\n<p>The idea behind all this is that we even do not need dedicated docker image, so there is nothing to build or publish we are just building the thing by configuring existing tools in a right order</p>\n<p>The next step is to configure nginx</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">server {\n  listen 80;\n  root   /usr/share/nginx/html;\n\n  location / {\n    index  index.ps1;\n    fastcgi_pass unix:/var/run/fcgiwrap.socket;\n    fastcgi_param HTTP_AUTHORIZATION $http_authorization;\n    fastcgi_param SCRIPT_FILENAME /usr/share/nginx/html/index.ps1;\n  }\n}</code></pre></div>\n<p>Note how we are manually passing HTTP authorization header to our script, it will be available as corresponding envionrment variable, and our goal is to validate incomming request authorization before giving the response (read below)</p>\n<p>And finaly our script boilerplate</p>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">#!/usr/bin/env pwsh\n\nWrite-Host &quot;Content-Type: text/plain&quot;\nWrite-Host &quot;&quot;\nWrite-Host &quot;Hello, auth: $($env:HTTP_AUTHORIZATION)&quot;</code></pre></div>\n<p>Now to deploy all this we need prepare manifests</p>\n<p>First of all we gonna need service account that is allowed to list resources, this will be needed to retrieve images used by this resources</p>\n<p><strong>service-account.yml</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images</code></pre></div>\n<p><strong>cluster-role-binding.yml</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ClusterRoleBinding\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n<span class=\"token key atrule\">roleRef</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apiGroup</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io\n  <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ClusterRole\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> view\n<span class=\"token key atrule\">subjects</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n    <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> production</code></pre></div>\n<p>Note: do not forget to change namespace and probably the actual role, I just used prebuild one</p>\n<p>Our deployment</p>\n<p><strong>deployment.yml</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">serviceAccountName</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n      <span class=\"token key atrule\">nodeSelector</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">kubernetes.io/os</span><span class=\"token punctuation\">:</span> linux\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span>alpine\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n          <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 10m\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 64Mi\n            <span class=\"token key atrule\">limits</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 500m\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 1536Mi\n          <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /docker<span class=\"token punctuation\">-</span>entrypoint.d/00<span class=\"token punctuation\">-</span>entrypoint.sh\n              <span class=\"token key atrule\">subPath</span><span class=\"token punctuation\">:</span> entrypoint.sh\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /etc/nginx/conf.d/default.conf\n              <span class=\"token key atrule\">subPath</span><span class=\"token punctuation\">:</span> default.conf\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /usr/share/nginx/html/index.ps1\n              <span class=\"token key atrule\">subPath</span><span class=\"token punctuation\">:</span> index.ps1\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n          <span class=\"token key atrule\">configMap</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n            <span class=\"token key atrule\">defaultMode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span></code></pre></div>\n<p>Nothing fancy here, nginx image does automatically run all scripts under <code class=\"language-text\">/docker-entrypoint.d</code> so we are passing our entrypoint and two other files are self explanatory</p>\n<p><strong>service.yml</strong></p>\n<p>For demo purposes creating <code class=\"language-text\">LoadBalancer</code> service, but in real life you would want <code class=\"language-text\">ClusterIP</code> and run it behind ingress</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> LoadBalancer\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<p>And finaly</p>\n<p><strong>kustomization.yml</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> service<span class=\"token punctuation\">-</span>account.yml\n  <span class=\"token punctuation\">-</span> cluster<span class=\"token punctuation\">-</span>role<span class=\"token punctuation\">-</span>binding.yml\n  <span class=\"token punctuation\">-</span> deployment.yml\n  <span class=\"token punctuation\">-</span> service.yml\n<span class=\"token key atrule\">configMapGenerator</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n    <span class=\"token key atrule\">files</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> entrypoint.sh\n    <span class=\"token punctuation\">-</span> default.conf\n    <span class=\"token punctuation\">-</span> index.ps1\n<span class=\"token key atrule\">generatorOptions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">disableNameSuffixHash</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n<span class=\"token key atrule\">commonLabels</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n<span class=\"token key atrule\">commonAnnotations</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">owner</span><span class=\"token punctuation\">:</span> marchenko.alexandr@gmail.com\n  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/mac2000/notes</code></pre></div>\n<p>After applying all this, we should be able to curl service and it should respond us with hello message</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-k</span> <span class=\"token builtin class-name\">.</span>\nkubectl get svc docker-images\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Authorization: Bearer ACME\"</span> http://20.103.153.129/whatever</code></pre></div>\n<p>and you should see</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Hello, auth: Bearer ACME</code></pre></div>\n<p>Notes:</p>\n<ul>\n<li>if it is not working double check paths and file names everywhere, in my case I forgot to rename <code class=\"language-text\">index.sh</code> to <code class=\"language-text\">index.ps1</code> here and there</li>\n<li>if it still does not work, try running it locally like so <code class=\"language-text\">docker run -it --rm -p 8080:80 -v \"$PWD/entrypoint.sh:/docker-entrypoint.d/00-entrypoint.sh\" -v \"$PWD/default.conf:/etc/nginx/conf.d/default.conf\" -v \"$PWD/index.ps1:/usr/share/nginx/html/index.ps1\" nginx:alpine</code></li>\n</ul>\n<p>Now, when boilerplate is ready the only thing left for us is to modify our <code class=\"language-text\">index.ps1</code> so it will:</p>\n<ul>\n<li>verify incomming authorization header</li>\n<li>if everything is ok respond with used images</li>\n</ul>\n<p>Second part is already done in script at the beginning so lets start from it aka:</p>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">#!/usr/bin/env pwsh\n\nif (-not $env:HTTP_AUTHORIZATION) {\n  Write-Host &quot;Status: 401&quot;\n  Write-Host &quot;Content-Type: text/plain&quot;\n  Write-Host &quot;&quot;\n  Write-Host &quot;Unauthorized&quot;\n  return\n}\n# TODO: verify $env:HTTP_AUTHORIZATION\n\nWrite-Host &quot;Content-Type: application/json&quot;\nWrite-Host &quot;&quot;\n$used = @()\nforeach($tag in kubectl get all -A -o json | ConvertFrom-Json | Select-Object -ExpandProperty items) {\n  $used += $tag | ConvertTo-Json -Depth 100 | Select-String -Pattern &#39;&quot;image&quot;: &quot;(.+)&quot;&#39; | Select-Object -ExpandProperty Matches | Select-Object -ExpandProperty Groups | Where-Object Name -EQ 1 | Select-Object -ExpandProperty Value\n}\n$used = $used | Sort-Object -Unique\n$used | ConvertTo-Json | Out-Host</code></pre></div>\n<p>And here is when everything was screwed up</p>\n<p>Powershell not only slow but eats memory just to give you an idea even 1Gb of RAM is not enough which is way to big for such small script</p>\n<p>My idea was to later introduce following snippet of JWT verification</p>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">$token = $env:HTTP_AUTHORIZATION\n\n# extract header as json object\n$header = $token.Split(&#39;.&#39;)[0]\n$header = $header.Replace(&#39;-&#39;, &#39;+&#39;).Replace(&#39;_&#39;, &#39;/&#39;)\n$header = $header.PadRight($header.Length + (3 - (($header.Length + 3) % 4)), &#39;=&#39;)\n$header = [Convert]::FromBase64String($header)\n$header = [System.Text.Encoding]::UTF8.GetString($header)\n$header = ConvertFrom-Json($header)\n# $header # {&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;RS256&quot;,&quot;x5t&quot;:&quot;eBZ_cn3sXYAd0ch4THBKHIgOwOE&quot;,&quot;kid&quot;:&quot;78167F727DEC5D801DD1C8784C704A1C880EC0E1&quot;}\n\n# extract payload as json object\n$payload = $token.Split(&#39;.&#39;)[1]\n$payload = $payload.Replace(&#39;-&#39;, &#39;+&#39;).Replace(&#39;_&#39;, &#39;/&#39;)\n$payload = $payload.PadRight($payload.Length + (3 - (($payload.Length + 3) % 4)), &#39;=&#39;)\n$payload = [Convert]::FromBase64String($payload)\n$payload = [System.Text.Encoding]::UTF8.GetString($payload)\n$payload = ConvertFrom-Json($payload)\n# $payload # {&quot;iss&quot;:&quot;https://token.actions.githubusercontent.com&quot;,&quot;sub&quot;:&quot;repo:mac2000/token:ref:refs/heads/main&quot;...\n\n# signature bytes\n$signature = $token.Split(&#39;.&#39;)[2]\n$signature = $signature.Replace(&#39;-&#39;, &#39;+&#39;).Replace(&#39;_&#39;, &#39;/&#39;)\n$signature = $signature.PadRight($signature.Length + (3 - (($signature.Length + 3) % 4)), &#39;=&#39;)\n$signature = [Convert]::FromBase64String($signature)\n# $signature # array of bytes\n\n# retrieve key info used to sign the token\n$issuer = $payload.iss # https://sts.windows.net/695e64b5-2d13-4ea8-bb11-a6fda2d60c41/\n$jwks = Invoke-RestMethod &quot;$($issuer.TrimEnd(&#39;/&#39;))/.well-known/openid-configuration&quot; | Select-Object -ExpandProperty jwks_uri # https://login.windows.net/common/discovery/keys\n$keys = Invoke-RestMethod $jwks | Select-Object -ExpandProperty keys\n$key = $keys | Where-Object kid -EQ $header.kid # {&quot;kty&quot;:&quot;RSA&quot;,&quot;use&quot;:&quot;sig&quot;,&quot;kid&quot;:&quot;-KI3Q9nNR7bRofxmeZoXqbHZGew&quot;,&quot;n&quot;:&quot;base64url(modulus)&quot;,&quot;e&quot;:&quot;base64url(expnent)&quot;...\n\n\n$rsa = New-Object System.Security.Cryptography.RSACryptoServiceProvider\n$modulus = $key.n\n$modulus = $modulus.Replace(&#39;-&#39;, &#39;+&#39;).Replace(&#39;_&#39;, &#39;/&#39;)\n$modulus = $modulus.PadRight($modulus.Length + (3 - (($modulus.Length + 3) % 4)), &#39;=&#39;)\n$modulus = [Convert]::FromBase64String($modulus)\n$exponent = $key.e\n$exponent = $exponent.Replace(&#39;-&#39;, &#39;+&#39;).Replace(&#39;_&#39;, &#39;/&#39;)\n$exponent = $exponent.PadRight($exponent.Length + (3 - (($exponent.Length + 3) % 4)), &#39;=&#39;)\n$exponent = [Convert]::FromBase64String($exponent)\n$p = New-Object System.Security.Cryptography.RSAParameters\n$p.Modulus = $modulus\n$p.Exponent = $exponent\n$rsa.ImportParameters($p)\n\n# verify signature - we are comparing &quot;header.payload&quot; with signature from incomming token if they equal - token is valid\n$valid = $rsa.VerifyData([System.Text.Encoding]::UTF8.GetBytes(($token.Split(&#39;.&#39;)[0] + &#39;.&#39; + $token.Split(&#39;.&#39;)[1])), $signature, [System.Security.Cryptography.HashAlgorithmName]::SHA256, [System.Security.Cryptography.RSASignaturePadding]::Pkcs1)\n\nif ($valid) {\n    Write-Output &quot;JWT token signature is valid&quot;\n} else {\n    Write-Output &quot;JWT token signature is not valid&quot;\n}</code></pre></div>\n<p>Which can be used to verify incomming JWT tokens</p>\n<p>The beauty of approach is that we have full control and it does not matter if token comes from Azure, Google or in our case GitHub</p>\n<p>Also we can describe as many rules as we want</p>\n<p>As about GitHub it will be something like</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/github<span class=\"token punctuation\">-</span>script@v6\n  <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n      core.getIDToken('docker-images')\n        .then(token => fetch('https://docker-images.mac-blog.org.ua', {headers: {Authorization: `Bearer ${token}`}}))\n        .then(res => res.json())\n        .then(images => console.log(images))</span></code></pre></div>\n<p>So we can talk to our cluster without sharing secrets and retrieve images</p>\n<p>But in current implementation resource usage is not acceptable</p>\n<p>Alternative approach may be to run kubectl proxy, something like this:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ClusterRoleBinding\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n<span class=\"token key atrule\">roleRef</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apiGroup</span><span class=\"token punctuation\">:</span> rbac.authorization.k8s.io\n  <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ClusterRole\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> view\n<span class=\"token key atrule\">subjects</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n    <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> production\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mactemp\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">serviceAccountName</span><span class=\"token punctuation\">:</span> mactemp\n  <span class=\"token key atrule\">nodeSelector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">kubernetes.io/os</span><span class=\"token punctuation\">:</span> linux\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n      <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> bitnami/kubectl\n      <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"kubectl\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"proxy\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--address=0.0.0.0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--port=8001\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--reject-methods='POST,PUT,PATCH,DELETE'\"</span><span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8001</span>\n      <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">limits</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 500m\n          <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 128Mi\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n      <span class=\"token key atrule\">configMap</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> LoadBalancer\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mactemp\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8001</span></code></pre></div></p>\n<p>And it indeed works but it seems to be much more than needed, even so we are giving readonly kind of access it is much more than wanted images</p>\n<p>Another alternative will be to try make all this with help of good old bash script, the hardest part will be token validation and indeed image retireval may be done as easy as</p>\n<p><strong>index.sh</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/usr/bin/env bash</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Content-Type: text/plain\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span>\nkubectl get all <span class=\"token parameter variable\">-A</span> <span class=\"token parameter variable\">-o</span> json <span class=\"token operator\">|</span> jq <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'.. | .image? // empty'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span></code></pre></div>\n<p>but verification of JWT token is a nightmare</p>\n<p>One another approach will be to use oauth2-proxy, the downside here is that it supports only one provider which means it is a one way ticket e.g. it will work only with GitHub tokens and there will be no options to call it with Azure tokens</p>\n<p>So here is deployment with oauth proxy</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">serviceAccountName</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n      <span class=\"token key atrule\">nodeSelector</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">kubernetes.io/os</span><span class=\"token punctuation\">:</span> linux\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span>alpine\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n          <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 10m\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 64Mi\n            <span class=\"token key atrule\">limits</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 500m\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 1024Mi\n          <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /docker<span class=\"token punctuation\">-</span>entrypoint.d/00<span class=\"token punctuation\">-</span>entrypoint.sh\n              <span class=\"token key atrule\">subPath</span><span class=\"token punctuation\">:</span> entrypoint.sh\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /etc/nginx/conf.d/default.conf\n              <span class=\"token key atrule\">subPath</span><span class=\"token punctuation\">:</span> default.conf\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /usr/share/nginx/html/index.sh\n              <span class=\"token key atrule\">subPath</span><span class=\"token punctuation\">:</span> index.sh\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> auth\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> bitnami/oauth2<span class=\"token punctuation\">-</span>proxy\n          <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> IfNotPresent\n          <span class=\"token key atrule\">args</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># GITHUB</span>\n            <span class=\"token comment\"># ------</span>\n            <span class=\"token comment\"># # restrictions (repository_owner=rabotaua, repository=rabotaua/mactemp, ref=refs/heads/main, sha=616c..., repository_visibility=private, actor=mac2000, workflow=main)</span>\n            <span class=\"token comment\"># - \"--oidc-groups-claim=repository_owner\"</span>\n            <span class=\"token comment\"># - \"--allowed-group=rabotaua\"</span>\n            <span class=\"token comment\"># # allowed audience</span>\n            <span class=\"token comment\"># - \"--client-id=acr\"</span>\n            <span class=\"token comment\"># # allowed issuer</span>\n            <span class=\"token comment\"># - \"--oidc-issuer-url=https://token.actions.githubusercontent.com\"</span>\n            <span class=\"token comment\"># # act as jwt verifier</span>\n            <span class=\"token comment\"># - \"--skip-jwt-bearer-tokens=true\"</span>\n            <span class=\"token comment\"># # respond on success</span>\n            <span class=\"token comment\"># - \"--upstream=http://localhost\"</span>\n            <span class=\"token comment\"># # default is 127.0.0.1:4180</span>\n            <span class=\"token comment\"># - \"--http-address=0.0.0.0:4180\"</span>\n            <span class=\"token comment\"># # rest is required but values does not matter</span>\n            <span class=\"token comment\"># - \"--standard-logging=true\"</span>\n            <span class=\"token comment\"># - \"--auth-logging=true\"</span>\n            <span class=\"token comment\"># - \"--request-logging=true\"</span>\n            <span class=\"token comment\"># - \"--provider=oidc\"</span>\n            <span class=\"token comment\"># - \"--client-secret=whatever\"</span>\n            <span class=\"token comment\"># - \"--email-domain=*\"</span>\n            <span class=\"token comment\"># - \"--cookie-secret=BFNF3nGJmIzVxojA8g68kbZwowEVQr9wKICF-LsTJTs=\"</span>\n            <span class=\"token comment\"># - \"--upstream-timeout=60s\"</span>\n            <span class=\"token comment\"># - \"--force-json-errors=true\"</span>\n            <span class=\"token comment\"># AZURE</span>\n            <span class=\"token comment\"># -----</span>\n            <span class=\"token comment\"># # restrictions (repository_owner=rabotaua, repository=rabotaua/mactemp, ref=refs/heads/main, sha=616c..., repository_visibility=private, actor=mac2000, workflow=main)</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--oidc-groups-claim=groups\"</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--allowed-group=82281f89-d39e-4203-b9b4-a388a1361ac7\"</span>\n            <span class=\"token comment\"># allowed audience</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--client-id=https://management.core.windows.net/\"</span>\n            <span class=\"token comment\"># allowed issuer</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--oidc-issuer-url=https://sts.windows.net/695e64b5-2d13-4ea8-bb11-a6fda2d60c41/\"</span>\n            <span class=\"token comment\"># act as jwt verifier</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--skip-jwt-bearer-tokens=true\"</span>\n            <span class=\"token comment\"># respond on success</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--upstream=http://127.0.0.1:80\"</span>\n            <span class=\"token comment\"># default is 127.0.0.1:4180</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--http-address=0.0.0.0:4180\"</span>\n            <span class=\"token comment\"># rest is required but values does not matter</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--standard-logging=true\"</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--auth-logging=true\"</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--request-logging=true\"</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--provider=oidc\"</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--client-secret=whatever\"</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--email-domain=*\"</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--cookie-secret=BFNF3nGJmIzVxojA8g68kbZwowEVQr9wKICF-LsTJTs=\"</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--upstream-timeout=60s\"</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token string\">\"--force-json-errors=true\"</span>\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4180</span>\n          <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 10m\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 64Mi\n            <span class=\"token key atrule\">limits</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 500m\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 128Mi\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n          <span class=\"token key atrule\">configMap</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker<span class=\"token punctuation\">-</span>images\n            <span class=\"token key atrule\">defaultMode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span></code></pre></div>\n<p>Note: for test purposes I added Azure instead of GitHub so I can test it like so</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Authorization: Bearer <span class=\"token variable\"><span class=\"token variable\">$(</span>az account get-access-token <span class=\"token parameter variable\">--query</span><span class=\"token operator\">=</span>accessToken <span class=\"token parameter variable\">-o</span> tsv<span class=\"token variable\">)</span></span>\"</span> http://51.105.108.100:4180/</code></pre></div>\n<p>Also few small adjustments are required like allowed groups or repositories and it is important to increase default timeout which is not enough</p>\n<p>But still, even with plain bash script in Prometheus I see spikes to up to 500mb of RAM usage which drives me crazy, arghhh....</p>\n<p>But technically speaking the goal achieved, from now we can deploy this and create github action that will traverse all clusters with its token, receive used images and then delete unwanted images from container registry</p>\n<p>Wondering, how it may look like in Go, and if it is possible to run go server without building image</p>"}},"pageContext":{"id":"0e66aed4-6ccb-58c1-9ec3-947c48300652"}},"staticQueryHashes":[],"slicesMap":{}}