{"componentChunkName":"component---src-templates-note-js","path":"/dotnet-trace-running-app/","result":{"data":{"remark":{"fields":{"path":"dotnet-trace-running-app"},"meta":{"title":""},"headings":[{"value":"trace running dotnet app (flame graph)"}],"html":"<h1>trace running dotnet app (flame graph)</h1>\n<p>finally after figuring out how to do it with nodejs</p>\n<p><img src=\"https://www.youtube.com/watch?v=P-SqxhVvSwI\" alt=\"https://img.youtube.com/vi/P-SqxhVvSwI/0.jpg\"></p>\n<p>it is turn for dotnet</p>\n<p>imagine we have an application running inside Kubernetes</p>\n<p>it is behaves bad and we literally have no idea why</p>\n<p>here is how it may be done</p>\n<p>choose victim pod</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get po <span class=\"token parameter variable\">-l</span> <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>my-awesome-app</code></pre></div>\n<p>connect to it</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> my-awesome-app-xxxx-yyyy -- <span class=\"token function\">sh</span></code></pre></div>\n<p>install required software if needed</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">apk <span class=\"token function\">add</span> <span class=\"token function\">wget</span>\napk <span class=\"token function\">add</span> <span class=\"token function\">bash</span></code></pre></div>\n<p>install corresponding dotnet sdk</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://dot.net/v1/dotnet-install.sh\n<span class=\"token function\">chmod</span> +x dotnet-install.sh\n./dotnet-install.sh <span class=\"token parameter variable\">--channel</span> <span class=\"token number\">7.0</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.dotnet:<span class=\"token environment constant\">$PATH</span>\"</span></code></pre></div>\n<p>install dotnet trace tool</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">dotnet tool <span class=\"token function\">install</span> <span class=\"token parameter variable\">--global</span> dotnet-trace\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$PATH</span>:/root/.dotnet/tools\"</span></code></pre></div>\n<p>find process id (pid) of your app</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">dotnet-trace <span class=\"token function\">ps</span></code></pre></div>\n<p>it should output something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\"><span class=\"token number\">1</span>  dotnet  share<span class=\"token operator\">/</span>dotnet<span class=\"token operator\">/</span>dotnet  dotnet Api<span class=\"token punctuation\">.</span>dll</code></pre></div>\n<p>where <code class=\"language-text\">1</code> is your pid</p>\n<p>start collecting data for pid 1</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">dotnet-trace collect <span class=\"token parameter variable\">-p</span> <span class=\"token number\">1</span></code></pre></div>\n<p>it will start collecting data and after pressing enter stop in logs you will see</p>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\">Press <span class=\"token operator\">&lt;</span>Enter<span class=\"token operator\">></span> or <span class=\"token operator\">&lt;</span>Ctrl<span class=\"token operator\">+</span>C<span class=\"token operator\">></span> to exit\nOutput File    <span class=\"token operator\">:</span> <span class=\"token file-path string\">/app/dotnet_20250402_074040.nettrace</span></code></pre></div>\n<p>now you need to copy this file from pod to your local machine</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl <span class=\"token function\">cp</span> my-awesome-app-xxxx-yyyy:/app/dotnet_20250402_074040.nettrace demo.nettrace</code></pre></div>\n<blockquote>\n<p>note: nettrace files can be opened with <a href=\"https://www.jetbrains.com/profiler/\">dotTrace</a> if you have it</p>\n</blockquote>\n<p>the next step will be to convert it to json</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">dotnet-trace convert <span class=\"token parameter variable\">--format</span> speedscope <span class=\"token parameter variable\">--output</span> demo.json demo.nettrace</code></pre></div>\n<blockquote>\n<p>for this to work you need to install dotnet trace tool locally as well</p>\n</blockquote>\n<p>and finally</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">open</span> https://www.speedscope.app</code></pre></div>\n<p>and upload your json file, you should see an flame graph with details of whats going on</p>"}},"pageContext":{"id":"70da7026-3d0a-54e2-a55a-2c8d513e4400"}},"staticQueryHashes":[],"slicesMap":{}}