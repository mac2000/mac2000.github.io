{"componentChunkName":"component---src-templates-note-js","path":"/ashx-png-handle-exception","result":{"data":{"remark":{"fields":{"path":"ashx-png-handle-exception"},"meta":{"title":""},"headings":[{"value":"PNG ASHX handle Exceptions"}],"html":"<h1>PNG ASHX handle Exceptions</h1>\n<p>Suppose that we have some ashx that responses with png images.</p>\n<p>Here is way to handle exceptions:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>@ <span class=\"token class-name\">WebHandler</span> Language<span class=\"token operator\">=</span><span class=\"token string\">\"C#\"</span> Class<span class=\"token operator\">=</span><span class=\"token string\">\"example\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Web</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Drawing</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Imaging</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>IO</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">example</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IHttpHandler</span></span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> ProcessRequest <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpContext</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tcontext<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span>ContentType <span class=\"token operator\">=</span> <span class=\"token string\">\"image/png\"</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">try</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">.</span><span class=\"token function\">IsNullOrEmpty</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>Params<span class=\"token punctuation\">[</span><span class=\"token string\">\"ID\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ID is required\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\">// your image generation code here...</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tcontext<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span><span class=\"token function\">BinaryWrite</span><span class=\"token punctuation\">(</span><span class=\"token function\">GenerateMessage</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> IsReusable <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">get</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">protected</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">GenerateMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> message<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Bitmap</span> objBmpImage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Bitmap</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\"><span class=\"token keyword\">int</span></span> intWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\"><span class=\"token keyword\">int</span></span> intHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">Font</span> objFont <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Font</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Arial\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>FontStyle<span class=\"token punctuation\">.</span>Bold<span class=\"token punctuation\">,</span> System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>GraphicsUnit<span class=\"token punctuation\">.</span>Pixel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">Graphics</span> objGraphics <span class=\"token operator\">=</span> Graphics<span class=\"token punctuation\">.</span><span class=\"token function\">FromImage</span><span class=\"token punctuation\">(</span>objBmpImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tintWidth <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>objGraphics<span class=\"token punctuation\">.</span><span class=\"token function\">MeasureString</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> objFont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Width<span class=\"token punctuation\">;</span>\n\t\tintHeight <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>objGraphics<span class=\"token punctuation\">.</span><span class=\"token function\">MeasureString</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> objFont<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Height<span class=\"token punctuation\">;</span>\n\t\tobjBmpImage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Bitmap</span><span class=\"token punctuation\">(</span>objBmpImage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>intWidth<span class=\"token punctuation\">,</span> intHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tobjGraphics <span class=\"token operator\">=</span> Graphics<span class=\"token punctuation\">.</span><span class=\"token function\">FromImage</span><span class=\"token punctuation\">(</span>objBmpImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tobjGraphics<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span>Color<span class=\"token punctuation\">.</span>White<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tobjGraphics<span class=\"token punctuation\">.</span>SmoothingMode <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Drawing2D<span class=\"token punctuation\">.</span>SmoothingMode<span class=\"token punctuation\">.</span>AntiAlias<span class=\"token punctuation\">;</span>\n\t\tobjGraphics<span class=\"token punctuation\">.</span>TextRenderingHint <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>TextRenderingHint<span class=\"token punctuation\">.</span>AntiAlias<span class=\"token punctuation\">;</span>\n\t\tobjGraphics<span class=\"token punctuation\">.</span><span class=\"token function\">DrawString</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> objFont<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SolidBrush</span><span class=\"token punctuation\">(</span>Color<span class=\"token punctuation\">.</span><span class=\"token function\">FromArgb</span><span class=\"token punctuation\">(</span><span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tobjGraphics<span class=\"token punctuation\">.</span><span class=\"token function\">Flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">MemoryStream</span> mem <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MemoryStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tobjBmpImage<span class=\"token punctuation\">.</span><span class=\"token function\">Save</span><span class=\"token punctuation\">(</span>mem<span class=\"token punctuation\">,</span> ImageFormat<span class=\"token punctuation\">.</span>Png<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> mem<span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>"}},"pageContext":{"id":"5c9ed9a5-9623-5043-a867-77f1470525be"}},"staticQueryHashes":[]}