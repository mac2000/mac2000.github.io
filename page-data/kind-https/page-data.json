{"componentChunkName":"component---src-templates-note-js","path":"/kind-https/","result":{"data":{"remark":{"fields":{"path":"kind-https"},"meta":{"title":""},"headings":[{"value":"Local Kubernetes with Ingress and HTTPS"}],"html":"<h1>Local Kubernetes with Ingress and HTTPS</h1>\n<p>In my case, from time to time there is a need to run some services with TLS/HTTPS enabled</p>\n<p>There are some notes here and there, as well as publicly available certificates but each time it is a pain, so decided to write a note for myself in future</p>\n<blockquote>\n<p>Prerequisites: it is expected that docker and kind are already installed</p>\n</blockquote>\n<h2>Kubernetes</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> kind create cluster <span class=\"token parameter variable\">--config</span><span class=\"token operator\">=</span>-</span>\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  kubeadmConfigPatches:\n  - |\n    kind: InitConfiguration\n    nodeRegistration:\n      kubeletExtraArgs:\n        node-labels: \"ingress-ready=true\"\n  extraPortMappings:\n  - containerPort: 80\n    hostPort: 80\n    protocol: TCP\n  - containerPort: 443\n    hostPort: 443\n    protocol: TCP\nEOF</span>\nkubectl <span class=\"token function\">wait</span> <span class=\"token parameter variable\">--for</span><span class=\"token operator\">=</span>condition<span class=\"token operator\">=</span>Ready <span class=\"token function\">node</span> <span class=\"token parameter variable\">--all</span> <span class=\"token parameter variable\">--timeout</span><span class=\"token operator\">=</span>90s</code></pre></div>\n<p>Note:</p>\n<ul>\n<li>instead of usual <code class=\"language-text\">kind create cluster</code> we are running all this to configure it so it is ready to serve web traffic</li>\n<li>after creation we will wait till it starts</li>\n<li>context should be switched automatically but if not run <code class=\"language-text\">kubectx kind-kind</code></li>\n</ul>\n<h2>Ingress</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml\nkubectl <span class=\"token parameter variable\">-n</span> ingress-nginx rollout status deployment ingress-nginx-controller <span class=\"token parameter variable\">--timeout</span><span class=\"token operator\">=</span>10m</code></pre></div>\n<p>Notes:</p>\n<ul>\n<li>to keep things simple, we are going to use nginx ingress default setup</li>\n</ul>\n<h2>localhost.direct</h2>\n<p><a href=\"https://github.com/Upinel/localhost.direct\">localhost.direct</a> is a great project that provides an SSL certificate for <code class=\"language-text\">*.localhost.direct</code> which resolves everything to localhost</p>\n<p>so instead of having hard times with cert-manager and let's encrypt we are going to use it instead</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://aka.re/localhost\n<span class=\"token function\">unzip</span> <span class=\"token parameter variable\">-P</span> IWillNotPutKeyFileInPublicAccessiblePlace localhost\n<span class=\"token function\">rm</span> localhost\n<span class=\"token function\">mv</span> <span class=\"token string\">'localhost.direct;*.localhost.direct.cert'</span> localhost.direct.crt\n<span class=\"token function\">mv</span> <span class=\"token string\">'localhost.direct;*.localhost.direct.key'</span> localhost.direct.key\nkubectl create secret tls tls <span class=\"token parameter variable\">--cert</span><span class=\"token operator\">=</span>localhost.direct.crt <span class=\"token parameter variable\">--key</span><span class=\"token operator\">=</span>localhost.direct.key\n<span class=\"token function\">rm</span> localhost.direct.crt localhost.direct.key</code></pre></div>\n<p>Notes:</p>\n<ul>\n<li>actual password is usually published in github readme</li>\n<li><strong>DO NOT</strong> publish key file - otherwise whole cert may be revoked for everyone</li>\n<li>we are creating kubernetes from this files, after that cleaning up them</li>\n</ul>\n<h2>Demo application</h2>\n<p>Having all that in place lets deploy our demo app</p>\n<p><strong>demo.yml</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> demo\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> demo\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> demo\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n          <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 50m\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 64Mi\n            <span class=\"token key atrule\">limits</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 500m\n              <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 526Mi\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> demo\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Ingress\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> demo.localhost.direct\n      <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n                <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">number</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /\n            <span class=\"token key atrule\">pathType</span><span class=\"token punctuation\">:</span> ImplementationSpecific\n  <span class=\"token key atrule\">tls</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> demo.localhost.direct\n      <span class=\"token key atrule\">secretName</span><span class=\"token punctuation\">:</span> tls</code></pre></div>\n<p>as you can see nothing special here at all</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-f</span> kube.yml\nkubectl rollout status deployment demo <span class=\"token parameter variable\">--timeout</span><span class=\"token operator\">=</span>1m</code></pre></div>\n<p>and now, finally both commands should work as expected</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> https://demo.localhost.direct\n<span class=\"token function\">open</span> https://demo.localhost.direct</code></pre></div>\n<h2>Optional: CoreDNS wildcard subdomain</h2>\n<p>There is one more step you may want to do</p>\n<p>Let's configure everything in a way so all services inside Kubernetes will resolve this domain to ingress</p>\n<p>so suddenly you may <code class=\"language-text\">curl https://demo.localhost.direct</code> from your host machine and from any service inside the cluster</p>\n<p>to do it, edit core dns config map:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> kube-system edit cm coredns</code></pre></div>\n<p>here is whole <code class=\"language-text\">Corefile</code> with comments what have been added</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.:53 {\n    errors\n    health {\n        lameduck 5s\n    }\n    ready\n    kubernetes cluster.local in-addr.arpa ip6.arpa {\n        pods insecure\n        fallthrough in-addr.arpa ip6.arpa\n        ttl 30\n    }\n\n    # POI: coredns, wildcard subdomain, resolve to ingress service\n    template IN A localhost.direct {\n        match .*\\.localhost\\.direct\\.\n        answer \"{{.Name}} 60 IN CNAME ingress-nginx-controller.ingress-nginx.svc.cluster.local\"\n    }\n\n    prometheus :9153\n    forward . /etc/resolv.conf {\n        max_concurrent 1000\n    }\n    cache 30\n    loop\n    reload\n    loadbalance\n}</code></pre></div>\n<p>Note: instead of CNAME we may use A recod like so <code class=\"language-text\">answer \"{{.Name}} 60 IN A 10.96.186.124\"</code></p>\n<p>After editing config map coredns should realod but just in case you may want to run</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl rollout restart deployment coredns <span class=\"token parameter variable\">-n</span> kube-system\nkubectl rollout status deployment coredns <span class=\"token parameter variable\">-n</span> kube-system <span class=\"token parameter variable\">--timeout</span><span class=\"token operator\">=</span>1m</code></pre></div>\n<p>as well as check logs</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> kube-system logs <span class=\"token parameter variable\">-l</span> k8s-app<span class=\"token operator\">=</span>kube-dns <span class=\"token parameter variable\">-f</span></code></pre></div>\n<p>and finally perform a test</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">--image</span><span class=\"token operator\">=</span>ubuntu mactemp -- <span class=\"token function\">bash</span></code></pre></div>\n<p>and once you are inside container</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> <span class=\"token parameter variable\">-qq</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">curl</span> netcat-traditional dnsutils\n<span class=\"token function\">curl</span> https://demo.localhost.direct</code></pre></div>\n<h2>Cleanup</h2>\n<p>Once you are done, just run</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kind delete cluster</code></pre></div>\n<h2>Links</h2>\n<ul>\n<li><a href=\"https://mac-blog.org.ua/kubernetes-coredns-wildcard-ingress/\">CoreDNS custom wildcard domain for internal ingress</a></li>\n<li><a href=\"https://get.localhost.direct\">A better localhost with HTTPS (SSL) and sub-domain support</a></li>\n</ul>"}},"pageContext":{"id":"d12310e1-c871-5dba-b64a-3389a31f1500"}},"staticQueryHashes":[],"slicesMap":{}}