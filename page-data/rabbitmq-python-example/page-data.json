{"componentChunkName":"component---src-templates-note-js","path":"/rabbitmq-python-example/","result":{"data":{"remark":{"fields":{"path":"rabbitmq-python-example"},"meta":{"title":""},"headings":[{"value":"RabbitMQ python example with expire and reject"}],"html":"<h1>RabbitMQ python example with expire and reject</h1>\n<p>Based on: <a href=\"http://www.rabbitmq.com/tutorials/tutorial-two-python.html\">http://www.rabbitmq.com/tutorials/tutorial-two-python.html</a></p>\n<p>This example demonstrates how to reject jobs that can not be done at moment on current worker, handling retries count and job expiration</p>\n<h2>send.py</h2>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token keyword\">import</span> pika\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> datetime\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> sys\n\ncount <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># read from command line arguments count of jobs to create</span>\nqueue <span class=\"token operator\">=</span> <span class=\"token string\">'retries'</span> <span class=\"token comment\"># queue name</span>\n\n<span class=\"token triple-quoted-string string\">''' example of more robust pika.ConnectionParameters\nhost='localhost',\nport=5672,\nvirtual_host='/',\ncredentials=pika.credentials.PlainCredentials(\n\tusername='guest',\n\tpassword='guest'\n)\n'''</span>\nconnection <span class=\"token operator\">=</span> pika<span class=\"token punctuation\">.</span>BlockingConnection<span class=\"token punctuation\">(</span>pika<span class=\"token punctuation\">.</span>ConnectionParameters<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nchannel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nchannel<span class=\"token punctuation\">.</span>queue_declare<span class=\"token punctuation\">(</span>queue<span class=\"token operator\">=</span>queue<span class=\"token punctuation\">,</span> durable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># durable=True - makes queue persistent</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tmessage <span class=\"token operator\">=</span> <span class=\"token string\">\"item %d\"</span> <span class=\"token operator\">%</span> i\n\ttimestamp <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tnow <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\texpire <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>now<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span>hour<span class=\"token operator\">=</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span> minute<span class=\"token operator\">=</span><span class=\"token number\">59</span><span class=\"token punctuation\">,</span> second<span class=\"token operator\">=</span><span class=\"token number\">59</span><span class=\"token punctuation\">,</span> microsecond<span class=\"token operator\">=</span><span class=\"token number\">999999</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> now<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>total_seconds<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\theaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\"># example how headers can be used</span>\n\t\t<span class=\"token string\">'hello'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'world'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">'created'</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>timestamp<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\tdata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\"># example hot to transfer objects rather than string using json.dumps and json.loads</span>\n\t\t<span class=\"token string\">'keyword'</span><span class=\"token punctuation\">:</span> message<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">'domain'</span><span class=\"token punctuation\">:</span> message<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">'created'</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>timestamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">'expire'</span><span class=\"token punctuation\">:</span> expire\n\t<span class=\"token punctuation\">}</span>\n\tchannel<span class=\"token punctuation\">.</span>basic_publish<span class=\"token punctuation\">(</span>\n\t\texchange<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n\t\trouting_key<span class=\"token operator\">=</span>queue<span class=\"token punctuation\">,</span>\n\t\tbody<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># must be string</span>\n\t\tproperties<span class=\"token operator\">=</span>pika<span class=\"token punctuation\">.</span>BasicProperties<span class=\"token punctuation\">(</span>\n\t\t\tdelivery_mode<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># makes persistent job</span>\n\t\t\tpriority<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># default priority</span>\n\t\t\ttimestamp<span class=\"token operator\">=</span>timestamp<span class=\"token punctuation\">,</span> <span class=\"token comment\"># timestamp of job creation</span>\n\t\t\texpiration<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>expire<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># job expiration (milliseconds from now), must be string, handled by rabbitmq</span>\n\t\t\theaders<span class=\"token operator\">=</span>headers\n\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">print</span> <span class=\"token string\">\"[>] Sent %r\"</span> <span class=\"token operator\">%</span> message\n\nconnection<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>worker.py</h2>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token keyword\">import</span> pika\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> datetime\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> sys\n\nstop_word <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\nmax_retries <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nqueue <span class=\"token operator\">=</span> <span class=\"token string\">'retries'</span>\n\nconnection <span class=\"token operator\">=</span> pika<span class=\"token punctuation\">.</span>BlockingConnection<span class=\"token punctuation\">(</span>pika<span class=\"token punctuation\">.</span>ConnectionParameters<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nchannel <span class=\"token operator\">=</span> connection<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nchannel<span class=\"token punctuation\">.</span>queue_declare<span class=\"token punctuation\">(</span>queue<span class=\"token operator\">=</span>queue<span class=\"token punctuation\">,</span> durable<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span> <span class=\"token string\">'[*] Waiting for messages. To exit press CTRL+C'</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> properties<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token comment\">#print properties.headers.get('hello')</span>\n\tdata <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">print</span> <span class=\"token string\">\"[>] Received '%s' (try: %d)\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'keyword'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">if</span> properties<span class=\"token punctuation\">.</span>priority <span class=\"token operator\">>=</span> max_retries <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># example handling retries</span>\n\t\tch<span class=\"token punctuation\">.</span>basic_ack<span class=\"token punctuation\">(</span>delivery_tag<span class=\"token operator\">=</span>method<span class=\"token punctuation\">.</span>delivery_tag<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">print</span> <span class=\"token string\">\"[!] '%s' rejected after %d retries\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'keyword'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token keyword\">if</span> data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'keyword'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> stop_word<span class=\"token punctuation\">:</span> <span class=\"token comment\"># example - rejeceting job</span>\n\t\t\t\t<span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Stop word detected'</span><span class=\"token punctuation\">)</span>\n\n\t\t\ttime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'keyword'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\tch<span class=\"token punctuation\">.</span>basic_ack<span class=\"token punctuation\">(</span>delivery_tag<span class=\"token operator\">=</span>method<span class=\"token punctuation\">.</span>delivery_tag<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">print</span> <span class=\"token string\">\"[+] Done\"</span>\n\n\t\t<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n\t\t\ttimestamp <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\tnow <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\texpire <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>now<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span>hour<span class=\"token operator\">=</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span> minute<span class=\"token operator\">=</span><span class=\"token number\">59</span><span class=\"token punctuation\">,</span> second<span class=\"token operator\">=</span><span class=\"token number\">59</span><span class=\"token punctuation\">,</span> microsecond<span class=\"token operator\">=</span><span class=\"token number\">999999</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> now<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>total_seconds<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t\t\t<span class=\"token comment\"># to reject job we create new one with other priority and expiration</span>\n\t\t\tchannel<span class=\"token punctuation\">.</span>basic_publish<span class=\"token punctuation\">(</span>exchange<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> routing_key<span class=\"token operator\">=</span>queue<span class=\"token punctuation\">,</span> body<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\tproperties<span class=\"token operator\">=</span>pika<span class=\"token punctuation\">.</span>BasicProperties<span class=\"token punctuation\">(</span>delivery_mode<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> priority<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> timestamp<span class=\"token operator\">=</span>timestamp<span class=\"token punctuation\">,</span> expiration<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>expire<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>properties<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token comment\"># also do not forget to send back acknowledge about job</span>\n\t\t\tch<span class=\"token punctuation\">.</span>basic_ack<span class=\"token punctuation\">(</span>delivery_tag<span class=\"token operator\">=</span>method<span class=\"token punctuation\">.</span>delivery_tag<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">print</span> <span class=\"token string\">\"[!] Rejected, going to sleep for a while\"</span>\n\t\t\ttime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">print</span>\n\nchannel<span class=\"token punctuation\">.</span>basic_qos<span class=\"token punctuation\">(</span>prefetch_count<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nchannel<span class=\"token punctuation\">.</span>basic_consume<span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">,</span> queue<span class=\"token operator\">=</span>queue<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\tchannel<span class=\"token punctuation\">.</span>start_consuming<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> KeyboardInterrupt<span class=\"token punctuation\">:</span>\n\tchannel<span class=\"token punctuation\">.</span>stop_consuming<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconnection<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>How to run</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">python send.py <span class=\"token number\">6</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> Sent <span class=\"token string\">'item 1'</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> Sent <span class=\"token string\">'item 2'</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> Sent <span class=\"token string\">'item 3'</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> Sent <span class=\"token string\">'item 4'</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> Sent <span class=\"token string\">'item 5'</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> Sent <span class=\"token string\">'item 6'</span>\n\npython worker.py <span class=\"token string\">\"item 3\"</span>\n<span class=\"token punctuation\">[</span>*<span class=\"token punctuation\">]</span> Waiting <span class=\"token keyword\">for</span> messages. To <span class=\"token builtin class-name\">exit</span> press CTRL+C\n<span class=\"token punctuation\">[</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> Received <span class=\"token string\">'item 1'</span> <span class=\"token punctuation\">(</span>try: <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> Done\n\n<span class=\"token punctuation\">[</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> Received <span class=\"token string\">'item 3'</span> <span class=\"token punctuation\">(</span>try: <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">!</span><span class=\"token punctuation\">]</span> Rejected, going to <span class=\"token function\">sleep</span> <span class=\"token keyword\">for</span> a <span class=\"token keyword\">while</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> Received <span class=\"token string\">'item 5'</span> <span class=\"token punctuation\">(</span>try: <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> Done\n\npython worker.py <span class=\"token string\">\"item 5\"</span>\n<span class=\"token punctuation\">[</span>*<span class=\"token punctuation\">]</span> Waiting <span class=\"token keyword\">for</span> messages. To <span class=\"token builtin class-name\">exit</span> press CTRL+C\n<span class=\"token punctuation\">[</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> Received <span class=\"token string\">'item 2'</span> <span class=\"token punctuation\">(</span>try: <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> Done\n\n<span class=\"token punctuation\">[</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> Received <span class=\"token string\">'item 4'</span> <span class=\"token punctuation\">(</span>try: <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> Done\n\n<span class=\"token punctuation\">[</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> Received <span class=\"token string\">'item 6'</span> <span class=\"token punctuation\">(</span>try: <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> Done\n\n<span class=\"token punctuation\">[</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> Received <span class=\"token string\">'item 3'</span> <span class=\"token punctuation\">(</span>try: <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> Done</code></pre></div>"}},"pageContext":{"id":"94f1cfaa-1341-5639-8ba0-e8f706581e2f"}},"staticQueryHashes":[],"slicesMap":{}}