{"componentChunkName":"component---src-templates-note-js","path":"/powershell-convertto-markdown","result":{"data":{"remark":{"fields":{"path":"powershell-convertto-markdown"},"meta":{"title":""},"headings":[{"value":"PowerShell ConvertTo-Markdown"}],"html":"<h1>PowerShell ConvertTo-Markdown</h1>\n<p><a href=\"https://gist.github.com/GuruAnt/4c837213d0f313715a93\">Found</a> good idea of how to produce markdown tables right from powershell.</p>\n<p>Just need some more nice output with aligned columns like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Region        | Category   | Count\n------------- | ---------- | -----\nUK            | java       | 35\nUK            | javascript | 34\nCA            | javascript | 27\nCA            | java       | 27\nNY            | java       | 23\nallows remote | javascript | 22\nDeutschland   | java       | 21\nUK            | c#         | 21\nCA            | python     | 21\nUK            | php        | 20</code></pre></div>\n<p>Here is what I have:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\">&lt;#\n.Synopsis\n    Converts a PowerShell object to a Markdown table.\n.EXAMPLE\n    $data | ConvertTo-Markdown\n.EXAMPLE\n    ConvertTo-Markdown($data)\n#></span>\n<span class=\"token keyword\">Function</span> <span class=\"token function\">ConvertTo-Markdown</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token namespace\">[CmdletBinding()]</span>\n    <span class=\"token namespace\">[OutputType([string])]</span>\n    <span class=\"token keyword\">Param</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token namespace\">[Parameter(\n            Mandatory = $true,\n            Position = 0,\n            ValueFromPipeline = $true\n        )]</span>\n        <span class=\"token namespace\">[PSObject[]]</span><span class=\"token variable\">$collection</span>\n    <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">Begin</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$items</span> = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token variable\">$columns</span> = @<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">Process</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">ForEach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span> in <span class=\"token variable\">$collection</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$items</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$item</span>\n\n            <span class=\"token variable\">$item</span><span class=\"token punctuation\">.</span>PSObject<span class=\"token punctuation\">.</span>Properties <span class=\"token punctuation\">|</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-not</span> <span class=\"token variable\">$columns</span><span class=\"token punctuation\">.</span>ContainsKey<span class=\"token punctuation\">(</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span> <span class=\"token operator\">-or</span> <span class=\"token variable\">$columns</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">]</span> <span class=\"token operator\">-lt</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span>ToString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token variable\">$columns</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">]</span> = <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span>ToString<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Length\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">End</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">ForEach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span> in $<span class=\"token punctuation\">(</span><span class=\"token variable\">$columns</span><span class=\"token punctuation\">.</span>Keys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$columns</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> = <span class=\"token namespace\">[Math]</span>::Max<span class=\"token punctuation\">(</span><span class=\"token variable\">$columns</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token variable\">$header</span> = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">ForEach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span> in <span class=\"token variable\">$columns</span><span class=\"token punctuation\">.</span>Keys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$header</span> <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'{0,-'</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$columns</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'}'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>f <span class=\"token variable\">$key</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$header</span> <span class=\"token operator\">-join</span> <span class=\"token string\">' | '</span>\n\n        <span class=\"token variable\">$separator</span> = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">ForEach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span> in <span class=\"token variable\">$columns</span><span class=\"token punctuation\">.</span>Keys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$separator</span> <span class=\"token operator\">+=</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">*</span> <span class=\"token variable\">$columns</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$separator</span> <span class=\"token operator\">-join</span> <span class=\"token string\">' | '</span>\n\n        <span class=\"token keyword\">ForEach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span> in <span class=\"token variable\">$items</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$values</span> = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">ForEach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span> in <span class=\"token variable\">$columns</span><span class=\"token punctuation\">.</span>Keys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token variable\">$values</span> <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'{0,-'</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$columns</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'}'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>f <span class=\"token variable\">$item</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token variable\">$values</span> <span class=\"token operator\">-join</span> <span class=\"token string\">' | '</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>As usual save this to <code class=\"language-text\">%USERPROFILE%\\Documents\\WindowsPowerShell\\Modules\\ConvertTo-Markdown\\ConvertTo-Markdown.psm1</code></p>\n<p>Note that folder containing psm1 file should have same name otherwise module will not be autoloaded</p>\n<p>Note to get modules autoload you should run PowerShell as Administrator</p>\n<p>Otherwise you must load module manually by typing <code class=\"language-text\">Import-Module $Home\\Documents\\WindowsPowerShell\\Modules\\ConvertTo-Markdown\\ConvertTo-Markdown.psm1</code></p>"}},"pageContext":{"id":"785e61ed-5cc7-5375-9351-f1d7c5407736"}},"staticQueryHashes":[]}