{"componentChunkName":"component---src-templates-note-js","path":"/custom-bash-complete","result":{"data":{"remark":{"fields":{"path":"custom-bash-complete"},"meta":{"title":""},"headings":[{"value":"custom bash autocomplete"}],"html":"<h1>custom bash autocomplete</h1>\n<p><img src=\"/64f4d9befb40aeb04f779fb10c164b5c/bash_autocomplete.gif\" alt=\"bash autocomplete for custom function\"></p>\n<p>Often I do need to check which containers in a given kubernetes deployment in which status, to retrieve such info following command might be used:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get po <span class=\"token parameter variable\">-l</span> <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>my-awesome-app <span class=\"token parameter variable\">-o</span> json <span class=\"token operator\">|</span> jq <span class=\"token string\">\"[.items[0].status.containerStatuses[] | {name: .name, ready: .ready, state: .state | keys[0]}]\"</span></code></pre></div>\n<p>which will return something like:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"exporter\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"ready\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"state\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"running\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nginx\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"ready\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"state\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"running\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"proxy\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"ready\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"state\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"running\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>as you can imagine remembering such command is not possible, so we are going to create a function in <code class=\"language-text\">~/.bash_profile</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function-name function\">po-kube</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    kubectl get po <span class=\"token parameter variable\">-l</span> <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span> <span class=\"token parameter variable\">-o</span> json <span class=\"token operator\">|</span> jq <span class=\"token string\">\"[.items[0].status.containerStatuses[] | {name: .name, ready: .ready, state: .state | keys[0]}]\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>and from now on we cat instead run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">po-kube my-awesome-app</code></pre></div>\n<p>but what if you have many deploymnets with long names?</p>\n<p>here are pretty nice documentation of <a href=\"https://debian-administration.org/article/316/An_introduction_to_bash_completion_part_1\">how bash autocompletion works</a> and <a href=\"https://debian-administration.org/article/317/An_introduction_to_bash_completion_part_2\">how to create custom bash autocomplete</a></p>\n<p>In my case I added <code class=\"language-text\">/usr/local/etc/bash_completion.d/po-kube</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function-name function\">_po-kube</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin class-name\">local</span> cur prev opts\n    <span class=\"token assign-left variable\">COMPREPLY</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token assign-left variable\">cur</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${COMP_WORDS<span class=\"token punctuation\">[</span>COMP_CWORD<span class=\"token punctuation\">]</span>}</span>\"</span>\n    <span class=\"token assign-left variable\">prev</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${COMP_WORDS<span class=\"token punctuation\">[</span>COMP_CWORD-1<span class=\"token punctuation\">]</span>}</span>\"</span>\n    <span class=\"token assign-left variable\">opts</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>kubectl get deployment <span class=\"token parameter variable\">--template</span> <span class=\"token string\">'{{range .items}}{{.metadata.name}}{{\" \"}}{{end}}'</span><span class=\"token variable\">)</span></span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">${cur}</span> <span class=\"token operator\">==</span> * <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token assign-left variable\">COMPREPLY</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span> <span class=\"token variable\"><span class=\"token variable\">$(</span>compgen <span class=\"token parameter variable\">-W</span> <span class=\"token string\">\"<span class=\"token variable\">${opts}</span>\"</span> -- $<span class=\"token punctuation\">{</span>cur<span class=\"token punctuation\">}</span><span class=\"token variable\">)</span></span> <span class=\"token punctuation\">)</span>\n        <span class=\"token builtin class-name\">return</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">fi</span>\n<span class=\"token punctuation\">}</span>\ncomplete <span class=\"token parameter variable\">-F</span> _po-kube po-kube</code></pre></div>\n<p>and from now on I can do something like:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">po-kube s<span class=\"token punctuation\">[</span>TAB<span class=\"token punctuation\">]</span>\nsms-api spam-api</code></pre></div>"}},"pageContext":{"id":"fb129679-548c-56f4-a4b0-f6ad591c0eee"}},"staticQueryHashes":[]}