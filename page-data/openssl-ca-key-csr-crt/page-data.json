{"componentChunkName":"component---src-templates-note-js","path":"/openssl-ca-key-csr-crt","result":{"data":{"remark":{"fields":{"path":"openssl-ca-key-csr-crt"},"meta":{"title":""},"headings":[{"value":"openssl ca, key, csr and crt"},{"value":"Private key"},{"value":"Certificate Signing Request (CSR)"}],"html":"<h1>openssl ca, key, csr and crt</h1>\n<h2>CA private key</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">openssl genrsa <span class=\"token parameter variable\">-out</span> ca.key <span class=\"token number\">2048</span></code></pre></div>\n<p>This one is private and should be kept in safe</p>\n<h2>CA certificate</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># CA certificate</span>\n<span class=\"token comment\">#   Country Name (2 letter code) []:UA</span>\n<span class=\"token comment\">#   State or Province Name (full name) []:Kiev</span>\n<span class=\"token comment\">#   Locality Name (eg, city) []:Kiev</span>\n<span class=\"token comment\">#   Organization Name (eg, company) []:mac-blog.org.ua</span>\n<span class=\"token comment\">#   Organizational Unit Name (eg, section) []:ca</span>\n<span class=\"token comment\">#   Common Name (eg, fully qualified host name) []:mac-blog.org.ua</span>\n<span class=\"token comment\">#   Email Address []:marchenko.alexandr@gmail.com</span>\nopenssl req <span class=\"token parameter variable\">-x509</span> <span class=\"token parameter variable\">-new</span> <span class=\"token parameter variable\">-key</span> ca.key <span class=\"token parameter variable\">-out</span> ca.crt <span class=\"token parameter variable\">-days</span> <span class=\"token number\">10000</span></code></pre></div>\n<p>This one should be shared and added to a trusted root certificates, so all certificates signed with private CA key created in previous step will be trusted</p>\n<h1>Private key</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">openssl genrsa <span class=\"token parameter variable\">-out</span> cert.key <span class=\"token number\">2048</span></code></pre></div>\n<p>Private key for our service</p>\n<h1>Certificate Signing Request (CSR)</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Certificate Signing Request</span>\n<span class=\"token comment\">#   Country Name (2 letter code) []:UA</span>\n<span class=\"token comment\">#   State or Province Name (full name) []:Kiev</span>\n<span class=\"token comment\">#   Locality Name (eg, city) []:Kiev</span>\n<span class=\"token comment\">#   Organization Name (eg, company) []:mac-blog.org.ua</span>\n<span class=\"token comment\">#   Organizational Unit Name (eg, section) []:foo</span>\n<span class=\"token comment\">#   Common Name (eg, fully qualified host name) []:foo.mac-blog.org.ua</span>\n<span class=\"token comment\">#   Email Address []:marchenko.alexandr@gmail.com</span>\nopenssl req <span class=\"token parameter variable\">-new</span> <span class=\"token parameter variable\">-key</span> cert.key <span class=\"token parameter variable\">-out</span> cert.csr</code></pre></div>\n<p>This one is not a certificate yet and usually is sent to certification authority for signing, but in our case we are CA</p>\n<h2>Sign certificate with CA</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">openssl x509 <span class=\"token parameter variable\">-req</span> <span class=\"token parameter variable\">-in</span> cert.csr <span class=\"token parameter variable\">-CA</span> ca.crt <span class=\"token parameter variable\">-CAkey</span> ca.key <span class=\"token parameter variable\">-CAcreateserial</span> <span class=\"token parameter variable\">-out</span> cert.crt <span class=\"token parameter variable\">-days</span> <span class=\"token number\">100</span></code></pre></div>\n<p>Check whats inside</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">openssl x509 <span class=\"token parameter variable\">-in</span> cert.crt <span class=\"token parameter variable\">-text</span></code></pre></div>\n<h2>Test</h2>\n<p><strong>default.conf</strong></p>\n<p><div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">listen</span>              <span class=\"token number\">80</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">listen</span>              <span class=\"token number\">443</span> ssl</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">server_name</span>         foo.marchenko.net.ua</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">ssl_certificate</span>     cert.crt</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">ssl_certificate_key</span> cert.key</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token directive\"><span class=\"token keyword\">root</span>   /usr/share/nginx/html</span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">index</span>  index.html index.htm</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">80</span>:80 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">443</span>:443 <span class=\"token parameter variable\">-v</span> <span class=\"token environment constant\">$PWD</span>/cert.crt:/etc/nginx/cert.crt <span class=\"token parameter variable\">-v</span> <span class=\"token environment constant\">$PWD</span>/cert.key:/etc/nginx/cert.key <span class=\"token parameter variable\">-v</span> <span class=\"token environment constant\">$PWD</span>/default.conf:/etc/nginx/conf.d/default.conf nginx:alpine</code></pre></div>\n<p>And now we can test if everything is ok</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">--cacert</span> ca.crt <span class=\"token parameter variable\">--resolve</span> foo.mac-blog.org.ua:443:127.0.0.1 https://foo.mac-blog.org.ua</code></pre></div>\n<p>Note how we are passing CA certificate which is safe to share to curl so it will recognize certificate and wont complain that it is self signed</p>\n<p>To make real certificates it is better to use letsencrypt or <a href=\"/cloudflare-ssl-ttls-modes\">cloudflare</a></p>\n<p><a href=\"/openssl-ca-key-csr-crt-san\">The same thing but with SAN</a></p>"}},"pageContext":{"id":"3142eb08-6d2f-5cdc-8df8-66ca331770fc"}},"staticQueryHashes":[]}