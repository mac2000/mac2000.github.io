{"componentChunkName":"component---src-templates-note-js","path":"/go-gitignore","result":{"data":{"remark":{"fields":{"path":"go-gitignore"},"meta":{"title":""},"headings":[{"value":"go gitignore"}],"html":"<h1>go gitignore</h1>\n<p>golang gitignore recursive walk</p>\n<p><div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"log\"</span>\n\t<span class=\"token string\">\"os\"</span>\n\t<span class=\"token string\">\"path/filepath\"</span>\n\n\tignore <span class=\"token string\">\"github.com/sabhiram/go-gitignore\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// recursive iteration over `os.Args[1]` path</span>\n\tfilepath<span class=\"token punctuation\">.</span><span class=\"token function\">Walk</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>path <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> info os<span class=\"token punctuation\">.</span>FileInfo<span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\">// path == \"/Users/mac/Desktop/demo/obj/Debug/net6.0/logging.AssemblyInfo.cs\"</span>\n\t\t<span class=\"token comment\">// info.Name() == \"logging.AssemblyInfo.cs\"</span>\n\n\t\t<span class=\"token comment\">// inner, walk up till root or found gitignore</span>\n\t\t<span class=\"token keyword\">var</span> gitignore <span class=\"token operator\">*</span>ignore<span class=\"token punctuation\">.</span>GitIgnore\n\t\tparent <span class=\"token operator\">:=</span> path\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">{</span>\n\t\t\tgitignore<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">=</span> ignore<span class=\"token punctuation\">.</span><span class=\"token function\">CompileIgnoreFile</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> <span class=\"token string\">\".gitignore\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">if</span> gitignore <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token comment\">// gitignore found, breaking loop</span>\n\t\t\t\t<span class=\"token keyword\">break</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">if</span> parent <span class=\"token operator\">==</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Dir</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token comment\">// we are at root and there is no more parents, breaking loop</span>\n\t\t\t\t<span class=\"token keyword\">break</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t\tparent <span class=\"token operator\">=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Dir</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tignored <span class=\"token operator\">:=</span> <span class=\"token boolean\">false</span>\n\t\t<span class=\"token keyword\">if</span> gitignore <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t\tignored <span class=\"token operator\">=</span> gitignore<span class=\"token punctuation\">.</span><span class=\"token function\">MatchesPath</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%v %s\\n\"</span><span class=\"token punctuation\">,</span> ignored<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div></p>\n<p>can be used as:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">go run main.go /Users/mac/github.com/mac2000/notes/</code></pre></div>\n<p>was discovered for <a href=\"https://github.com/trufflesecurity/trufflehog/issues/865\">trufflehog</a></p>"}},"pageContext":{"id":"f4dd2cb8-1089-5c0b-9b58-169ee61edd20"}},"staticQueryHashes":[]}