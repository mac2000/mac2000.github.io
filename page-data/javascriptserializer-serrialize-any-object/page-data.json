{"componentChunkName":"component---src-templates-note-js","path":"/javascriptserializer-serrialize-any-object","result":{"data":{"remark":{"fields":{"path":"javascriptserializer-serrialize-any-object"},"meta":{"title":""},"headings":[{"value":"JavaScriptSerializer serrialize any object"}],"html":"<h1>JavaScriptSerializer serrialize any object</h1>\n<p>When object is simple there is no problems and all work like a charm.</p>\n<p>Here is some simple example:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Web<span class=\"token punctuation\">.</span>Script<span class=\"token punctuation\">.</span>Serialization</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">JavaScriptSerializer</span> js <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">JavaScriptSerializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">string</span></span> resp <span class=\"token operator\">=</span> js<span class=\"token punctuation\">.</span><span class=\"token function\">Serialize</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>But when object have some recursive links etc, serializer hungs.</p>\n<p>So here is code:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\">NotebookCompanyInfo</span> company <span class=\"token operator\">=</span> NotebookCompanyDAC<span class=\"token punctuation\">.</span><span class=\"token function\">NotebookCompanyGetInfo</span><span class=\"token punctuation\">(</span>NotebookId<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Reflection<span class=\"token punctuation\">.</span>PropertyInfo<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> propInfo <span class=\"token operator\">=</span> company<span class=\"token punctuation\">.</span><span class=\"token function\">GetType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetProperties</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>Reflection<span class=\"token punctuation\">.</span>BindingFlags<span class=\"token punctuation\">.</span>Instance<span class=\"token operator\">|</span>System<span class=\"token punctuation\">.</span>Reflection<span class=\"token punctuation\">.</span>BindingFlags<span class=\"token punctuation\">.</span>Public<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Reflection<span class=\"token punctuation\">.</span>PropertyInfo</span> info <span class=\"token keyword\">in</span> propInfo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>info<span class=\"token punctuation\">.</span>PropertyType<span class=\"token punctuation\">.</span>IsPrimitive <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>info<span class=\"token punctuation\">.</span>PropertyType<span class=\"token punctuation\">.</span><span class=\"token function\">Equals</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\"><span class=\"token keyword\">string</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> val <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ChangeType</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span><span class=\"token function\">GetValue</span><span class=\"token punctuation\">(</span>company<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">.</span>PropertyType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        obj<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//Form responce</span>\n<span class=\"token class-name\"><span class=\"token keyword\">string</span></span> response <span class=\"token operator\">=</span> <span class=\"token string\">\"{'success':true,'message':'ok','data':\"</span> <span class=\"token operator\">+</span> js<span class=\"token punctuation\">.</span><span class=\"token function\">Serialize</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"}\"</span><span class=\"token punctuation\">;</span></code></pre></div>"}},"pageContext":{"id":"8be5519f-0adf-54a4-aa9e-f1b14b80fac8"}},"staticQueryHashes":[]}