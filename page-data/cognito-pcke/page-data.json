{"componentChunkName":"component---src-templates-note-js","path":"/cognito-pcke/","result":{"data":{"remark":{"fields":{"path":"cognito-pcke"},"meta":{"title":""},"headings":[{"value":"Amazon Cognito backendless PCKE"}],"html":"<h1>Amazon Cognito backendless PCKE</h1>\n<p>Short sample of how to get up and running with Cognito and without backend</p>\n<div class=\"gatsby-highlight\" data-language=\"tf\"><pre class=\"language-tf\"><code class=\"language-tf\">terraform {\n  required_providers {\n    aws = {\n      source  = &quot;hashicorp/aws&quot;\n      version = &quot;5.94.1&quot;\n    }\n  }\n}\n\nprovider &quot;aws&quot; {\n  region = &quot;eu-central-1&quot;\n  # https://us-east-1.console.aws.amazon.com/iam/home?region=eu-central-1#/security_credentials\n  # after experiments are done, do not forget to delete this credentials, just in case\n  access_key = &quot;********************&quot;\n  secret_key = &quot;********************&quot;\n}\n\n# this one will create &quot;User pool&quot;\n# https://eu-central-1.console.aws.amazon.com/cognito/v2/idp/user-pools?region=eu-central-1\nresource &quot;aws_cognito_user_pool&quot; &quot;example&quot; {\n  name = &quot;example&quot;\n}\n\n# this one will add Google provider to user pool\n# https://console.cloud.google.com/auth/clients/544615198383-ltp2c456gv5nt3v9l2aro77jq72c8fra.apps.googleusercontent.com?project=demo2-de02e\n# it should have redirect uri: https://example42.auth.eu-central-1.amazoncognito.com/oauth2/idpresponse\nresource &quot;aws_cognito_identity_provider&quot; &quot;example&quot; {\n  user_pool_id  = aws_cognito_user_pool.example.id\n  provider_name = &quot;Google&quot;\n  provider_type = &quot;Google&quot;\n\n  provider_details = {\n    authorize_scopes = &quot;email&quot;\n    client_id        = &quot;xxxxxxxx.apps.googleusercontent.com&quot;\n    client_secret    = &quot;***********************************&quot;\n  }\n\n  attribute_mapping = {\n    email    = &quot;email&quot;\n    username = &quot;sub&quot;\n  }\n}\n\n# this one creates app client\n# https://eu-central-1.console.aws.amazon.com/cognito/v2/idp/user-pools/eu-central-1_oHTeOK341/applications/app-clients?region=eu-central-1\nresource &quot;aws_cognito_user_pool_client&quot; &quot;example&quot; {\n  name                                 = &quot;example&quot;\n  user_pool_id                         = aws_cognito_user_pool.example.id\n  allowed_oauth_flows                  = [&quot;code&quot;, &quot;implicit&quot;]\n  allowed_oauth_scopes                 = [&quot;email&quot;, &quot;openid&quot;]\n  callback_urls                        = [&quot;http://localhost:3000&quot;]\n  supported_identity_providers         = [&quot;COGNITO&quot;, &quot;Google&quot;]\n  allowed_oauth_flows_user_pool_client = true\n}\n\n# this one creates identity pool wired up to user pool created above\n# https://eu-central-1.console.aws.amazon.com/cognito/v2/identity/identity-pools?region=eu-central-1\nresource &quot;aws_cognito_identity_pool&quot; &quot;example&quot; {\n  identity_pool_name = &quot;example&quot;\n  cognito_identity_providers {\n    client_id               = aws_cognito_user_pool_client.example.id\n    provider_name           = aws_cognito_user_pool.example.endpoint\n    server_side_token_check = false\n  }\n}\n\n# define the domain prefix to be used\nresource &quot;aws_cognito_user_pool_domain&quot; &quot;example&quot; {\n  domain       = &quot;example42&quot;\n  user_pool_id = aws_cognito_user_pool.example.id\n}\n\n# client_id = &quot;7q601uo92n5tfj957hg3nteien&quot;\noutput &quot;client_id&quot; {\n  value = aws_cognito_user_pool_client.example.id\n}\n\n# pool_id = &quot;eu-central-1:8d4d87b2-f523-4738-9bef-d48eb9fa0b40&quot;\noutput &quot;pool_id&quot; {\n  value = aws_cognito_identity_pool.example.id\n}\n\n# domain = &quot;example42&quot;\noutput &quot;domain&quot; {\n  value = aws_cognito_user_pool_domain.example.domain\n}</code></pre></div>\n<p>Having this in place we should have Cognito configured with Google provider and client that allows us to authenticate from localhost</p>\n<p>Here is sample html file to play with (i just run <code class=\"language-text\">npx lite-server</code>)</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>cognito<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>cognito<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>Login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token keyword\">var</span> client_id <span class=\"token operator\">=</span> <span class=\"token string\">'7q601uo92n5tfj957hg3nteien'</span>\n      <span class=\"token keyword\">var</span> redirect_uri <span class=\"token operator\">=</span> <span class=\"token string\">'http://localhost:3000'</span>\n\n      <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> code_verifier <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">var</span> code_challenge <span class=\"token operator\">=</span> <span class=\"token function\">base64urlencode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> crypto<span class=\"token punctuation\">.</span>subtle<span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SHA-256'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>code_verifier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://example42.auth.eu-central-1.amazoncognito.com/oauth2/authorize'</span><span class=\"token punctuation\">)</span>\n        url<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'response_type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'code'</span><span class=\"token punctuation\">)</span>\n        url<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'client_id'</span><span class=\"token punctuation\">,</span> client_id<span class=\"token punctuation\">)</span>\n        url<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'redirect_uri'</span><span class=\"token punctuation\">,</span> redirect_uri<span class=\"token punctuation\">)</span>\n        url<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'identity_provider'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Google'</span><span class=\"token punctuation\">)</span>\n        url<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code_challenge'</span><span class=\"token punctuation\">,</span> code_challenge<span class=\"token punctuation\">)</span>\n        url<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code_challenge_method'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'S256'</span><span class=\"token punctuation\">)</span>\n\n        localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code_verifier'</span><span class=\"token punctuation\">,</span> code_verifier<span class=\"token punctuation\">)</span>\n        window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> url\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">function</span> <span class=\"token function\">base64urlencode</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">btoa</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">=+$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n\n      window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'load'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> code <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">var</span> code_verifier <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code_verifier'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">&amp;&amp;</span> code_verifier<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">var</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          params<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'grant_type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'authorization_code'</span><span class=\"token punctuation\">)</span>\n          params<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'client_id'</span><span class=\"token punctuation\">,</span> client_id<span class=\"token punctuation\">)</span>\n          params<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'redirect_uri'</span><span class=\"token punctuation\">,</span> redirect_uri<span class=\"token punctuation\">)</span>\n          params<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span>\n          params<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code_verifier'</span><span class=\"token punctuation\">,</span> code_verifier<span class=\"token punctuation\">)</span>\n\n          <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://example42.auth.eu-central-1.amazoncognito.com/oauth2/token</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/x-www-form-urlencoded'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> params<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span> <span class=\"token operator\">=></span> r<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n          document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;h3>Tokens:&lt;/h3>&lt;pre></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/pre></span><span class=\"token template-punctuation string\">`</span></span>\n\n          localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code_verifier'</span><span class=\"token punctuation\">)</span>\n          window<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">replaceState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span> redirect_uri<span class=\"token punctuation\">)</span> <span class=\"token comment\">// clean URL</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>note: even so we are working without backend, we still using <code class=\"language-text\">code</code> flow with PKCE</p>"}},"pageContext":{"id":"a34b60eb-cf4e-50bc-9419-601af84f7f9c"}},"staticQueryHashes":[],"slicesMap":{}}