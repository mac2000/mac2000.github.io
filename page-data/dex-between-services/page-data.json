{"componentChunkName":"component---src-templates-note-js","path":"/dex-between-services/","result":{"data":{"remark":{"fields":{"path":"dex-between-services"},"meta":{"title":""},"headings":[{"value":"DEX - attempt to use it as auth for services"}],"html":"<h1>DEX - attempt to use it as auth for services</h1>\n<p>TLDR: no, it is going to work only for full apps with authorization code flows, and won't work for cases when we need service to service communication</p>\n<p>Usually when it comes to DEX it is mentioned as DYI solution for kubectl auth</p>\n<p>But from what I see it is an almost complete OIDC implementation that may be used for auth between the services</p>\n<p>From its getting started guide we gonna need:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/dexidp/dex.git\n<span class=\"token builtin class-name\">cd</span> dex\n<span class=\"token function\">make</span> build\n<span class=\"token function\">make</span> examples\n\n./bin/dex serve examples/config-dev.yaml\n./bin/example-app\n\n<span class=\"token function\">open</span> http://localhost:5555</code></pre></div>\n<p>Use <code class=\"language-text\">admin@example.com</code> and <code class=\"language-text\">password</code> for login button</p>\n<p>The demo above starts DEX itself with sqlite storage and preconfigured client application</p>\n<p>Dex, as OIDC does have discovery <code class=\"language-text\">http://localhost:5556/dex/.well-known/openid-configuration</code> with all expected endpoints, including jwks, which means we should be able to consume it in dotnet for example like so:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Security<span class=\"token punctuation\">.</span>Claims</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Authentication<span class=\"token punctuation\">.</span>JwtBearer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> builder <span class=\"token operator\">=</span> WebApplication<span class=\"token punctuation\">.</span><span class=\"token function\">CreateBuilder</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbuilder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token function\">AddAuthorization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddAuthentication</span><span class=\"token punctuation\">(</span>JwtBearerDefaults<span class=\"token punctuation\">.</span>AuthenticationScheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddJwtBearer</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  options<span class=\"token punctuation\">.</span>Authority <span class=\"token operator\">=</span> <span class=\"token string\">\"http://127.0.0.1:5556/dex\"</span><span class=\"token punctuation\">;</span>\n  options<span class=\"token punctuation\">.</span>Audience <span class=\"token operator\">=</span> <span class=\"token string\">\"example-app\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// using same audience as in given samples, coz it is checked by default</span>\n  options<span class=\"token punctuation\">.</span>RequireHttpsMetadata <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// just for local demo purposes</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> app <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">Build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">UseAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">UseAuthorization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">MapGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ClaimsPrincipal</span> user<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>Claims<span class=\"token punctuation\">.</span><span class=\"token function\">Select</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">KeyValuePair<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> http://localhost:5000 <span class=\"token parameter variable\">-H</span> <span class=\"token string\">'Authorization: Bearer paste_token_from_prev_step_here'</span></code></pre></div>\n<p>our jwt looks like this</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"iss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://127.0.0.1:5556/dex\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"sub\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CiQwOGE4N...\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"aud\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"example-app\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exp\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692439988</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"iat\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692353588</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"at_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"GvkUlwJgjtMVHU4q79kIeg\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"email\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"admin@example.com\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"email_verified\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"admin\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>and response</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"iss\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://127.0.0.1:5556/dex\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CiQwOGE4Njg0Yi.\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"aud\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"example-app\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"exp\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1692439988\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"iat\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1692353588\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"at_hash\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"GvkUlwJgjtMVHU4q79kIeg\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"admin@example.com\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"email_verified\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"true\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"admin\"</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h2>Dex - static clients</h2>\n<p>Even so there is sqlite storage the easiest way will be to configure clients manually via configuration file, so here is our edited config from getting started guide</p>\n<p><div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">issuer</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//127.0.0.1<span class=\"token punctuation\">:</span>5556/dex\n<span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> sqlite3\n  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span> examples/dex.db\n<span class=\"token key atrule\">web</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span> 0.0.0.0<span class=\"token punctuation\">:</span><span class=\"token number\">5556</span>\n<span class=\"token comment\"># # will touch it little bit later</span>\n<span class=\"token comment\"># frontend:</span>\n<span class=\"token comment\">#   issuer: dex</span>\n<span class=\"token comment\">#   logoURL: theme/logo.png</span>\n<span class=\"token comment\">#   dir: web/</span>\n<span class=\"token comment\">#   theme: light</span>\n<span class=\"token key atrule\">telemetry</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># http://localhost:5558/metrics</span>\n  <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span> 0.0.0.0<span class=\"token punctuation\">:</span><span class=\"token number\">5558</span>\n<span class=\"token comment\"># # will touch it little bit later</span>\n<span class=\"token comment\"># grpc:</span>\n<span class=\"token comment\">#   addr: 127.0.0.1:5557</span>\n<span class=\"token comment\">#   tlsCert: examples/grpc-client/server.crt</span>\n<span class=\"token comment\">#   tlsKey: examples/grpc-client/server.key</span>\n<span class=\"token comment\">#   tlsClientCA: examples/grpc-client/ca.crt</span>\n\n<span class=\"token key atrule\">logger</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"debug\"</span>\n  <span class=\"token key atrule\">format</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"text\"</span>\n\n<span class=\"token key atrule\">oauth2</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">passwordConnector</span><span class=\"token punctuation\">:</span> local <span class=\"token comment\"># required for password flow</span>\n\n<span class=\"token key atrule\">staticClients</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> example<span class=\"token punctuation\">-</span>app\n  <span class=\"token key atrule\">redirectURIs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token string\">'http://127.0.0.1:5555/callback'</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Example App'</span>\n  <span class=\"token key atrule\">secret</span><span class=\"token punctuation\">:</span> ZXhhbXBsZS1hcHAtc2VjcmV0\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> dotconsumer\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'dotnet example'</span>\n  <span class=\"token key atrule\">secret</span><span class=\"token punctuation\">:</span> HelloWorldMacWasHere2023\n\n<span class=\"token key atrule\">enablePasswordDB</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">staticPasswords</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">email</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"admin@example.com\"</span>\n  <span class=\"token key atrule\">hash</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W\"</span>\n  <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"admin\"</span>\n  <span class=\"token key atrule\">userID</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"08a8684b-db88-4b73-90a9-3cd1661f5466\"</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">email</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"mac@contoso.com\"</span>\n  <span class=\"token comment\"># bcrypt hash of the string \"password\": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)</span>\n  <span class=\"token key atrule\">hash</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"$2y$10$WXvGiM44DOAUVKSKJAaa1eeUZSF2vIPugPBBvGjD.j4Wm6P.UAQKK\"</span>\n  <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"mac\"</span>\n  <span class=\"token key atrule\">userID</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span></code></pre></div></p>\n<p>if everything done correct we should be able to login as <code class=\"language-text\">mac@contoso.com</code> using <code class=\"language-text\">password</code> as password</p>\n<p>also we have created our very first client and by default almost all flows are supported including password, so we should be able to:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-X</span> POST http://127.0.0.1:5556/dex/token <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"grant_type=password\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"client_id=dotconsumer\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"client_secret=HelloWorldMacWasHere2023\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"username=mac@contoso.com\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"password=password\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"scope=openid\"</span></code></pre></div>\n<p>and it did worked out</p>\n<p>Note: make sure to uncomment <code class=\"language-text\">passwordConnector</code> under <code class=\"language-text\">oauth2</code> section for this to work</p>\n<p>So far so good, but there is no client credentials flow or something like this, the only closes possible thing here is <code class=\"language-text\">urn:ietf:params:oauth:grant-type:token-exchange</code> which is described here <a href=\"https://www.authlete.com/developers/token_exchange/\">RFC 8693 OAuth 2.0 Token Exchange</a> but it is not something we can use here, but still here is an example:</p>\n<p>Step 1: retrieve id token somehow</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">id_token</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-X</span> POST http://127.0.0.1:5556/dex/token <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"grant_type=password\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"client_id=dotconsumer\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"client_secret=HelloWorldMacWasHere2023\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"username=mac@contoso.com\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"password=password\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"scope=openid\"</span> <span class=\"token operator\">|</span> jq <span class=\"token parameter variable\">-r</span> <span class=\"token string\">\".id_token\"</span><span class=\"token variable\">)</span></span></code></pre></div>\n<p>Step 2: exchange it</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> http://localhost:8080/api/token <span class=\"token parameter variable\">-d</span> <span class=\"token assign-left variable\">grant_type</span><span class=\"token operator\">=</span>urn:ietf:params:oauth:grant-type:token-exchange <span class=\"token parameter variable\">-d</span> <span class=\"token assign-left variable\">subject_token</span><span class=\"token operator\">=</span><span class=\"token variable\">$ID_TOKEN</span> <span class=\"token parameter variable\">-d</span> <span class=\"token assign-left variable\">subject_token_type</span><span class=\"token operator\">=</span>urn:ietf:params:oauth:token-type:id_token <span class=\"token parameter variable\">-d</span> <span class=\"token assign-left variable\">client_id</span><span class=\"token operator\">=</span><span class=\"token number\">5908895171</span> <span class=\"token parameter variable\">-d</span> <span class=\"token assign-left variable\">scope</span><span class=\"token operator\">=</span>email\n\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-X</span> POST http://127.0.0.1:5556/dex/token <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"grant_type=urn:ietf:params:oauth:grant-type:token-exchange\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"subject_token=<span class=\"token variable\">$id_token</span>\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"subject_token_type=urn:ietf:params:oauth:token-type:id_token\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"client_id=dotconsumer\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"client_secret=HelloWorldMacWasHere2023\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token string\">\"scope=openid\"</span></code></pre></div>\n<p>But it won't work, because of missing <code class=\"language-text\">connector_id</code> found in sources, the intent of this flow is similar to the way of how we did the trick with github actions and azure <a href=\"https://mac-blog.org.ua/github-token-exchanger/\">here</a> - aka to exchange tokens between identity providers</p>\n<p>Also the fun fact is that password flow is also missing from discovery endpoint</p>\n<p>Reading closely some issues in dex github repo have found notes about it is not a supported way of using it and wont be, so in case of need it is recommended to use other tools or write own implementation</p>"}},"pageContext":{"id":"8eefcb36-6943-54d2-bcc1-dedf06861a0f"}},"staticQueryHashes":[],"slicesMap":{}}