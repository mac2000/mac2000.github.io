{"componentChunkName":"component---src-templates-note-js","path":"/powershell-resx-duplicate-keys","result":{"data":{"remark":{"fields":{"path":"powershell-resx-duplicate-keys"},"meta":{"title":""},"headings":[{"value":"Use Powershell to detect RESX duplicate keys"}],"html":"<h1>Use Powershell to detect RESX duplicate keys</h1>\n<p>What is wrong with localization in ASP.NET? - Everything.</p>\n<p>If you project stop compiling and you get some strange errors like \"Unknown server control\" there is probably errors in your resx files.</p>\n<p>Visual Studio from time to time can show you duplicate keys but not always, especialy if they are in different cases. Also while editing resx in visual editor visual studio not showing duplicates at all.</p>\n<p>To prevent this from happening you should check your resx files for duplicate keys almost manualy, so here is little nice way to automate this:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$items</span> = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">Get-ChildItem</span> <span class=\"token operator\">-</span>Path C:\\Rabota<span class=\"token punctuation\">.</span>UA\\trunk\\Version\\Rabota2<span class=\"token punctuation\">.</span>WebUI <span class=\"token operator\">-</span>File <span class=\"token operator\">-</span>Include <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>resx <span class=\"token operator\">-</span>Recurse <span class=\"token operator\">-</span>ErrorAction SilentlyContinue <span class=\"token punctuation\">|</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$duplicates</span> = <span class=\"token punctuation\">(</span><span class=\"token namespace\">[xml]</span><span class=\"token variable\">$xml</span> = <span class=\"token function\">Get-Content</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>FullName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span><span class=\"token keyword\">data</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">select</span> @<span class=\"token punctuation\">{</span>n=<span class=\"token string\">'NameLowerCased'</span><span class=\"token punctuation\">;</span>e=<span class=\"token punctuation\">{</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">.</span>ToLower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">group-object</span> NameLowerCased <span class=\"token punctuation\">|</span> <span class=\"token function\">select</span> Name<span class=\"token punctuation\">,</span> Count <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> Count <span class=\"token operator\">-gt</span> 1\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$duplicates</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-gt</span> 0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token variable\">$item</span> = <span class=\"token function\">New-Object</span> psobject\n\n        <span class=\"token variable\">$item</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Add-Member</span> NoteProperty FullName <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>FullName\n        <span class=\"token variable\">$item</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Add-Member</span> NoteProperty Count <span class=\"token variable\">$duplicates</span><span class=\"token punctuation\">.</span>Count\n        <span class=\"token variable\">$item</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Add-Member</span> NoteProperty Duplicates <span class=\"token punctuation\">(</span><span class=\"token namespace\">[String]</span>::Join<span class=\"token punctuation\">(</span><span class=\"token string\">', '</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$duplicates</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">select</span> <span class=\"token operator\">-</span>ExpandProperty Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token variable\">$items</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$item</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$items</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">ft</span> <span class=\"token operator\">-</span>AutoSize</code></pre></div>\n<p>Which will output womething like:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">FullName                                                                                          Count Duplicates\n--------                                                                                          ----- ----------\nC:\\Rabota.UA\\trunk\\Version\\Rabota2.WebUI\\Controls\\Vacancy\\App_LocalResources\\AfterApply.ascx.resx     2 tip5.text, ltback</code></pre></div>\n<p>Again and again thank you MS for giving us such powerfull tool like Powershell :)</p>"}},"pageContext":{"id":"55172ad7-90ab-5253-af6c-025da4be1457"}},"staticQueryHashes":[]}