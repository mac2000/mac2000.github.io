{"componentChunkName":"component---src-templates-note-js","path":"/docker-provision/","result":{"data":{"remark":{"fields":{"path":"docker-provision"},"meta":{"title":""},"headings":[{"value":"Docker provision"}],"html":"<h1>Docker provision</h1>\n<p>Here is sample of docker provision:</p>\n<p><strong>Vagrantfile</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">Vagrant<span class=\"token punctuation\">.</span>configure<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"2\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>config<span class=\"token operator\">|</span>\n    config<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span>box <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"wildetech/hyper-u1404\"</span></span>\n    config<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span>hostname <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"docker.vm\"</span></span>\n\n    <span class=\"token comment\"># vagrant plugin install vagrant-hostmanager</span>\n    config<span class=\"token punctuation\">.</span>hostmanager<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    config<span class=\"token punctuation\">.</span>hostmanager<span class=\"token punctuation\">.</span>manage_host <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\n    config<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span>provision <span class=\"token symbol\">:shell</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">path</span><span class=\"token operator\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Provision.sh\"</span></span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p><strong>Provision.sh</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/usr/bin/env bash</span>\n\n<span class=\"token comment\"># Install latest docker</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-sSL</span> https://get.docker.com/ubuntu/ <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">sh</span>\n\n<span class=\"token comment\"># You can use docker without TLS like this:</span>\n<span class=\"token comment\"># echo 'DOCKER_OPTS=\"-H=unix:///var/run/docker.sock -H=0.0.0.0:2375\"' | sudo tee --append /etc/default/docker</span>\n\n<span class=\"token comment\"># And here is \"secure\" way</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">git</span> ruby-dev\n<span class=\"token function\">git</span> clone https://gist.github.com/sheerun/ccdeff92ea1668f3c75f certgen\n<span class=\"token function\">sudo</span> gem <span class=\"token function\">install</span> certificate_authority\nruby certgen/certgen.rb docker.vm <span class=\"token comment\"># You MUST generate keys for FQDN not for IP</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> /root/.docker/*.pem /vagrant/\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'DOCKER_OPTS=\"--tlsverify -H=unix:///var/run/docker.sock -H=0.0.0.0:2376 --tlscacert=/root/.docker/docker.vm/ca.pem --tlscert=/root/.docker/docker.vm/cert.pem --tlskey=/root/.docker/docker.vm/key.pem\"'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> <span class=\"token parameter variable\">--append</span> /etc/default/docker\n\n<span class=\"token comment\"># Lastly allow vagrant user to do things without sudo and restart docker</span>\n<span class=\"token function\">sudo</span> gpasswd <span class=\"token parameter variable\">-a</span> vagrant <span class=\"token function\">docker</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">service</span> <span class=\"token function\">docker</span> restart</code></pre></div>\n<p>Docker client for windows can be found here: <a href=\"https://master.dockerproject.com/\">https://master.dockerproject.com/</a></p>\n<p>Setting environment variables for docker client:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">SET <span class=\"token assign-left variable\">DOCKER_HOST</span><span class=\"token operator\">=</span>tcp://docker.vm:2376\nSET <span class=\"token assign-left variable\">DOCKER_TLS_VERIFY</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nSET <span class=\"token assign-left variable\">DOCKER_CERT_PATH</span><span class=\"token operator\">=</span>C:<span class=\"token punctuation\">\\</span>Users<span class=\"token punctuation\">\\</span>Alexandr<span class=\"token punctuation\">\\</span>Desktop<span class=\"token punctuation\">\\</span>Docker</code></pre></div>\n<p>without them you should run commands like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker.exe <span class=\"token parameter variable\">-H</span> tcp://192.168.137.190:2375 <span class=\"token function\">ps</span></code></pre></div>\n<p>if you are running without TLS, or:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker.exe <span class=\"token parameter variable\">--tlsverify</span> <span class=\"token parameter variable\">--tlscacert</span><span class=\"token operator\">=</span>ca.pem <span class=\"token parameter variable\">--tlscert</span><span class=\"token operator\">=</span>cert.pem <span class=\"token parameter variable\">--tlskey</span><span class=\"token operator\">=</span>key.pem <span class=\"token parameter variable\">-H</span> tcp://docker.vm:2376 <span class=\"token function\">ps</span></code></pre></div>\n<p>Important note: you MUST generate keys for FQDN rather than IP, otherwise you will get \"x509: cannot validate certificate for because it doesn't contain any ip sans\"</p>\n<p>Unfortunatelly at current moment <code class=\"language-text\">docker.exe</code> having troubles with color codes.</p>\n<p><a href=\"http://sheerun.net/2014/05/17/remote-access-to-docker-with-tls/\">http://sheerun.net/2014/05/17/remote-access-to-docker-with-tls/</a> - here is manual where i have found ruby script</p>"}},"pageContext":{"id":"90a74187-482a-5994-8300-b01e8c3884d1"}},"staticQueryHashes":[],"slicesMap":{}}