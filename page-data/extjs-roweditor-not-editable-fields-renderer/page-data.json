{"componentChunkName":"component---src-templates-note-js","path":"/extjs-roweditor-not-editable-fields-renderer/","result":{"data":{"remark":{"fields":{"path":"extjs-roweditor-not-editable-fields-renderer"},"meta":{"title":""},"headings":[{"value":"ExtJS RowEditor not editable fields renderer"}],"html":"<h1>ExtJS RowEditor not editable fields renderer</h1>\n<p>RowEditor не использует рендерер таблицы, а вызывает <code class=\"language-text\">Ext.form.DisplayField</code>, для того чтобы исправить ситуацию, необходимо изменить метод <code class=\"language-text\">startEditing</code> в файле <code class=\"language-text\">RowEditor.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">startEditing</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rowIndex<span class=\"token punctuation\">,</span> doFocus</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">--</span><span class=\"token comment\">//--</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len <span class=\"token operator\">=</span> cm<span class=\"token punctuation\">.</span><span class=\"token function\">getColumnCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\nval <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">preEditValue</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">,</span> cm<span class=\"token punctuation\">.</span><span class=\"token function\">getDataIndex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nf <span class=\"token operator\">=</span> fields<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/////////////////////////////////////////////////////</span>\n\n<span class=\"token keyword\">var</span> column <span class=\"token operator\">=</span> cm<span class=\"token punctuation\">.</span><span class=\"token function\">getColumnById</span><span class=\"token punctuation\">(</span>cm<span class=\"token punctuation\">.</span><span class=\"token function\">getColumnId</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                ed <span class=\"token operator\">=</span> column<span class=\"token punctuation\">.</span><span class=\"token function\">getEditor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                val <span class=\"token operator\">=</span> column<span class=\"token punctuation\">.</span><span class=\"token function\">renderer</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>column<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> record<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/////////////////////////////////////////////////////</span>\n\nf<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Ext<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> val<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">--</span><span class=\"token comment\">//--</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>так же для того чтобы не вылазило боков при редактировании необходимо подправить метод <code class=\"language-text\">stopEditing</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">stopEditing</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">saveChanges</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">--</span><span class=\"token comment\">//--</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len <span class=\"token operator\">=</span> cm<span class=\"token punctuation\">.</span><span class=\"token function\">getColumnCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">/////////////////////////////////////////////////////</span>\n\n<span class=\"token keyword\">var</span> column <span class=\"token operator\">=</span> cm<span class=\"token punctuation\">.</span><span class=\"token function\">getColumnById</span><span class=\"token punctuation\">(</span>cm<span class=\"token punctuation\">.</span><span class=\"token function\">getColumnId</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ned <span class=\"token operator\">=</span> column<span class=\"token punctuation\">.</span><span class=\"token function\">getEditor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>cm<span class=\"token punctuation\">.</span><span class=\"token function\">isHidden</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> ed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">/////////////////////////////////////////////////////</span>\n\n<span class=\"token comment\">//if(!cm.isHidden(i)){</span>\n<span class=\"token keyword\">var</span> dindex <span class=\"token operator\">=</span> cm<span class=\"token punctuation\">.</span><span class=\"token function\">getDataIndex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Ext<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>dindex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">--</span><span class=\"token comment\">//--</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}},"pageContext":{"id":"4c94dd2e-5517-53e6-80bf-da2c9d43212e"}},"staticQueryHashes":[],"slicesMap":{}}