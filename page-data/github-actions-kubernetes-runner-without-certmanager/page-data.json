{"componentChunkName":"component---src-templates-note-js","path":"/github-actions-kubernetes-runner-without-certmanager","result":{"data":{"remark":{"fields":{"path":"github-actions-kubernetes-runner-without-certmanager"},"meta":{"title":""},"headings":[{"value":"GitHub Actions Runner in Kubernetes without Cert-manager"},{"value":"Actions Runner Controller"}],"html":"<h1>GitHub Actions Runner in Kubernetes without Cert-manager</h1>\n<p>There is <a href=\"https://github.com/actions-runner-controller/actions-runner-controller\">actions-runner-controller</a> Kubernetes controller for GitHub self hosted action runners.</p>\n<p>It is possible to <a href=\"https://github.com/actions-runner-controller/actions-runner-controller/blob/master/docs/detailed-docs.md#using-without-cert-manager\">run it without Cert-manager</a></p>\n<p>The drawback is possible slower registration of runners, but we have no dependency on Cert-manager which might be important in some scenarious when you not fully control cluster or want everything to be losely coupled.</p>\n<h2>Certificates</h2>\n<p>From previous notes about <a href=\"https://mac-blog.org.ua/openssl-ca-key-csr-crt-san\">creating self signed cert</a> I ended up with following script:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> *.pem *.csr *.srl <span class=\"token operator\">||</span> <span class=\"token boolean\">true</span>\n\n<span class=\"token comment\"># Step 1: CA</span>\n<span class=\"token comment\"># ----------</span>\n\n<span class=\"token comment\"># create CA, it is secret, keep it safe</span>\nopenssl genrsa <span class=\"token parameter variable\">-out</span> ca.private.pem <span class=\"token number\">2048</span>\n\n<span class=\"token comment\"># create public CA, give it to everyone so they can add it to trusted root</span>\nopenssl req <span class=\"token parameter variable\">-x509</span> <span class=\"token parameter variable\">-new</span> <span class=\"token parameter variable\">-key</span> ca.private.pem <span class=\"token parameter variable\">-out</span> ca.public.pem <span class=\"token parameter variable\">-days</span> <span class=\"token number\">10000</span> <span class=\"token parameter variable\">-subj</span> <span class=\"token string\">\"/C=UA/L=Kiev\"</span>\n\n<span class=\"token comment\"># Step 2: Certificate</span>\n<span class=\"token comment\"># -------------------</span>\n\n<span class=\"token comment\"># create certificate, it is secret, keep it safe</span>\nopenssl genrsa <span class=\"token parameter variable\">-out</span> cert.private.pem <span class=\"token number\">2048</span>\n\n<span class=\"token comment\"># create \"certificate signing request\" (csr)</span>\nopenssl req <span class=\"token parameter variable\">-new</span> <span class=\"token parameter variable\">-key</span> cert.private.pem <span class=\"token parameter variable\">-out</span> cert.csr <span class=\"token parameter variable\">-subj</span> <span class=\"token string\">\"/CN=actions-runner-controller-webhook.actions-runner-system.svc\"</span>\n\n<span class=\"token comment\"># config</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOT<span class=\"token bash punctuation\"> <span class=\"token operator\">>></span> cert.conf</span>\n[SAN]\nsubjectAltName = @alt_names\n[alt_names]\nDNS.1 = actions-runner-controller-webhook.actions-runner-system.svc\nDNS.2 = actions-runner-controller-webhook.actions-runner-system.svc.cluster.local\nEOT</span>\n\n<span class=\"token comment\"># sign it with our CA</span>\nopenssl x509 <span class=\"token parameter variable\">-req</span> <span class=\"token parameter variable\">-in</span> cert.csr <span class=\"token parameter variable\">-CA</span> ca.public.pem <span class=\"token parameter variable\">-CAkey</span> ca.private.pem <span class=\"token parameter variable\">-CAcreateserial</span> <span class=\"token parameter variable\">-out</span> cert.public.pem <span class=\"token parameter variable\">-days</span> <span class=\"token number\">10000</span> <span class=\"token parameter variable\">-extensions</span> SAN <span class=\"token parameter variable\">-extfile</span> cert.conf\n\n<span class=\"token comment\"># clean</span>\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> *.csr *.srl cert.conf <span class=\"token operator\">||</span> <span class=\"token boolean\">true</span>\n\n<span class=\"token comment\"># check</span>\nopenssl x509 <span class=\"token parameter variable\">-in</span> cert.public.pem <span class=\"token parameter variable\">-text</span> <span class=\"token parameter variable\">-noout</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> DNS</code></pre></div></p>\n<p>Important note here is that cert should have SAN with exactly that DNS names for controller to work</p>\n<p>The next step will be to prepare namespace and add this certificates</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl create ns actions-runner-system\nkubectl create secret tls actions-runner-controller-serving-cert <span class=\"token parameter variable\">-n</span> actions-runner-system <span class=\"token parameter variable\">--cert</span><span class=\"token operator\">=</span>cert.public.pem <span class=\"token parameter variable\">--key</span><span class=\"token operator\">=</span>cert.private.pem</code></pre></div>\n<h1>Actions Runner Controller</h1>\n<p>Now it is time for controller</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">helm upgrade actions-runner-controller actions-runner-controller <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--install</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--namespace</span> actions-runner-system <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--repo</span> https://actions-runner-controller.github.io/actions-runner-controller <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">-f</span> values.yml</code></pre></div>\n<p><strong>values.yml</strong></p>\n<p>Values are pretty default ones, the important changes are:</p>\n<ul>\n<li><code class=\"language-text\">certManagerEnabled: false</code> - to disable Cert-manager</li>\n<li><code class=\"language-text\">caBundle: xxxxxx==</code> - base64 encoded content of ca.public.pem created in previous step</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">authSecret</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">create</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">github_token</span><span class=\"token punctuation\">:</span> ghp_xxxxxxxxxxxxxxx\n\n<span class=\"token comment\"># POI: disable cert manager</span>\n<span class=\"token key atrule\">certManagerEnabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n\n<span class=\"token key atrule\">admissionWebHooks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># POI: cat ca.public.pem | base64</span>\n  <span class=\"token key atrule\">caBundle</span><span class=\"token punctuation\">:</span> xxxxxxxxxxxxxxxxxxxxxxxxxxxx=\n\n<span class=\"token key atrule\">nodeSelector</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">poolDestination</span><span class=\"token punctuation\">:</span> app\n\n<span class=\"token key atrule\">podAnnotations</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">prometheus.io/scrape</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"true\"</span>\n  <span class=\"token key atrule\">prometheus.io/path</span><span class=\"token punctuation\">:</span> /metrics\n  <span class=\"token key atrule\">prometheus.io/port</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"8080\"</span></code></pre></div>\n<h2>GitHub Actions Runner</h2>\n<p>once again nothing important here, everything may be left as default</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOT<span class=\"token bash punctuation\"> <span class=\"token operator\">>></span> runner.yml</span>\napiVersion: actions.summerwind.dev/v1alpha1\nkind: RunnerDeployment\nmetadata:\n  name: gha\n  namespace: actions-runner-system\nspec:\n  replicas: 1\n  template:\n    spec:\n      # https://github.com/actions-runner-controller/actions-runner-controller/blob/master/docs/detailed-docs.md#runner-with-dind\n      dockerdWithinRunnerContainer: true\n      organization: rabotaua\n      labels:\n        - 'gha'\n        - 'gha-dev'\n      nodeSelector:\n        poolDestination: app\n      resources:\n        limits:\n          cpu: \"1.0\"\n          memory: \"4Gi\"\n        requests:\n          cpu: \"1.0\"\n          memory: \"4Gi\"\n      # dockerdContainerResources:\n      #   limits:\n      #     cpu: \"2.0\"\n      #     memory: \"8Gi\"\n      #   requests:\n      #     cpu: \"1.0\"\n      #     memory: \"4Gi\"\nEOT</span>\n\nkubectl apply <span class=\"token parameter variable\">-f</span> runner.yml</code></pre></div>\n<p>And if everything done right we should see our runner:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl <span class=\"token parameter variable\">-n</span> actions-runner-system get runners\nkubectl <span class=\"token parameter variable\">-n</span> actions-runner-system get po <span class=\"token parameter variable\">-l</span> runner-deployment-name<span class=\"token operator\">=</span>gha\nkubectl <span class=\"token parameter variable\">-n</span> actions-runner-system <span class=\"token function\">top</span> po <span class=\"token parameter variable\">-l</span> runner-deployment-name<span class=\"token operator\">=</span>gha</code></pre></div></p>\n<h2>Cleanup</h2>\n<p>To cleanup everything use something like this:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Step 1: Runner</span>\nkubectl <span class=\"token parameter variable\">-n</span> actions-runner-system delete runnerdeployment gha\n<span class=\"token comment\"># Step 2: Helm</span>\nhelm <span class=\"token parameter variable\">-n</span> actions-runner-system uninstall actions-runner-controller\n<span class=\"token comment\"># Step 3: Namespace</span>\nkubectl delete ns actions-runner-system</code></pre></div></p>"}},"pageContext":{"id":"5305472f-610f-5aec-ace5-d00a19f521dd"}},"staticQueryHashes":[]}