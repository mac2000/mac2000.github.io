{"componentChunkName":"component---src-templates-note-js","path":"/zend-auto-loader/","result":{"data":{"remark":{"fields":{"path":"zend-auto-loader"},"meta":{"title":""},"headings":[{"value":"Zend Auto Loader"}],"html":"<h1>Zend Auto Loader</h1>\n<p>Неободимо сделать так чтобы папка Zend была доступна из <code class=\"language-text\">include_path</code>.</p>\n<p>В примерах используют следующее:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">set_include_path</span><span class=\"token punctuation\">(</span><span class=\"token function\">implode</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PATH_SEPARATOR</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">realpath</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APPLICATION_PATH</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'/../library'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">get_include_path</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Если используется <strong>xampp</strong> это дело можно пропустить, так как Zend лежит в <code class=\"language-text\">C:\\xampp\\php\\PEAR</code> который виден для php.</p>\n<p>TODO: ссылка на доку по обновлению PEAR</p>\n<p>Использование автозагрузчика сводиться к следующему:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">require_once</span> <span class=\"token string single-quoted-string\">'Zend/Loader/Autoloader.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$autoloader</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Zend_Loader_Autoloader</span><span class=\"token operator\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$autoloader</span><span class=\"token operator\">-></span><span class=\"token function\">registerNamespace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Application_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>После этого можно загружать любые классы Zend’а, плюс свои классы из пространства имен Application</p>\n<p>Подробнее:</p>\n<p><a href=\"http://framework.zend.com/manual/ru/zend.loader.autoloader.html\">Zend loader autoloader</a></p>\n<p><strong>Application.ini</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token comment\">;resources.frontController.controllerDirectory = APPLICATION_PATH \"/controllers\"</span>\n<span class=\"token key attr-name\">resources.moduleController.controllerDirectory</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">APPLICATION_PATH \"/modules\"</span>\n<span class=\"token key attr-name\">autoloaderNamespaces.zc</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"<span class=\"token inner-value\">ZC_</span>\"</span>\n<span class=\"token key attr-name\">resources.frontController.plugins.AssetGrabber</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"<span class=\"token inner-value\">ZC_Controller_Plugin_AssetsGrabber</span>\"</span>\n\n<span class=\"token comment\">;move controllers and views folders to /modules/default/ folder, also we can create, for example admin direcotry, with its own controllers and views</span>\n\n<span class=\"token key attr-name\">resources.layout.layoutpath</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">APPLICATION_PATH \"/layouts\"</span>\n<span class=\"token key attr-name\">resources.layout.layout</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">default</span>\n\n<span class=\"token key attr-name\">resources.frontController.plugins.LayoutPicker</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">\"<span class=\"token inner-value\">ZC_Controller_Plugin_LayoutPicker</span>\"</span></code></pre></div>\n<p>need <code class=\"language-text\">/layouts/admin.phtml</code> and <code class=\"language-text\">layouts/default.phtml</code></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">ZF_Controller_Plugin_LayoutPicker <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Zend_Controller_Plugin_Abstract</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">preDispatch</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Zend_Controller_Request_Abstract</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name static-context\">Zend_Layout</span><span class=\"token operator\">::</span><span class=\"token function\">getMvcInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token operator\">-></span><span class=\"token function\">getModuleName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}},"pageContext":{"id":"7e1a96ea-5509-56c8-a44b-8c3c10bbd4db"}},"staticQueryHashes":[],"slicesMap":{}}