{"componentChunkName":"component---src-templates-note-js","path":"/sql-xml-csharp","result":{"data":{"remark":{"fields":{"path":"sql-xml-csharp"},"meta":{"title":""},"headings":[{"value":"Dealing with XML in SQL Server and C#"}],"html":"<h1>Dealing with XML in SQL Server and C#</h1>\n<p>Did you know that you can retrieve hierarchical data from SQL?</p>\n<p>There is huge amount ot tips how to get comma separated lists from SQL server, like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\nP<span class=\"token punctuation\">.</span>PostId<span class=\"token punctuation\">,</span>\nP<span class=\"token punctuation\">.</span>Title<span class=\"token punctuation\">,</span>\nSTUFF<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> <span class=\"token string\">','</span> <span class=\"token operator\">+</span> C<span class=\"token punctuation\">.</span>Name\n    <span class=\"token keyword\">FROM</span> PostCategories <span class=\"token keyword\">AS</span> PC\n    <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> Categories <span class=\"token keyword\">AS</span> C <span class=\"token keyword\">ON</span> PC<span class=\"token punctuation\">.</span>CategoryId <span class=\"token operator\">=</span> C<span class=\"token punctuation\">.</span>CategoryId\n    <span class=\"token keyword\">WHERE</span> PC<span class=\"token punctuation\">.</span>PostId <span class=\"token operator\">=</span> P<span class=\"token punctuation\">.</span>PostId\n    <span class=\"token keyword\">FOR</span> XML PATH<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">TYPE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'NVARCHAR(MAX)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> Categories\n<span class=\"token keyword\">FROM</span> Posts <span class=\"token keyword\">AS</span> P</code></pre></div>\n<p>which will return something like this:</p>\n<table>\n<thead>\n<tr>\n<th>PostId</th>\n<th>Title</th>\n<th>Categories</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>Composer tutorial</td>\n<td>IT</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Going agile</td>\n<td>IT,Management</td>\n</tr>\n<tr>\n<td>3</td>\n<td>XSL your XML</td>\n<td>IT</td>\n</tr>\n</tbody>\n</table>\n<p><strong>I am wondering why do I need convert nice XML from inner select into comma separated list string to explode it later in C# at all?!</strong></p>\n<h2>Sample database</h2>\n<p>We are going to build following database:</p>\n<p><img src=\"http://yuml.me/e8e4027f.svg\" alt=\"Database\"></p>\n<p>Here is sample SQL on which tests will be made:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- Cleanup</span>\n<span class=\"token keyword\">IF</span> OBJECT_ID<span class=\"token punctuation\">(</span><span class=\"token string\">'dbo.PostCategories'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'U'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> dbo<span class=\"token punctuation\">.</span>PostCategories\nGO\n\n<span class=\"token keyword\">IF</span> OBJECT_ID<span class=\"token punctuation\">(</span><span class=\"token string\">'dbo.Posts'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'U'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> dbo<span class=\"token punctuation\">.</span>Posts\nGO\n\n<span class=\"token keyword\">IF</span> OBJECT_ID<span class=\"token punctuation\">(</span><span class=\"token string\">'dbo.Authors'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'U'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> dbo<span class=\"token punctuation\">.</span>Authors\nGO\n\n<span class=\"token keyword\">IF</span> OBJECT_ID<span class=\"token punctuation\">(</span><span class=\"token string\">'dbo.Categories'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'U'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> dbo<span class=\"token punctuation\">.</span>Categories\nGO\n\n<span class=\"token comment\">-- Schema</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> dbo<span class=\"token punctuation\">.</span>Authors <span class=\"token punctuation\">(</span>\n    AuthorId <span class=\"token keyword\">INT</span> <span class=\"token keyword\">IDENTITY</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    FullName NVARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    BirthDate <span class=\"token keyword\">DATE</span>\n<span class=\"token punctuation\">)</span>\nGO\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> dbo<span class=\"token punctuation\">.</span>Posts <span class=\"token punctuation\">(</span>\n    PostId <span class=\"token keyword\">INT</span> <span class=\"token keyword\">IDENTITY</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    Title NVARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    AuthorId <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">CONSTRAINT</span> FK_Posts_Authors <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>AuthorId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> dbo<span class=\"token punctuation\">.</span>Authors <span class=\"token punctuation\">(</span>AuthorId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">CASCADE</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">CASCADE</span>\n<span class=\"token punctuation\">)</span>\nGO\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> dbo<span class=\"token punctuation\">.</span>Categories <span class=\"token punctuation\">(</span>\n    CategoryId <span class=\"token keyword\">INT</span> <span class=\"token keyword\">IDENTITY</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n    Name NVARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token punctuation\">)</span>\nGO\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> dbo<span class=\"token punctuation\">.</span>PostCategories <span class=\"token punctuation\">(</span>\n    PostId <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    CategoryId <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">CONSTRAINT</span> FK_PostCategory_Posts <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>PostId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> dbo<span class=\"token punctuation\">.</span>Posts <span class=\"token punctuation\">(</span>PostId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">CASCADE</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">CASCADE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">CONSTRAINT</span> FK_PostCategory_Categories <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>CategoryId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> dbo<span class=\"token punctuation\">.</span>Categories <span class=\"token punctuation\">(</span>CategoryId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">CASCADE</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">CASCADE</span>\n<span class=\"token punctuation\">)</span>\nGO\n\n<span class=\"token comment\">--Data</span>\n<span class=\"token keyword\">SET</span> <span class=\"token keyword\">IDENTITY_INSERT</span> dbo<span class=\"token punctuation\">.</span>Authors <span class=\"token keyword\">ON</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Authors <span class=\"token punctuation\">(</span>AuthorId<span class=\"token punctuation\">,</span> FullName<span class=\"token punctuation\">,</span> BirthDate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Alexandr Marchenko'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1985-03-11'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Maria Marchenko'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1988-06-11'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">SET</span> <span class=\"token keyword\">IDENTITY_INSERT</span> dbo<span class=\"token punctuation\">.</span>Authors <span class=\"token keyword\">OFF</span>\nGO\n\n<span class=\"token keyword\">SET</span> <span class=\"token keyword\">IDENTITY_INSERT</span> dbo<span class=\"token punctuation\">.</span>Categories <span class=\"token keyword\">ON</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Categories <span class=\"token punctuation\">(</span>CategoryId<span class=\"token punctuation\">,</span> Name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'IT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Management'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">SET</span> <span class=\"token keyword\">IDENTITY_INSERT</span> dbo<span class=\"token punctuation\">.</span>Categories <span class=\"token keyword\">OFF</span>\nGO\n\n<span class=\"token keyword\">SET</span> <span class=\"token keyword\">IDENTITY_INSERT</span> dbo<span class=\"token punctuation\">.</span>Posts <span class=\"token keyword\">ON</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Posts <span class=\"token punctuation\">(</span>PostId<span class=\"token punctuation\">,</span> Title<span class=\"token punctuation\">,</span> AuthorId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Composer tutorial'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Going agile'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'XSL your XML'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">SET</span> <span class=\"token keyword\">IDENTITY_INSERT</span> dbo<span class=\"token punctuation\">.</span>Posts <span class=\"token keyword\">OFF</span>\nGO\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> PostCategories <span class=\"token punctuation\">(</span>PostId<span class=\"token punctuation\">,</span> CategoryId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nGO</code></pre></div>\n<p><a href=\"http://yuml.me/\">yuml.me</a> definition:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[Authors|AuthorId:int;FullName:string;BirthDate:date]\n[Posts|PostId:int;Title:string;AuthorId:int]\n[Categories|CategoryId:int;Name:string]\n[PostCategories|PostId:int;CategoryId:int]\n[Authors]1->*[Posts]\n[Posts]1->*[PostCategories]\n[Categories]1->*[PostCategories]</code></pre></div>\n<h2>Map SQL query XML result to C# object</h2>\n<p>Suppose we have following class:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> PostId <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Title <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> AuthorId <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>SQL Query: <code class=\"language-text\">SELECT P.* FROM Posts AS P FOR XML PATH('Post'), ROOT('ArrayOfPost')</code> will return XML:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ArrayOfPost</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Title</span><span class=\"token punctuation\">></span></span>Composer tutorial<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Title</span><span class=\"token punctuation\">></span></span>Going agile<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Title</span><span class=\"token punctuation\">></span></span>XSL your XML<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Post</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ArrayOfPost</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><strong>Notice</strong> how we named root node of xml as <code class=\"language-text\">ArrayOfPost</code> it is used by C# xml serializer while deserializing XML into objects to determine that we wish to get <code class=\"language-text\">List&lt;Post></code></p>\n<p>Here is how to deserialize that query into <code class=\"language-text\">List&lt;Post></code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\">XmlSerializer</span> xmlSerializer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">XmlSerializer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">List<span class=\"token punctuation\">&lt;</span>Post<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> connection <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnectionStringBuilder</span> <span class=\"token punctuation\">{</span> InitialCatalog <span class=\"token operator\">=</span> <span class=\"token string\">\"Play\"</span><span class=\"token punctuation\">,</span> IntegratedSecurity <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ConnectionString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT P.* FROM Posts AS P FOR XML PATH('Post'), ROOT('ArrayOfPost')\"</span><span class=\"token punctuation\">,</span> connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        connection<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> reader <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteXmlReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> post <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>List<span class=\"token operator\">&lt;</span>Post<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>xmlSerializer<span class=\"token punctuation\">.</span><span class=\"token function\">Deserialize</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Id: {0:N0}, Title: {1}\"</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>PostId<span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>Title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Joining objects together</h2>\n<p>Lets modify our object to be like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> PostId <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Title <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Author</span> Author <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Id did replace <code class=\"language-text\">public int AuthorId { get; set; }</code> with <code class=\"language-text\">public Author Author { get; set; }</code></p>\n<p>Now we are going to ask our database for more information with this query:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\nP<span class=\"token punctuation\">.</span>PostId<span class=\"token punctuation\">,</span>\nP<span class=\"token punctuation\">.</span>Title<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Authors <span class=\"token keyword\">AS</span> A <span class=\"token keyword\">WHERE</span> A<span class=\"token punctuation\">.</span>AuthorId <span class=\"token operator\">=</span> P<span class=\"token punctuation\">.</span>AuthorId <span class=\"token keyword\">FOR</span> XML PATH<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">TYPE</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> Author\n<span class=\"token keyword\">FROM</span> Posts <span class=\"token keyword\">AS</span> P\n<span class=\"token keyword\">FOR</span> XML PATH<span class=\"token punctuation\">(</span><span class=\"token string\">'Post'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ROOT<span class=\"token punctuation\">(</span><span class=\"token string\">'ArrayOfPost'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>which will return:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ArrayOfPost</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Title</span><span class=\"token punctuation\">></span></span>Composer tutorial<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Author</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FullName</span><span class=\"token punctuation\">></span></span>Alexandr Marchenko<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FullName</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BirthDate</span><span class=\"token punctuation\">></span></span>1985-03-11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>BirthDate</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Author</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Title</span><span class=\"token punctuation\">></span></span>Going agile<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Author</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FullName</span><span class=\"token punctuation\">></span></span>Maria Marchenko<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FullName</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BirthDate</span><span class=\"token punctuation\">></span></span>1988-06-11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>BirthDate</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Author</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Title</span><span class=\"token punctuation\">></span></span>XSL your XML<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Author</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FullName</span><span class=\"token punctuation\">></span></span>Alexandr Marchenko<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FullName</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BirthDate</span><span class=\"token punctuation\">></span></span>1985-03-11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>BirthDate</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Author</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Post</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ArrayOfPost</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>And mapping from previous example should still work (just make sure to chage query):</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\">XmlSerializer</span> xmlSerializer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">XmlSerializer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">List<span class=\"token punctuation\">&lt;</span>Post<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> connection <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnectionStringBuilder</span> <span class=\"token punctuation\">{</span> InitialCatalog <span class=\"token operator\">=</span> <span class=\"token string\">\"Play\"</span><span class=\"token punctuation\">,</span> IntegratedSecurity <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ConnectionString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT P.PostId, P.Title, (SELECT * FROM Authors AS A WHERE A.AuthorId = P.AuthorId FOR XML PATH(''), TYPE) AS Author FROM Posts AS P FOR XML PATH('Post'), ROOT('ArrayOfPost')\"</span><span class=\"token punctuation\">,</span> connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        connection<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> reader <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteXmlReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> post <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>List<span class=\"token operator\">&lt;</span>Post<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>xmlSerializer<span class=\"token punctuation\">.</span><span class=\"token function\">Deserialize</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Id: {0:N0}, Title: {1}, Author: {2} ({3:yyyy\\\\-MM\\\\-dd})\"</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>PostId<span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>Title<span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>Author<span class=\"token punctuation\">.</span>FullName<span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>Author<span class=\"token punctuation\">.</span>BirthDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>will output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Id: 1, Title: Composer tutorial, Author: Alexandr Marchenko (1985-03-11)\nId: 2, Title: Going agile, Author: Maria Marchenko (1988-06-11)\nId: 3, Title: XSL your XML, Author: Alexandr Marchenko (1985-03-11)</code></pre></div>\n<p><strong>IT IS AWESOME!</strong></p>\n<h2>Joining multiple objects</h2>\n<p>Lets modify our class again:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> PostId <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Title <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Author</span> Author <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> Categories <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now I have added <code class=\"language-text\">public string[] Categories { get; set; }</code> notice that it is just array of strings, in following example we will join categories itself to post object.</p>\n<p>For C# xml serializer to be able to deserialize strings array xml should look something like: <code class=\"language-text\">&lt;acme>&lt;string>foo&lt;/string>&lt;string>bar&lt;/string>&lt;/acme></code>.</p>\n<p>So here is modified SQL:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\nP<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Authors <span class=\"token keyword\">AS</span> A <span class=\"token keyword\">WHERE</span> A<span class=\"token punctuation\">.</span>AuthorId <span class=\"token operator\">=</span> P<span class=\"token punctuation\">.</span>AuthorId <span class=\"token keyword\">FOR</span> XML PATH<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">TYPE</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> Author<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">SELECT</span> C<span class=\"token punctuation\">.</span>Name <span class=\"token keyword\">AS</span> string\n    <span class=\"token keyword\">FROM</span> PostCategories <span class=\"token keyword\">AS</span> PC\n    <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> Categories <span class=\"token keyword\">AS</span> C <span class=\"token keyword\">ON</span> PC<span class=\"token punctuation\">.</span>CategoryId <span class=\"token operator\">=</span> C<span class=\"token punctuation\">.</span>CategoryId\n    <span class=\"token keyword\">WHERE</span> PC<span class=\"token punctuation\">.</span>PostId <span class=\"token operator\">=</span> P<span class=\"token punctuation\">.</span>PostId\n    <span class=\"token keyword\">FOR</span> XML PATH<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">TYPE</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> Categories\n<span class=\"token keyword\">FROM</span> Posts <span class=\"token keyword\">AS</span> P <span class=\"token keyword\">FOR</span> XML PATH<span class=\"token punctuation\">(</span><span class=\"token string\">'Post'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ROOT<span class=\"token punctuation\">(</span><span class=\"token string\">'ArrayOfPost'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>And its ouput:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ArrayOfPost</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Title</span><span class=\"token punctuation\">></span></span>Composer tutorial<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Author</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FullName</span><span class=\"token punctuation\">></span></span>Alexandr Marchenko<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FullName</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BirthDate</span><span class=\"token punctuation\">></span></span>1985-03-11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>BirthDate</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Author</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Categories</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>IT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Categories</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Title</span><span class=\"token punctuation\">></span></span>Going agile<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Author</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FullName</span><span class=\"token punctuation\">></span></span>Maria Marchenko<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FullName</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BirthDate</span><span class=\"token punctuation\">></span></span>1988-06-11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>BirthDate</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Author</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Categories</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>IT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>Management<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Categories</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Title</span><span class=\"token punctuation\">></span></span>XSL your XML<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Author</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FullName</span><span class=\"token punctuation\">></span></span>Alexandr Marchenko<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FullName</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BirthDate</span><span class=\"token punctuation\">></span></span>1985-03-11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>BirthDate</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Author</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Categories</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>IT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Categories</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Post</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ArrayOfPost</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Our C# code will be able to deserialize this without changes again.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\">XmlSerializer</span> xmlSerializer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">XmlSerializer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">List<span class=\"token punctuation\">&lt;</span>Post<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> connection <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnectionStringBuilder</span> <span class=\"token punctuation\">{</span> InitialCatalog <span class=\"token operator\">=</span> <span class=\"token string\">\"Play\"</span><span class=\"token punctuation\">,</span> IntegratedSecurity <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ConnectionString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT P.*, (SELECT * FROM Authors AS A WHERE A.AuthorId = P.AuthorId FOR XML PATH(''), TYPE) AS Author, (SELECT C.Name AS string FROM PostCategories AS PC INNER JOIN Categories AS C ON PC.CategoryId = C.CategoryId WHERE PC.PostId = P.PostId FOR XML PATH(''), TYPE) AS Categories FROM Posts AS P FOR XML PATH('Post'), ROOT('ArrayOfPost')\"</span><span class=\"token punctuation\">,</span> connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        connection<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> reader <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteXmlReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> post <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>List<span class=\"token operator\">&lt;</span>Post<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>xmlSerializer<span class=\"token punctuation\">.</span><span class=\"token function\">Deserialize</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>\n                    <span class=\"token string\">\"[{0:N0}] {1} by {2} ({3:yyyy\\\\-MM\\\\-dd}) in {4}\"</span><span class=\"token punctuation\">,</span>\n                    post<span class=\"token punctuation\">.</span>PostId<span class=\"token punctuation\">,</span>\n                    post<span class=\"token punctuation\">.</span>Title<span class=\"token punctuation\">,</span>\n                    post<span class=\"token punctuation\">.</span>Author<span class=\"token punctuation\">.</span>FullName<span class=\"token punctuation\">,</span>\n                    post<span class=\"token punctuation\">.</span>Author<span class=\"token punctuation\">.</span>BirthDate<span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", \"</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>Categories<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Will output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[1] Composer tutorial by Alexandr Marchenko (1985-03-11) in IT\n[2] Going agile by Maria Marchenko (1988-06-11) in IT, Management\n[3] XSL your XML by Alexandr Marchenko (1985-03-11) in IT</code></pre></div>\n<h2>Joining List of objects</h2>\n<p>Here is last example:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> PostId <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Title <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Author</span> Author <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Category<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> Categories <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I did replace <code class=\"language-text\">public string[] Categories { get; set; }</code> with <code class=\"language-text\">public Category[] Categories { get; set; }</code> so now we wanna get list of categories rather than list of category names.</p>\n<p>Here is SQL query:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\nP<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Authors <span class=\"token keyword\">AS</span> A <span class=\"token keyword\">WHERE</span> A<span class=\"token punctuation\">.</span>AuthorId <span class=\"token operator\">=</span> P<span class=\"token punctuation\">.</span>AuthorId <span class=\"token keyword\">FOR</span> XML PATH<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">TYPE</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> Author<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n    <span class=\"token keyword\">FROM</span> PostCategories <span class=\"token keyword\">AS</span> PC\n    <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> Categories <span class=\"token keyword\">AS</span> C <span class=\"token keyword\">ON</span> PC<span class=\"token punctuation\">.</span>CategoryId <span class=\"token operator\">=</span> C<span class=\"token punctuation\">.</span>CategoryId\n    <span class=\"token keyword\">WHERE</span> PC<span class=\"token punctuation\">.</span>PostId <span class=\"token operator\">=</span> P<span class=\"token punctuation\">.</span>PostId\n    <span class=\"token keyword\">FOR</span> XML PATH<span class=\"token punctuation\">(</span><span class=\"token string\">'Category'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">TYPE</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> Categories\n<span class=\"token keyword\">FROM</span> Posts <span class=\"token keyword\">AS</span> P <span class=\"token keyword\">FOR</span> XML PATH<span class=\"token punctuation\">(</span><span class=\"token string\">'Post'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ROOT<span class=\"token punctuation\">(</span><span class=\"token string\">'ArrayOfPost'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>And its output:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ArrayOfPost</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Title</span><span class=\"token punctuation\">></span></span>Composer tutorial<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Author</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FullName</span><span class=\"token punctuation\">></span></span>Alexandr Marchenko<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FullName</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BirthDate</span><span class=\"token punctuation\">></span></span>1985-03-11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>BirthDate</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Author</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Categories</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Category</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CategoryId</span><span class=\"token punctuation\">></span></span>11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>CategoryId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>IT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Category</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Categories</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Title</span><span class=\"token punctuation\">></span></span>Going agile<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Author</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FullName</span><span class=\"token punctuation\">></span></span>Maria Marchenko<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FullName</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BirthDate</span><span class=\"token punctuation\">></span></span>1988-06-11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>BirthDate</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Author</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Categories</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Category</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CategoryId</span><span class=\"token punctuation\">></span></span>11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>CategoryId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>IT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Category</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Category</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CategoryId</span><span class=\"token punctuation\">></span></span>22<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>CategoryId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>Management<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Category</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Categories</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Post</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Title</span><span class=\"token punctuation\">></span></span>XSL your XML<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Author</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FullName</span><span class=\"token punctuation\">></span></span>Alexandr Marchenko<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FullName</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>BirthDate</span><span class=\"token punctuation\">></span></span>1985-03-11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>BirthDate</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Author</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Categories</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Category</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>CategoryId</span><span class=\"token punctuation\">></span></span>11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>CategoryId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Name</span><span class=\"token punctuation\">></span></span>IT<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Category</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Categories</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Post</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ArrayOfPost</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><strong>Notice</strong> that we are named our node <code class=\"language-text\">Categories</code> and not <code class=\"language-text\">ArrayOfCategories</code> it will work like this.</p>\n<p>C# code:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\">XmlSerializer</span> xmlSerializer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">XmlSerializer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">List<span class=\"token punctuation\">&lt;</span>Post<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> connection <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnectionStringBuilder</span> <span class=\"token punctuation\">{</span> InitialCatalog <span class=\"token operator\">=</span> <span class=\"token string\">\"Play\"</span><span class=\"token punctuation\">,</span> IntegratedSecurity <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ConnectionString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT P.*, (SELECT * FROM Authors AS A WHERE A.AuthorId = P.AuthorId FOR XML PATH(''), TYPE) AS Author, (SELECT * FROM PostCategories AS PC INNER JOIN Categories AS C ON PC.CategoryId = C.CategoryId WHERE PC.PostId = P.PostId FOR XML PATH('Category'), TYPE ) AS Categories FROM Posts AS P FOR XML PATH('Post'), ROOT('ArrayOfPost')\"</span><span class=\"token punctuation\">,</span> connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        connection<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> reader <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteXmlReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> post <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>List<span class=\"token operator\">&lt;</span>Post<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>xmlSerializer<span class=\"token punctuation\">.</span><span class=\"token function\">Deserialize</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>\n                    <span class=\"token string\">\"[{0:N0}] {1} by {2} ({3:yyyy\\\\-MM\\\\-dd}) in {4}\"</span><span class=\"token punctuation\">,</span>\n                    post<span class=\"token punctuation\">.</span>PostId<span class=\"token punctuation\">,</span>\n                    post<span class=\"token punctuation\">.</span>Title<span class=\"token punctuation\">,</span>\n                    post<span class=\"token punctuation\">.</span>Author<span class=\"token punctuation\">.</span>FullName<span class=\"token punctuation\">,</span>\n                    post<span class=\"token punctuation\">.</span>Author<span class=\"token punctuation\">.</span>BirthDate<span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", \"</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>Categories<span class=\"token punctuation\">.</span><span class=\"token function\">Select</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">=></span> c<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>output will be exactly the same as in previous example.</p>\n<h2>Workflow</h2>\n<p>If you ever got into troubles all you need to do is to try serialize/deserialize objects by hand, look at produced XML and try to reproduce it in SQL query</p>\n<p><strong>Serialize C# object to XML</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\">XmlSerializer</span> xmlSerializer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">XmlSerializer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">Post</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">StringBuilder</span> stringBuilder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> xmlWriter <span class=\"token operator\">=</span> XmlWriter<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>stringBuilder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    xmlSerializer<span class=\"token punctuation\">.</span><span class=\"token function\">Serialize</span><span class=\"token punctuation\">(</span>xmlWriter<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Post</span> <span class=\"token punctuation\">{</span> PostId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Title <span class=\"token operator\">=</span> <span class=\"token string\">\"Composer tutorial\"</span><span class=\"token punctuation\">,</span> AuthorId <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>stringBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>will output:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-16\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Post</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsd</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PostId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PostId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Title</span><span class=\"token punctuation\">></span></span>Composer tutorial<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Title</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AuthorId</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AuthorId</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Post</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><strong>Deserialize C# object from XML</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TextReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StringReader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;?xml version=\\\"1.0\\\" encoding=\\\"utf-16\\\"?>&lt;Post>&lt;PostId>1&lt;/PostId>&lt;Title>Composer tutorial&lt;/Title>&lt;AuthorId>1&lt;/AuthorId>&lt;/Post>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> post <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Post<span class=\"token punctuation\">)</span>xmlSerializer<span class=\"token punctuation\">.</span><span class=\"token function\">Deserialize</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Id: {0:N0}, Title: {1}, Author: {2:N0}\"</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>PostId<span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>Title<span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>AuthorId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Will output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Id: 1, Title: Composer tutorial, Author: 1</code></pre></div>\n<p><strong>Notice</strong> that we are ommited XML namespaces as they seems to be not required</p>\n<p>one more addition:</p>\n<h2>Saving C# object to SQL via XML</h2>\n<p>Stored procedure template:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">PROCEDURE</span> dbo<span class=\"token punctuation\">.</span>SavePost <span class=\"token variable\">@post</span> XML\n<span class=\"token keyword\">AS</span>\n<span class=\"token keyword\">BEGIN</span>\n    <span class=\"token keyword\">MERGE</span> dbo<span class=\"token punctuation\">.</span>Posts <span class=\"token keyword\">AS</span> target\n    <span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">SELECT</span>\n            Post<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(PostId/text())[1]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'INT'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> PostId<span class=\"token punctuation\">,</span>\n            Post<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(Title/text())[1]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'NVARCHAR(100)'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> Title<span class=\"token punctuation\">,</span>\n            Post<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(AuthorId/text())[1]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'INT'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> AuthorId\n        <span class=\"token keyword\">FROM</span>\n            <span class=\"token variable\">@post.nodes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Post'</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">AS</span> <span class=\"token keyword\">TEMPTABLE</span><span class=\"token punctuation\">(</span>Post<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> source <span class=\"token punctuation\">(</span>PostId<span class=\"token punctuation\">,</span> Title<span class=\"token punctuation\">,</span> AuthorId<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>PostId <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span>PostId<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">WHEN</span> <span class=\"token keyword\">MATCHED</span> <span class=\"token keyword\">THEN</span>\n        <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">SET</span> Title <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span>Title<span class=\"token punctuation\">,</span> AuthorId <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span>AuthorId\n    <span class=\"token keyword\">WHEN</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">MATCHED</span> <span class=\"token keyword\">THEN</span>\n        <span class=\"token keyword\">INSERT</span> <span class=\"token punctuation\">(</span>Title<span class=\"token punctuation\">,</span> AuthorId<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span>Title<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">.</span>AuthorId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span>\nGO</code></pre></div>\n<p>C# code sample:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> xmlSerializer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">XmlSerializer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">Post</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> stringBuilder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> xmlWriter <span class=\"token operator\">=</span> XmlWriter<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>stringBuilder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    xmlSerializer<span class=\"token punctuation\">.</span><span class=\"token function\">Serialize</span><span class=\"token punctuation\">(</span>xmlWriter<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Post</span> <span class=\"token punctuation\">{</span> PostId <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> Title <span class=\"token operator\">=</span> <span class=\"token string\">\"Stored Procedure XML\"</span><span class=\"token punctuation\">,</span> AuthorId <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>stringBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> connection <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnectionStringBuilder</span> <span class=\"token punctuation\">{</span> InitialCatalog <span class=\"token operator\">=</span> <span class=\"token string\">\"Play\"</span><span class=\"token punctuation\">,</span> IntegratedSecurity <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ConnectionString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> command <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SavePost\"</span><span class=\"token punctuation\">,</span> connection<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> CommandType <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">.</span>CommandType<span class=\"token punctuation\">.</span>StoredProcedure <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        command<span class=\"token punctuation\">.</span>Parameters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@post\"</span><span class=\"token punctuation\">,</span> stringBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        connection<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> numberOfAffectedRows <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteNonQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Number of affected rows: {0:N0}\"</span><span class=\"token punctuation\">,</span> numberOfAffectedRows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Example from: <a href=\"http://www.aspsnippets.com/Articles/Pass-XML-parameter-to-Stored-Procedure-in-C-and-VBNet.aspx\">http://www.aspsnippets.com/Articles/Pass-XML-parameter-to-Stored-Procedure-in-C-and-VBNet.aspx</a></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">PROCEDURE</span> <span class=\"token punctuation\">[</span>dbo<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>InsertXML<span class=\"token punctuation\">]</span>\n<span class=\"token variable\">@xml</span> XML\n<span class=\"token keyword\">AS</span>\n<span class=\"token keyword\">BEGIN</span>\n        <span class=\"token keyword\">SET</span> NOCOUNT <span class=\"token keyword\">ON</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> CustomerDetails\n        <span class=\"token keyword\">SELECT</span>\n        Customer<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@Id'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'INT'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> Id<span class=\"token punctuation\">,</span> <span class=\"token comment\">--ATTRIBUTE</span>\n        Customer<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(Name/text())[1]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'VARCHAR(100)'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> Name<span class=\"token punctuation\">,</span> <span class=\"token comment\">--TAG</span>\n        Customer<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(Country/text())[1]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'VARCHAR(100)'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> Country <span class=\"token comment\">--TAG</span>\n        <span class=\"token keyword\">FROM</span>\n        <span class=\"token variable\">@xml.nodes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Customers/Customer'</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">AS</span> <span class=\"token keyword\">TEMPTABLE</span><span class=\"token punctuation\">(</span>Customer<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">END</span></code></pre></div>\n<p>demonstrates how to retrieve atributes from xml</p>\n<p><strong>Notice</strong> that you can return whole saved object from stored procedure and deserialize it in C#, also you can pass as complex object as you wish.</p>\n<p>In this <a href=\"https://www.simple-talk.com/blogs/2012/01/05/using-xml-to-pass-lists-as-parameters-in-sql-server/\">article</a> there is sample of passing lists into stored procedure.</p>\n<p>In our case it can be something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DECLARE</span> <span class=\"token variable\">@post</span> XML\n<span class=\"token keyword\">SET</span> <span class=\"token variable\">@post</span> <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;Post xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n&lt;PostId>4&lt;/PostId>\n&lt;Title>1111Stored Procedure XML Parameter&lt;/Title>\n&lt;AuthorId>1&lt;/AuthorId>\n&lt;Categories>\n    &lt;string>IT&lt;/string>\n    &lt;string>Accounting&lt;/string>\n&lt;/Categories>\n&lt;/Post>'</span>\n\n<span class=\"token keyword\">SELECT</span> Category<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'NVARCHAR(100)'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> Category\n<span class=\"token keyword\">FROM</span> <span class=\"token variable\">@post.nodes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/Post/Categories/string/text()'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">TEMPTABLE</span><span class=\"token punctuation\">(</span>Category<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Which will return:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Category\n--------\nIT\nAccounting</code></pre></div>\n<p>This can be used to update multiple entites in database in one call.</p>\n<h2>SQL validate XML with XSD</h2>\n<p>Found at <a href=\"http://blog.sqlauthority.com/2009/12/02/sql-server-validate-an-xml-document-in-tsql-using-xsd-by-jacob-sebastian/\">http://blog.sqlauthority.com/2009/12/02/sql-server-validate-an-xml-document-in-tsql-using-xsd-by-jacob-sebastian/</a></p>\n<p><a href=\"http://mac-blog.org.ua/xsd-example/\">xsd example</a> describes what it is and provides sample of xsd</p>\n<p>Here is SQL to drop create XML schema collection:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> sys<span class=\"token punctuation\">.</span>xml_schema_collections <span class=\"token keyword\">WHERE</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'ItemsSchema'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DROP</span> XML <span class=\"token keyword\">SCHEMA</span> COLLECTION ItemsSchema\nGO\n\n<span class=\"token keyword\">CREATE</span> XML <span class=\"token keyword\">SCHEMA</span> COLLECTION ItemsSchema\n    <span class=\"token keyword\">AS</span><span class=\"token string\">'&lt;?xml version=\"1.0\" encoding=\"utf-8\"?>\n&lt;!-- describing schema for sample xml -->\n&lt;xs:schema attributeFormDefault=\"unqualified\" elementFormDefault=\"qualified\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n\n    &lt;xs:element name=\"items\">\n        &lt;!-- root element will be &lt;items> -->\n        &lt;xs:complexType>\n            &lt;!-- it will be complex (there are complex and simple) -->\n            &lt;xs:sequence>\n                &lt;!-- it will consists from sequence of other elements -->\n                &lt;xs:element name=\"item\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n                    &lt;!-- there will be zero or more &lt;item> elements in sequence -->\n                    &lt;xs:complexType>\n                        &lt;!-- they all have complex type -->\n                        &lt;xs:sequence>\n                            &lt;!-- each of them will have next sequence of elements -->\n                            &lt;xs:element name=\"name\" type=\"NonEmptyString\" minOccurs=\"1\"/>\n                            &lt;!-- required (minOccurs=\"1\") non empty (look for NonEmptyString at bottom) name field -->\n                            &lt;xs:element name=\"photo\" minOccurs=\"1\">\n                                &lt;!-- required photo with given pattern to validate urls for images -->\n                                &lt;xs:simpleType>\n                                    &lt;!-- this is example how to use additional restrictions for elements -->\n                                    &lt;xs:restriction base=\"xs:anyURI\">\n                                        &lt;xs:minLength value=\"1\" />\n                                        &lt;xs:pattern value=\"http://.*(png|jpg|jpeg|gif)\" />\n                                    &lt;/xs:restriction>\n                                &lt;/xs:simpleType>\n                            &lt;/xs:element>\n                            &lt;xs:element name=\"tags\" type=\"NonEmptyString\" minOccurs=\"1\"/>\n                            &lt;xs:element name=\"diameter\" type=\"xs:positiveInteger\" minOccurs=\"1\"/>\n                            &lt;xs:element name=\"weight\" type=\"xs:positiveInteger\" minOccurs=\"1\"/>\n                            &lt;xs:element name=\"price\" type=\"positiveDecimal\" minOccurs=\"1\"/>\n                            &lt;xs:element name=\"size\" minOccurs=\"0\" default=\"\">\n                                &lt;!-- example of enum field -->\n                                &lt;xs:simpleType>\n                                    &lt;xs:restriction base=\"xs:string\">\n                                        &lt;xs:enumeration value=\"\"/>\n                                        &lt;xs:enumeration value=\"Big\"/>\n                                        &lt;xs:enumeration value=\"Small\"/>\n                                    &lt;/xs:restriction>\n                                &lt;/xs:simpleType>\n                            &lt;/xs:element>\n                        &lt;/xs:sequence>\n                    &lt;/xs:complexType>\n                &lt;/xs:element>\n            &lt;/xs:sequence>\n        &lt;/xs:complexType>\n    &lt;/xs:element>\n    &lt;xs:simpleType name=\"positiveDecimal\">\n        &lt;xs:restriction base=\"xs:decimal\">\n            &lt;xs:minExclusive value=\"0\"/>\n            &lt;xs:fractionDigits value=\"2\"/>\n        &lt;/xs:restriction>\n    &lt;/xs:simpleType>\n    &lt;xs:simpleType name=\"NonEmptyString\">\n        &lt;!-- we can describe our types separately to reuse them later -->\n        &lt;xs:restriction base=\"xs:string\">\n            &lt;xs:minLength value=\"1\" />\n            &lt;xs:pattern value=\".*[^\\s].*\" />\n        &lt;/xs:restriction>\n    &lt;/xs:simpleType>\n&lt;/xs:schema>'</span>\nGO</code></pre></div>\n<p>Now if you will run:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DECLARE</span> <span class=\"token variable\">@xml</span> XML<span class=\"token punctuation\">(</span>ItemsSchema<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token variable\">@xml</span> <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;?xml version=\"1.0\" encoding=\"utf-8\"?>\n&lt;items>\n    &lt;item>\n        &lt;name>Item 1&lt;/name>\n        &lt;photo>http://example.com/photo1.png&lt;/photo>\n        &lt;tags>Tag1, Tag2&lt;/tags>\n        &lt;diameter>32&lt;/diameter>\n        &lt;weight>540&lt;/weight>\n        &lt;price>60&lt;/price>\n        &lt;size>Big&lt;/size>\n    &lt;/item>\n    &lt;item>\n        &lt;name>Item 1&lt;/name>\n        &lt;photo>http://example.com/photo2.png&lt;/photo>\n        &lt;tags>Tag1&lt;/tags>\n        &lt;diameter>23&lt;/diameter>\n        &lt;weight>340&lt;/weight>\n        &lt;price>50&lt;/price>\n    &lt;/item>\n&lt;/items>'</span></code></pre></div>\n<p>All will be ok but if you git empty name, or remove name at all or give it frong photo url SQL will warn you!</p>\n<p>For example here I trying to paste wrong photo url:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DECLARE</span> <span class=\"token variable\">@xml2</span> XML<span class=\"token punctuation\">(</span>ItemsSchema<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token variable\">@xml2</span> <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;?xml version=\"1.0\" encoding=\"utf-8\"?>\n&lt;items>\n    &lt;item>\n        &lt;name>Item 1&lt;/name>\n        &lt;photo>http://example.com/photo1&lt;/photo>\n        &lt;tags>Tag1, Tag2&lt;/tags>\n        &lt;diameter>32&lt;/diameter>\n        &lt;weight>540&lt;/weight>\n        &lt;price>60&lt;/price>\n        &lt;size>Big&lt;/size>\n    &lt;/item>\n&lt;/items>'</span></code></pre></div>\n<p>Here is error:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Msg 6926, Level 16, State 1, Line 100\nXML Validation: Invalid simple type value: 'http://example.com/photo1'. Location: /*:items[1]/*:item[1]/*:photo[1]</code></pre></div>\n<h2>XSLT your XML right inside SQL</h2>\n<p>Here is awesomeness</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- NOTICE that class is not wrapped in namespace</span>\n<span class=\"token comment\">/*\nusing System.Data.SqlTypes;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Xsl;\n\npublic class XSLTTransform\n{\n    public static SqlXml Transform(SqlXml inputDataXML, SqlXml inputTransformXML)\n    {\n        MemoryStream memoryXml = new MemoryStream();\n        XslCompiledTransform xslt = new XslCompiledTransform();\n        XmlReader output = null;\n\n        xslt.Load(inputTransformXML.CreateReader());\n\n        // Output the newly constructed XML\n        XmlTextWriter outputWriter = new XmlTextWriter(memoryXml, Encoding.Default);\n        xslt.Transform(inputDataXML.CreateReader(), null, outputWriter, null);\n        memoryXml.Seek(0, SeekOrigin.Begin);\n        output = new XmlTextReader(memoryXml);\n\n        return new SqlXml(output);\n    }\n}\n*/</span>\n\n\n<span class=\"token comment\">-- STEP 1. Enable CLR</span>\nsp_configure <span class=\"token string\">'clr enabled'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span>\nGO\n<span class=\"token keyword\">RECONFIGURE</span>\nGO\n\n<span class=\"token comment\">-- STEP 2. reCREATE assembly and function</span>\n<span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> sys<span class=\"token punctuation\">.</span>objects <span class=\"token keyword\">WHERE</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'ApplyXsltTransform'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">FUNCTION</span> ApplyXsltTransform\nGO\n\n<span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> sys<span class=\"token punctuation\">.</span>assemblies <span class=\"token keyword\">WHERE</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'XSLTTransform'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DROP</span> ASSEMBLY XSLTTransform\nGO\n\n<span class=\"token keyword\">CREATE</span> ASSEMBLY XSLTTransform <span class=\"token keyword\">FROM</span> <span class=\"token string\">'C:\\Users\\Alexandr\\Documents\\visual studio 2015\\Projects\\XSLTTransform\\XSLTTransform\\bin\\Release\\XSLTTransform.dll'</span>\nGO\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">FUNCTION</span> ApplyXsltTransform<span class=\"token punctuation\">(</span><span class=\"token variable\">@inputXML</span> xml<span class=\"token punctuation\">,</span> <span class=\"token variable\">@inputTransform</span> xml<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">RETURNS</span> XML\n<span class=\"token keyword\">AS</span> EXTERNAL NAME XSLTTransform<span class=\"token punctuation\">.</span>XSLTTransform<span class=\"token punctuation\">.</span>Transform\nGO\n\n\n<span class=\"token comment\">-- STEP 3. Demo</span>\n<span class=\"token keyword\">DECLARE</span> <span class=\"token variable\">@xml</span> XML <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">TOP</span> <span class=\"token number\">10</span> <span class=\"token keyword\">Date</span><span class=\"token punctuation\">,</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>TimeTaken<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">Value</span>\n    <span class=\"token keyword\">FROM</span> MAC<span class=\"token punctuation\">.</span>Play<span class=\"token punctuation\">.</span>dbo<span class=\"token punctuation\">.</span>IISLog\n    <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> <span class=\"token keyword\">Date</span>\n    <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token keyword\">Date</span>\n    <span class=\"token keyword\">FOR</span> XML PATH<span class=\"token punctuation\">(</span><span class=\"token string\">'Item'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ROOT<span class=\"token punctuation\">(</span><span class=\"token string\">'ArrayOfItem'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token variable\">@xml</span>\n\n<span class=\"token comment\">--DECLARE @xslt XML = (</span>\n<span class=\"token comment\">--  SELECT BulkColumn FROM OPENROWSET(Bulk 'C:\\Users\\Alexandr\\Documents\\visual studio 2015\\Projects\\XSLTTransform\\XSLTTransform\\Chart.xslt', SINGLE_BLOB) AS x</span>\n<span class=\"token comment\">--)</span>\n<span class=\"token keyword\">DECLARE</span> <span class=\"token variable\">@xslt</span> XML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n    &lt;xsl:output method=\"html\" indent=\"yes\"/>\n\n    &lt;xsl:template match=\"/\">\n        &lt;html>\n            &lt;body>\n                &lt;xsl:apply-templates/>\n            &lt;/body>\n        &lt;/html>\n    &lt;/xsl:template>\n    &lt;xsl:template match=\"ArrayOfItem\">\n        &lt;table>\n            &lt;thead>\n                &lt;tr>\n                    &lt;th>Date&lt;/th>\n                    &lt;th>Value&lt;/th>\n                &lt;/tr>\n            &lt;/thead>\n            &lt;tbody>\n                &lt;xsl:for-each select=\"Item\">\n                    &lt;tr>\n                        &lt;td>\n                            &lt;xsl:value-of select=\"Date\"/>\n                        &lt;/td>\n                        &lt;td>\n                            &lt;xsl:value-of select=\"Value\"/>\n                        &lt;/td>\n                    &lt;/tr>\n                &lt;/xsl:for-each>\n            &lt;/tbody>\n        &lt;/table>\n    &lt;/xsl:template>\n&lt;/xsl:stylesheet>'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token variable\">@xslt</span>\n\n<span class=\"token keyword\">SELECT</span> dbo<span class=\"token punctuation\">.</span>ApplyXsltTransform<span class=\"token punctuation\">(</span><span class=\"token variable\">@xml</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@xslt</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>And its output:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>thead</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Date<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span>Value<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>thead</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2015-06-11T03:00:00<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>14<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2015-06-11T03:00:02<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>182<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2015-06-11T03:00:03<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>149<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2015-06-11T03:00:04<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>43<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2015-06-11T03:00:05<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2015-06-11T03:00:07<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>181<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2015-06-11T03:00:08<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>144<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2015-06-11T03:00:09<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>141<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2015-06-11T03:00:10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>524<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2015-06-11T03:00:11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span>2106<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>For this to work you need to compile and connect assembly.</p>"}},"pageContext":{"id":"f2e9cbfc-74e9-5247-9f2d-397fd6fa39c9"}},"staticQueryHashes":[]}