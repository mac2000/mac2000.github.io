{"componentChunkName":"component---src-templates-note-js","path":"/postgres-python/","result":{"data":{"remark":{"fields":{"path":"postgres-python"},"meta":{"title":""},"headings":[{"value":"PostgreSQL having fun with Python"}],"html":"<h1>PostgreSQL having fun with Python</h1>\n<p>Do now ask why, pretend it is more about having fun rather than something useful and of course it is not about running that in production</p>\n<p>In my case I have remote data living in 3rd party service, I managed to get it into Google Sheets, but it is not so easy to do some usual stuff like join, union there</p>\n<p>So I was curious how it may look like in Postgres</p>\n<p>Demo is done in docker so it is not persistant in any way</p>\n<p>Start the Postgres</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">--name</span><span class=\"token operator\">=</span>pg <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">POSTGRES_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token string\">'P@ssword'</span> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">POSTGRES_USER</span><span class=\"token operator\">=</span><span class=\"token string\">'demo'</span> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">POSTGRES_DB</span><span class=\"token operator\">=</span><span class=\"token string\">'demo'</span> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">PYTHONPATH</span><span class=\"token operator\">=</span>/var/lib/postgres/ExternalDataSource <span class=\"token parameter variable\">-p</span> <span class=\"token number\">5432</span>:5432 postgres:16</code></pre></div>\n<p>Install python language extensions</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> pg <span class=\"token function\">apt</span> update\n<span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> pg <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> python3 postgresql-plpython3-16</code></pre></div>\n<p>Enable and check lagnuage</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> pg psql <span class=\"token parameter variable\">-U</span> demo demo <span class=\"token parameter variable\">-c</span> <span class=\"token string\">'SELECT * FROM pg_language'</span>\n<span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> pg psql <span class=\"token parameter variable\">-U</span> demo demo <span class=\"token parameter variable\">-c</span> <span class=\"token string\">'CREATE LANGUAGE plpython3u'</span>\n<span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> pg psql <span class=\"token parameter variable\">-U</span> demo demo <span class=\"token parameter variable\">-c</span> <span class=\"token string\">'SELECT * FROM pg_language'</span></code></pre></div>\n<p>Jump into psql</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> pg psql <span class=\"token parameter variable\">-U</span> demo demo</code></pre></div>\n<p>Create postgrges python hello world function</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token operator\">OR</span> <span class=\"token keyword\">REPLACE</span> <span class=\"token keyword\">FUNCTION</span> hello<span class=\"token punctuation\">(</span>name <span class=\"token keyword\">text</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">RETURNS</span> <span class=\"token keyword\">text</span> <span class=\"token keyword\">AS</span>\n$BODY$\n<span class=\"token keyword\">return</span> <span class=\"token string\">'Hello '</span> <span class=\"token operator\">+</span> name\n$BODY$\n<span class=\"token keyword\">LANGUAGE</span> plpython3u<span class=\"token punctuation\">;</span></code></pre></div>\n<p>and test it:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> hello<span class=\"token punctuation\">(</span><span class=\"token string\">'Alex'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\">   hello\n<span class=\"token separator comment\">------------</span>\n Hello Alex\n<span class=\"token operator\">(</span><span class=\"token number\">1</span> row<span class=\"token operator\">)</span></code></pre></div>\n<p>And now is the fun part</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token operator\">OR</span> <span class=\"token keyword\">REPLACE</span> <span class=\"token keyword\">FUNCTION</span> get_remote_data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">RETURNS</span> <span class=\"token keyword\">TABLE</span> <span class=\"token punctuation\">(</span>user_id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> title <span class=\"token keyword\">text</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> $$\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">from</span> urllib<span class=\"token punctuation\">.</span>request <span class=\"token keyword\">import</span> urlopen\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'https://jsonplaceholder.typicode.com/posts'</span>\nresponse <span class=\"token operator\">=</span> urlopen<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> response<span class=\"token punctuation\">.</span>getcode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">=</span> <span class=\"token number\">200</span>:\n    <span class=\"token keyword\">data</span> <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token keyword\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> post <span class=\"token operator\">in</span> <span class=\"token keyword\">data</span>:\n        yield <span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">[</span><span class=\"token string\">'userId'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">[</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span>:\n    raise Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Error fetching data'</span><span class=\"token punctuation\">)</span>\n$$ <span class=\"token keyword\">LANGUAGE</span> plpython3u<span class=\"token punctuation\">;</span></code></pre></div>\n<p>And its usage</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> get_remote_data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\"> user_id <span class=\"token operator\">|</span> id <span class=\"token operator\">|</span>                                   title\n<span class=\"token separator comment\">---------</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>\n       <span class=\"token number\">1</span> <span class=\"token operator\">|</span>  <span class=\"token number\">1</span> <span class=\"token operator\">|</span> sunt aut facere repellat provident occaecati excepturi optio reprehenderit\n       <span class=\"token number\">1</span> <span class=\"token operator\">|</span>  <span class=\"token number\">2</span> <span class=\"token operator\">|</span> qui est esse\n       <span class=\"token number\">1</span> <span class=\"token operator\">|</span>  <span class=\"token number\">3</span> <span class=\"token operator\">|</span> ea molestias quasi exercitationem repellat qui ipsa sit aut\n<span class=\"token operator\">(</span><span class=\"token number\">3</span> rows<span class=\"token operator\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> get_remote_data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\"> count\n<span class=\"token separator comment\">-------</span>\n   <span class=\"token number\">100</span>\n<span class=\"token operator\">(</span><span class=\"token number\">1</span> row<span class=\"token operator\">)</span></code></pre></div>\n<p>3rd party libraries are also accessible, aka:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> pg <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> python3-requests</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token operator\">OR</span> <span class=\"token keyword\">REPLACE</span> <span class=\"token keyword\">FUNCTION</span> get_remote_data2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">RETURNS</span> <span class=\"token keyword\">TABLE</span> <span class=\"token punctuation\">(</span>user_id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> title <span class=\"token keyword\">text</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> $$\n<span class=\"token keyword\">import</span> requests\nr <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://jsonplaceholder.typicode.com/posts'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> post <span class=\"token operator\">in</span> r<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:\n      yield <span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">[</span><span class=\"token string\">'userId'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">[</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n$$ <span class=\"token keyword\">LANGUAGE</span> plpython3u<span class=\"token punctuation\">;</span></code></pre></div>\n<p>With this in play I can query external data source as if it was simple table</p>\n<p>And even if I still want Google Sheets I always may expose query results as some king of csv and get it with IMPORTDATA function</p>\n<p>Notes:</p>\n<ul>\n<li>in SQL Server the same and even more is doable via embedding compiled dll with dotnet which may allow to do even more crazy things</li>\n<li>there is so called <a href=\"https://wiki.postgresql.org/wiki/Foreign_data_wrappers\">Foreign Data Wrapper</a> (FDW) concept in postgres with huge amount of ready to use extensions to query data from external sources - aka make sql query on top of elasticsearch</li>\n<li>there is multicorn2 fdw that supossed to run python script, but not sure if that is needed</li>\n<li>for cases when performance is critical, theoretically, such calls may cache themselves in postgres but at the very end for performance critical things it probably should be external tool to sync data, in my case it is fine even if request will run for few seconds</li>\n</ul>"}},"pageContext":{"id":"bba90e1d-2d28-516d-bec3-785f6be8c223"}},"staticQueryHashes":[],"slicesMap":{}}