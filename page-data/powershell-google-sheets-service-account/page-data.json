{"componentChunkName":"component---src-templates-note-js","path":"/powershell-google-sheets-service-account/","result":{"data":{"remark":{"fields":{"path":"powershell-google-sheets-service-account"},"meta":{"title":""},"headings":[{"value":"PowerShell reading data from Google Sheets using service account"}],"html":"<h1>PowerShell reading data from Google Sheets using service account</h1>\n<p>In Google Cloud I have an project where i have created service account and downloaded its <code class=\"language-text\">credentials.json</code> file</p>\n<p>File will look something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"service_account\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"project_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"my-awesome-project\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"private_key_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xxxxxxxxxxxxx\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"private_key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"-----BEGIN PRIVATE KEY-----\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"client_email\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"serviceaccount@my-awesome-project.iam.gserviceaccount.com\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"client_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"000000000000000000000\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"auth_uri\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://accounts.google.com/o/oauth2/auth\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"token_uri\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://oauth2.googleapis.com/token\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"universe_domain\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"googleapis.com\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>At the very end we want to call following:</p>\n<div class=\"gatsby-highlight\" data-language=\"pwsh\"><pre class=\"language-pwsh\"><code class=\"language-pwsh\">Invoke-RestMethod -Uri &quot;https://sheets.googleapis.com/v4/spreadsheets/$id/values/$range&quot; -Headers @{&quot;Authorization&quot; = &quot;Bearer $access_token&quot; } | Select-Object -ExpandProperty values</code></pre></div>\n<p>to do it, we need an <code class=\"language-text\">access_token</code></p>\n<p>and to retrieve it we may utilize <a href=\"https://datatracker.ietf.org/doc/html/rfc7523\">urn:ietf:params:oauth:grant-type:jwt-bearer</a></p>\n<p>to retrieve token we should call following:</p>\n<div class=\"gatsby-highlight\" data-language=\"pwsh\"><pre class=\"language-pwsh\"><code class=\"language-pwsh\">Invoke-RestMethod -Method Post -Uri &quot;https://oauth2.googleapis.com/token&quot; -Headers @{&quot;Content-Type&quot; = &quot;application/x-www-form-urlencoded&quot; } -Body @{\n  grant_type = &quot;urn:ietf:params:oauth:grant-type:jwt-bearer&quot;\n  assertion  = &quot;$header.$payload.$signature&quot;\n} | Select-Object -ExpandProperty access_token</code></pre></div>\n<p>where <code class=\"language-text\">assertion</code> is an JWT token signed with private key from our <code class=\"language-text\">credentials.json</code></p>\n<p>the assertion token payload will be:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"iss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"serviceaccount@my-awesome-project.iam.gserviceaccount.com\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"aud\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://oauth2.googleapis.com/token\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scope\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://www.googleapis.com/auth/spreadsheets.readonly\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"iat\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1746953454</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exp\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1746957054</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>let's break it down:</p>\n<ul>\n<li><code class=\"language-text\">iss</code> - issuer or who did issued this token - not how we are pointing to our selves, that's because actually we have signed token for ourselves</li>\n<li><code class=\"language-text\">aud</code> - for whom this signed token should be sent - note - here we are pointing not to google sheets but rather to token exchange endpoint, so token we have signed is supposed to be used only for exchange</li>\n<li><code class=\"language-text\">scope</code> - and this one is actually the scope we expect access token to have after succesfull exchange</li>\n<li><code class=\"language-text\">iat</code>, <code class=\"language-text\">epx</code> - are kind of <code class=\"language-text\">date +%s</code></li>\n</ul>\n<p>And here is the full script:</p>\n<div class=\"gatsby-highlight\" data-language=\"pwsh\"><pre class=\"language-pwsh\"><code class=\"language-pwsh\">$credentials = Get-Content credentials.json | ConvertFrom-Json\n\n# header = base64url_encode(bytes(json_encode({ alg: &quot;RS256&quot;, typ: &quot;JWT&quot; })))\n$header = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes((ConvertTo-Json -Compress -InputObject @{\n        alg = &quot;RS256&quot;\n        typ = &quot;JWT&quot;\n      }))).TrimEnd(&#39;=&#39;).Replace(&#39;+&#39;, &#39;-&#39;).Replace(&#39;/&#39;, &#39;_&#39;)\n\n$payload = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes((ConvertTo-Json -Compress -InputObject @{\n        iss   = $credentials.client_email\n        scope = &quot;https://www.googleapis.com/auth/spreadsheets.readonly&quot;\n        aud   = &quot;https://oauth2.googleapis.com/token&quot;\n        iat   = [int](Get-Date -UFormat %s)\n        exp   = 3600 + [int](Get-Date -UFormat %s)\n      }))).TrimEnd(&#39;=&#39;).Replace(&#39;+&#39;, &#39;-&#39;).Replace(&#39;/&#39;, &#39;_&#39;)\n\n$rsa = [System.Security.Cryptography.RSA]::Create()\n$rsa.ImportFromPem($credentials.private_key) # POI: we are signing token with private key from credentials.json\n$signature = $rsa.SignData([System.Text.Encoding]::UTF8.GetBytes(&quot;$header.$payload&quot;), [System.Security.Cryptography.HashAlgorithmName]::SHA256, [System.Security.Cryptography.RSASignaturePadding]::Pkcs1)\n$signature = [Convert]::ToBase64String($signature).TrimEnd(&#39;=&#39;).Replace(&#39;+&#39;, &#39;-&#39;).Replace(&#39;/&#39;, &#39;_&#39;)\n\n$access_token = Invoke-RestMethod -Method Post -Uri &quot;https://oauth2.googleapis.com/token&quot; -Headers @{&quot;Content-Type&quot; = &quot;application/x-www-form-urlencoded&quot; } -Body @{\n  grant_type = &quot;urn:ietf:params:oauth:grant-type:jwt-bearer&quot;\n  assertion  = &quot;$header.$payload.$signature&quot;\n} | Select-Object -ExpandProperty access_token\n\n$speadsheet = &quot;xxxxxxx&quot;\n$range = &quot;data!A:J&quot;\n\n$values = Invoke-RestMethod -Uri &quot;https://sheets.googleapis.com/v4/spreadsheets/$speadsheet/values/$range&quot; -Headers @{&quot;Authorization&quot; = &quot;Bearer $access_token&quot; } | Select-Object -ExpandProperty values\n$values</code></pre></div>\n<p>with this you can read Google Sheets data from PowerShell withou any 3rd party dependency</p>"}},"pageContext":{"id":"22664950-7630-55b6-8c5b-f36e5ca21d0c"}},"staticQueryHashes":[],"slicesMap":{}}