{"componentChunkName":"component---src-templates-note-js","path":"/nuget-without-internet/","result":{"data":{"remark":{"fields":{"path":"nuget-without-internet"},"meta":{"title":""},"headings":[{"value":"NuGet without Internet Survival Guide"},{"value":"NuCache"}],"html":"<h1>NuGet without Internet Survival Guide</h1>\n<p>Technicaly we can work normally without Internet by preparing required Docker images for storages like ElasticSearch and SqlServer</p>\n<p>But when Internet dissapear and you switch between branches, Rider may decide to refresh packages and immediately will dia with bunch of errors about broken dependencies</p>\n<p>To avoid such we gonna need to have local NuGet kind of cache</p>\n<p>Thankfully NuGet has build in feature exactly for such scenario</p>\n<p>All you need to do:</p>\n<ul>\n<li>save wanted packages somewhere on local machine</li>\n<li>add source pointing to folder where you saved all of them</li>\n</ul>\n<p>Here is an short demo of how it can be used:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'recreate offline directory for demo'</span>\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> offline <span class=\"token operator\">||</span> <span class=\"token boolean\">true</span>\n<span class=\"token function\">mkdir</span> offline\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'create demo classlib'</span>\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> mylib <span class=\"token operator\">||</span> <span class=\"token boolean\">true</span>\n<span class=\"token function\">mkdir</span> mylib\n<span class=\"token builtin class-name\">cd</span> mylib\ndotnet new console\ndotnet pack\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'pretend like we downloaded some nupkg for offline usage'</span>\n<span class=\"token function\">mv</span> mylib/bin/Debug/mylib.1.0.0.nupkg ./offline/\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'list current nuget sources'</span>\ndotnet nuget list <span class=\"token builtin class-name\">source</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'remove offline source if any'</span>\ndotnet nuget remove <span class=\"token builtin class-name\">source</span> offline\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'add offline source'</span>\ndotnet nuget <span class=\"token function\">add</span> <span class=\"token builtin class-name\">source</span> <span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token environment constant\">PWD</span>}</span>/offline\"</span> <span class=\"token parameter variable\">--name</span><span class=\"token operator\">=</span>offline\n\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'remove original nuget.org source'</span>\ndotnet nuget remove <span class=\"token builtin class-name\">source</span> nuget.org\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'demo of offline usage'</span>\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> consoleapp <span class=\"token operator\">||</span> <span class=\"token boolean\">true</span>\n<span class=\"token function\">mkdir</span> consoleapp\n<span class=\"token builtin class-name\">cd</span> consoleapp\ndotnet new console\ndotnet <span class=\"token function\">add</span> package mylib\ndotnet restore\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'add nuget.org back'</span> <span class=\"token comment\"># TODO: not sure if thats really important but given command does not add 'protocolVersion=\"3\"', aka: '&lt;add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />'</span>\ndotnet nuget <span class=\"token function\">add</span> <span class=\"token builtin class-name\">source</span> https://api.nuget.org/v3/index.json <span class=\"token parameter variable\">--name</span><span class=\"token operator\">=</span>nuget.org\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'cleanup'</span>\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> consoleapp mylib offline <span class=\"token operator\">||</span> <span class=\"token boolean\">true</span></code></pre></div></p>\n<p>Now we need to collect all packages we are using:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$basedir</span> = <span class=\"token string\">'/path/to/dir/where/you/store/projects'</span>\n<span class=\"token variable\">$repos</span> = <span class=\"token function\">Get-ChildItem</span> <span class=\"token operator\">-</span>Path <span class=\"token variable\">$basedir</span> <span class=\"token operator\">-</span>Directory <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty Name\n<span class=\"token variable\">$packages</span> = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$repo</span> in <span class=\"token variable\">$repos</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$projects</span> = <span class=\"token function\">Get-ChildItem</span> <span class=\"token operator\">-</span>Path <span class=\"token punctuation\">(</span><span class=\"token function\">Join-Path</span> <span class=\"token variable\">$basedir</span> <span class=\"token variable\">$repo</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>Recurse <span class=\"token operator\">-</span>Depth 3 <span class=\"token operator\">-</span>Include <span class=\"token string\">'*.csproj'</span>\n    <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$project</span> in <span class=\"token variable\">$projects</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$xml</span> = <span class=\"token namespace\">[xml]</span><span class=\"token punctuation\">(</span><span class=\"token function\">Get-Content</span> <span class=\"token variable\">$project</span><span class=\"token punctuation\">.</span>FullName<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$reference</span> in <span class=\"token variable\">$xml</span><span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">.</span>ItemGroup<span class=\"token punctuation\">.</span>PackageReference<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-not</span> <span class=\"token variable\">$reference</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">continue</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token variable\">$packages</span> <span class=\"token operator\">+=</span> <span class=\"token namespace\">[PSCustomObject]</span>@<span class=\"token punctuation\">{</span>\n                Repository = <span class=\"token variable\">$repo</span>\n                Project = <span class=\"token namespace\">[System.IO.Path]</span>::GetFileNameWithoutExtension<span class=\"token punctuation\">(</span><span class=\"token variable\">$project</span><span class=\"token punctuation\">.</span>FullName<span class=\"token punctuation\">)</span>\n                Package = <span class=\"token variable\">$reference</span><span class=\"token punctuation\">.</span>Include\n                Version = <span class=\"token variable\">$reference</span><span class=\"token punctuation\">.</span>Version\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$packages</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Out-File</span> <span class=\"token operator\">-</span>Encoding utf8 packages<span class=\"token punctuation\">.</span>json</code></pre></div></p>\n<p>This script will produce JSON with entries like:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"Repository\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MyAwesomeApp\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"Project\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MyAwesomeApp\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"Package\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Newtonsoft.JSON\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"Version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"12.0.3\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, when we will have an Internet, we may download them with URL like:</p>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">Invoke-WebRequest &quot;https://api.nuget.org/v3-flatcontainer/$package/$version/$package.$version.nupkg&quot; -OutFile &quot;/Users/mac/Downloads/nucache/$package.$version.nupkg&quot;</code></pre></div>\n<p>But, make sure to download package dependencies as well, otherwise when you will be offline an surprise is waiting for you, you gonna need not only download all that fancy libraries but bunch of system and Microsoft libraries as well</p>\n<p>TODO: script out dependencies download</p>\n<p>The best part of this approach is that you are downloading everything you need upfront which is much better than using any caching proxies</p>\n<h2>Alternative approaches</h2>\n<p>My very first attempt was to run nginx as a caching proxy</p>\n<p>Here is config I ended up with:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"conf\"><pre class=\"language-conf\"><code class=\"language-conf\"># https://www.nginx.com/blog/nginx-caching-guide/\n# http://nginx.org/en/docs/http/ngx_http_proxy_module.html\n# https://gist.github.com/sirsquidness/710bc76d7bbc734c7a3ff69c6b8ff591\nproxy_cache_path /cache keys_zone=nucache:10m inactive=100d max_size=30g;\n\nserver {\n    listen       80;\n    server_name  localhost;\n\n    location / {\n        proxy_cache nucache;\n\n        proxy_pass http://demoa;\n        # replace with ip address because when there is no internet, address may be not resolved\n        # proxy_pass https://api.nuget.org;\n        # proxy_pass https://152.199.23.209;\n        # proxy_set_header Host api.nuget.org;\n        # better option is to add: &quot;--add-host api.nuget.org:152.199.23.209&quot; to docker run command\n\n        # Delivering Cached Content When the Origin is Down\n        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_403 http_404 http_429;\n        # This one should be added/used only when we have internet, in combination with &quot;updating&quot; option in &quot;proxy_cache_use_stale&quot; nginx will serve cached file, but in background will try to update it\n        # proxy_cache_background_update on;\n\n        proxy_cache_key $scheme$proxy_host$uri$is_args$args;\n        proxy_cache_valid 48h;\n        proxy_cache_methods GET HEAD POST;\n        add_header X-Nuget-Cache $upstream_cache_status;\n\n        proxy_intercept_errors on;\n        error_page 301 302 307 = @handle_redirects;\n\n        proxy_ignore_headers Set-Cookie;\n        proxy_ignore_headers Cache-Control;\n        proxy_ignore_headers Expires;\n        proxy_hide_header Set-Cookie;\n        proxy_hide_header Cache-Control;\n        proxy_hide_header Expires;\n    }\n\n    location @handle_redirects {\n        # store the current state of the world so we can reuse it in a minute\n        # We need to capture these values now, because as soon as we invoke\n        # the proxy_* directives, these will disappear\n        # set $original_uri $uri;\n        set $original_scheme $scheme;\n        set $original_proxy_host $proxy_host;\n        set $original_uri $uri;\n        set $original_is_args $is_args;\n        set $original_args $args;\n\n        set $orig_loc $upstream_http_location;\n\n        # nginx goes to fetch the value from the upstream Location header\n        proxy_pass $orig_loc;\n        proxy_cache nucache;\n        # But we store the result with the cache key of the original request URI\n        # so that future clients don&#39;t need to follow the redirect too\n        # proxy_cache_key $original_uri;\n        proxy_cache_key $original_scheme$original_proxy_host$original_uri$original_is_args$original_args;\n        proxy_cache_valid 48h;\n        proxy_cache_methods GET HEAD POST;\n\n        # resolver 8.8.8.8; # Seems to be needed for redirects.\n        proxy_ignore_headers Set-Cookie;\n        proxy_ignore_headers Cache-Control;\n        proxy_ignore_headers Expires;\n        proxy_hide_header Set-Cookie;\n        proxy_hide_header Cache-Control;\n        proxy_hide_header Expires;\n    }\n}</code></pre></div></p>\n<p>But it did not worked out as expected, having troubles with redirections and cache keys, somehow it does not work and it is not easy to debug all this, plus if we want to cache requests with body there will be even more troubles, so it seems to be not working solution</p>\n<p>The second attempt was to build own nano proxy exactly for nuget</p>\n<p>Here is what I have ended up with:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"bytes\"</span>\n\t<span class=\"token string\">\"crypto/sha512\"</span>\n\t<span class=\"token string\">\"encoding/json\"</span>\n\t<span class=\"token string\">\"errors\"</span>\n\t<span class=\"token string\">\"flag\"</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"io\"</span>\n\t<span class=\"token string\">\"log\"</span>\n\t<span class=\"token string\">\"net/http\"</span>\n\t<span class=\"token string\">\"net/url\"</span>\n\t<span class=\"token string\">\"os\"</span>\n\t<span class=\"token string\">\"path\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">var</span> online <span class=\"token builtin\">bool</span>\n<span class=\"token keyword\">var</span> target <span class=\"token builtin\">string</span>\n<span class=\"token keyword\">var</span> cache <span class=\"token builtin\">string</span>\n<span class=\"token keyword\">var</span> port <span class=\"token builtin\">int</span>\n\n<span class=\"token keyword\">type</span> CacheRequest <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tMethod <span class=\"token builtin\">string</span>\n\tPath   <span class=\"token builtin\">string</span>\n\tBody   <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> CacheResponse <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tStatus <span class=\"token builtin\">int</span>\n\tHeader http<span class=\"token punctuation\">.</span>Header\n\tBody   <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> CacheEntry <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tRequest  CacheRequest\n\tResponse CacheResponse\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tflag<span class=\"token punctuation\">.</span><span class=\"token function\">StringVar</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>target<span class=\"token punctuation\">,</span> <span class=\"token string\">\"target\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"https://api.nuget.org\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"proxy target\"</span><span class=\"token punctuation\">)</span>\n\tflag<span class=\"token punctuation\">.</span><span class=\"token function\">StringVar</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cache<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cache\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./cache\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cache directory\"</span><span class=\"token punctuation\">)</span>\n\tflag<span class=\"token punctuation\">.</span><span class=\"token function\">BoolVar</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>online<span class=\"token punctuation\">,</span> <span class=\"token string\">\"online\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"online mode\"</span><span class=\"token punctuation\">)</span>\n\tflag<span class=\"token punctuation\">.</span><span class=\"token function\">IntVar</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>port<span class=\"token punctuation\">,</span> <span class=\"token string\">\"port\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"port to listen\"</span><span class=\"token punctuation\">)</span>\n\tflag<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nucache\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target:\"</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cache:\"</span><span class=\"token punctuation\">,</span> cache<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"online:\"</span><span class=\"token punctuation\">,</span> online<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"port:\"</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"commands to switch between proxy and nuget:\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  dotnet nuget list source\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  dotnet nuget remove source nuget.org\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  dotnet nuget add source http://localhost:%d/v3/index.json --name=nuget.org\\n\"</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  dotnet nuget add source https://api.nuget.org/v3/index.json --name=nuget.org\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"commands to switch online/offline:\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  curl http://localhost:%d/online\\n\"</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  curl http://localhost:%d/offline\\n\"</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"notes:\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"- in online mode cache is not used at all, but all ok'ish responses are saved\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"- in offline mode network is not used at all, only saved cache entries are used\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"- switch between modes is manual\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"- there is no concept of time to live, cache entries live forever\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"- to renew cache entry just switch to online mode\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"- to remove cache entry just delete its file\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"example of online log:\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Status: online, Method: GET, Path: /whatever, Key: 475676e11...\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"example of offline log:\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Status: offline, Cache: HIT, Method: GET, Path: /whatever, Key: 475676e11...\"</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\tt<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> url<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\thttp<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/offline\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tonline <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"offline\\n\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\thttp<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/online\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tonline <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"online\\n\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\thttp<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">var</span> err <span class=\"token builtin\">error</span>\n\t\t<span class=\"token keyword\">if</span> online <span class=\"token punctuation\">{</span>\n\t\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">onlineHandler</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">offlineHandler</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t\t\tw<span class=\"token punctuation\">.</span><span class=\"token function\">WriteHeader</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n\t\t\tw<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":%d\"</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">onlineHandler</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">,</span> t <span class=\"token operator\">*</span>url<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n\te <span class=\"token operator\">:=</span> CacheEntry<span class=\"token punctuation\">{</span>\n\t\tRequest<span class=\"token punctuation\">:</span> CacheRequest<span class=\"token punctuation\">{</span>\n\t\t\tMethod<span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>Method<span class=\"token punctuation\">,</span>\n\t\t\tPath<span class=\"token punctuation\">:</span>   r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\tBody<span class=\"token punctuation\">:</span>   <span class=\"token function\">reuse</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tResponse<span class=\"token punctuation\">:</span> CacheResponse<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\tk <span class=\"token operator\">:=</span> <span class=\"token function\">key</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Status: online, Method: %s, Path: %s, Key: %s\\n\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>Method<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span>\n\n\tr<span class=\"token punctuation\">.</span>Host <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>Host\n\tr<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">.</span>Scheme <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>Scheme\n\tr<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">.</span>Host <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>Host\n\tr<span class=\"token punctuation\">.</span>RequestURI <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n\n\tres<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span>DefaultClient<span class=\"token punctuation\">.</span><span class=\"token function\">Do</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> err\n\t<span class=\"token punctuation\">}</span>\n\n\tresb<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAll</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> err\n\t<span class=\"token punctuation\">}</span>\n\tres<span class=\"token punctuation\">.</span>Body <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">NopCloser</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">.</span><span class=\"token function\">NewReader</span><span class=\"token punctuation\">(</span>resb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\te<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>StatusCode\n\te<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span>Header <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>Header\n\te<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span>Body <span class=\"token operator\">=</span> resb\n\n\teb<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Marshal</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> err\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span> res<span class=\"token punctuation\">.</span>StatusCode <span class=\"token operator\">&lt;</span> <span class=\"token number\">400</span> <span class=\"token punctuation\">{</span>\n\t\terr <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">WriteFile</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> eb<span class=\"token punctuation\">,</span> <span class=\"token number\">0644</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> err\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">transmit</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">offlineHandler</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n\tk <span class=\"token operator\">:=</span> <span class=\"token function\">key</span><span class=\"token punctuation\">(</span>CacheRequest<span class=\"token punctuation\">{</span>\n\t\tMethod<span class=\"token punctuation\">:</span> r<span class=\"token punctuation\">.</span>Method<span class=\"token punctuation\">,</span>\n\t\tPath<span class=\"token punctuation\">:</span>   r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\tBody<span class=\"token punctuation\">:</span>   <span class=\"token function\">reuse</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\tb<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">ReadFile</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">Is</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>ErrNotExist<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tcode <span class=\"token operator\">:=</span> <span class=\"token number\">404</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Status: offline, Cache: MISS, Method: %s, Path: %s, Key: %s, Status: %d\\n\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>Method<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span>\n\t\t\tw<span class=\"token punctuation\">.</span><span class=\"token function\">WriteHeader</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> err\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">var</span> e CacheEntry\n\terr <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Unmarshal</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>e<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> err\n\t<span class=\"token punctuation\">}</span>\n\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Status: offline, Cache: HIT, Method: %s, Path: %s, Key: %s, Status: %d\\n\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>Method<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">)</span>\n\t<span class=\"token function\">transmit</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">reuse</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span> <span class=\"token punctuation\">{</span>\n\tb<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAll</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">)</span>\n\tr<span class=\"token punctuation\">.</span>Body <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">NopCloser</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">.</span><span class=\"token function\">NewBuffer</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> b\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">transmit</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r CacheResponse<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> vv <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> r<span class=\"token punctuation\">.</span>Header <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> vv <span class=\"token punctuation\">{</span>\n\t\t\tr<span class=\"token punctuation\">.</span>Header<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\tw<span class=\"token punctuation\">.</span><span class=\"token function\">WriteHeader</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">)</span>\n\tw<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">key</span><span class=\"token punctuation\">(</span>r CacheRequest<span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n\th <span class=\"token operator\">:=</span> sha512<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\th<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>Method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\th<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>Path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\th<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">)</span>\n\tbs <span class=\"token operator\">:=</span> h<span class=\"token punctuation\">.</span><span class=\"token function\">Sum</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%x\"</span><span class=\"token punctuation\">,</span> bs<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div></p>\n<p>The cool thing here is that it can be used virtualy for anything and can be build for any platform and is just small single binary that can be used localy</p>\n<p>Idea was that when you online - everything works as is, proxy just proxying requests to nuget, transmits response to cliend and saves it to cache</p>\n<p>Whenever you become offline - proxy serves cache items only</p>\n<p>Cache itself has no time to live and lives forewer</p>\n<p>Whenever invalidation is needed and you online - just send request and new response will be written</p>\n<p>If cache item must be removed - just delete its file</p>\n<p>All cache files are plain json so can be easily traversed</p>\n<p>Theoreticaly such proxy may check if we online or offline in background and switch mode automatically</p>\n<p>Also it may perform some trick with hosts file and add itself instead of target but then there are chances of port binding issues so that needs some more investigation</p>\n<p>Also interesting if there is a way to add some kind of system wide proxy for concrete hostname which will allow to use such proxy for things like npm, pip, whatever</p>\n<h1>NuCache</h1>\n<p>And the final solution vas to create dedicated script for offline</p>\n<p><div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\">#!/usr/bin/env pwsh</span>\n\n<span class=\"token keyword\">function</span> GetJson<span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$urlPath</span> = <span class=\"token function\">New-Object</span> uri <span class=\"token variable\">$url</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty AbsolutePath <span class=\"token operator\">-</span>ErrorAction SilentlyContinue\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-not</span> <span class=\"token variable\">$urlPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token variable\">$url</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token variable\">$httpCachePath</span> = <span class=\"token string\">\"~/.nuget/nucache/http<span class=\"token variable\">$urlPath</span>\"</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Test-Path</span> <span class=\"token variable\">$httpCachePath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$lastWriteTime</span> = <span class=\"token function\">Get-ChildItem</span> <span class=\"token variable\">$httpCachePath</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty LastWriteTime\n      <span class=\"token variable\">$now</span> = <span class=\"token function\">Get-Date</span>\n      <span class=\"token variable\">$minutesSinceLastUpdate</span> = <span class=\"token punctuation\">(</span><span class=\"token variable\">$now</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$lastWriteTime</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>TotalMinutes\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$minutesSinceLastUpdate</span> <span class=\"token operator\">-lt</span> 30<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">Get-Content</span> <span class=\"token variable\">$httpCachePath</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertFrom-Json</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token variable\">$response</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token variable\">$url</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">New-Item</span> <span class=\"token punctuation\">(</span><span class=\"token namespace\">[System.IO.Path]</span>::GetDirectoryName<span class=\"token punctuation\">(</span><span class=\"token variable\">$httpCachePath</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>ItemType Directory <span class=\"token operator\">-</span>ErrorAction SilentlyContinue <span class=\"token punctuation\">|</span> <span class=\"token function\">Out-Null</span>\n      <span class=\"token variable\">$response</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token punctuation\">|</span> <span class=\"token function\">Out-File</span> <span class=\"token operator\">-</span>Encoding utf8 <span class=\"token variable\">$httpCachePath</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token variable\">$response</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> NuCache<span class=\"token punctuation\">(</span><span class=\"token variable\">$package</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$version</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$registrationBaseUrls</span> = GetJson <span class=\"token string\">'https://api.nuget.org/v3/index.json'</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty resources <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span><span class=\"token string\">'@type'</span><span class=\"token punctuation\">.</span>StartsWith<span class=\"token punctuation\">(</span><span class=\"token string\">'RegistrationsBaseUrl'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty <span class=\"token string\">'@id'</span> <span class=\"token operator\">-</span>Unique\n  <span class=\"token variable\">$packageBaseAddress</span> = GetJson <span class=\"token string\">'https://api.nuget.org/v3/index.json'</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty resources <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> <span class=\"token string\">'@type'</span> <span class=\"token operator\">-EQ</span> <span class=\"token string\">'PackageBaseAddress/3.0.0'</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty <span class=\"token string\">'@id'</span>\n\n  <span class=\"token variable\">$package</span> = <span class=\"token variable\">$package</span><span class=\"token punctuation\">.</span>ToLower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$version</span> <span class=\"token operator\">-and</span> <span class=\"token variable\">$version</span> <span class=\"token operator\">-match</span> <span class=\"token string\">'^\\[\\d+\\.\\d+\\.\\d+,\\d+\\.\\d+\\.\\d+\\]$'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$version</span> = <span class=\"token variable\">$version</span><span class=\"token punctuation\">.</span>Split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Trim<span class=\"token punctuation\">(</span><span class=\"token string\">'['</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-not</span> <span class=\"token variable\">$version</span> <span class=\"token operator\">-or</span> <span class=\"token variable\">$version</span><span class=\"token punctuation\">.</span>Contains<span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$versions</span> = GetJson <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$packageBaseAddress</span><span class=\"token punctuation\">)</span></span><span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$package</span><span class=\"token punctuation\">)</span></span>/index.json\"</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty versions\n      <span class=\"token variable\">$last</span> = <span class=\"token variable\">$versions</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">-not</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>Contains<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Last 1\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-not</span> <span class=\"token variable\">$last</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token variable\">$last</span> = <span class=\"token variable\">$versions</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Last 1\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$version</span> <span class=\"token operator\">-and</span> <span class=\"token variable\">$version</span><span class=\"token punctuation\">.</span>Contains<span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token variable\">$wildcard</span> = <span class=\"token variable\">$versions</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">-match</span> <span class=\"token variable\">$version</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Last 1\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$wildcard</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token variable\">$version</span> = <span class=\"token variable\">$wildcard</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token variable\">$version</span> = <span class=\"token variable\">$last</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token variable\">$version</span> = <span class=\"token variable\">$last</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token variable\">$file</span> = <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$package</span><span class=\"token punctuation\">)</span></span>.<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$version</span><span class=\"token punctuation\">)</span></span>.nupkg\"</span>\n  <span class=\"token variable\">$target</span> = <span class=\"token function\">Join-Path</span> <span class=\"token operator\">-</span>Path <span class=\"token string\">\"~/.nuget/nucache/packages\"</span> <span class=\"token operator\">-</span>ChildPath <span class=\"token variable\">$file</span>\n\n  <span class=\"token variable\">$registration</span> = <span class=\"token variable\">$null</span>\n  <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$registrationsBaseUrl</span> in <span class=\"token variable\">$registrationBaseUrls</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token variable\">$registration</span> = GetJson <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$registrationsBaseUrl</span><span class=\"token punctuation\">)</span></span><span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$package</span><span class=\"token punctuation\">)</span></span>/<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$version</span><span class=\"token punctuation\">)</span></span>.json\"</span>\n          <span class=\"token keyword\">break</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-not</span> <span class=\"token variable\">$registration</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$v</span> = <span class=\"token variable\">$versions</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">-match</span> <span class=\"token namespace\">[regex]</span>::Replace<span class=\"token punctuation\">(</span><span class=\"token variable\">$version</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\.\\d+$\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Last 1\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-not</span> <span class=\"token variable\">$v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token variable\">$v</span> = <span class=\"token variable\">$versions</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">-match</span> <span class=\"token namespace\">[regex]</span>::Replace<span class=\"token punctuation\">(</span><span class=\"token variable\">$version</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\.\\d+\\.\\d+$\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Last 1\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-not</span> <span class=\"token variable\">$v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token variable\">$v</span> = <span class=\"token variable\">$versions</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">-match</span> <span class=\"token namespace\">[regex]</span>::Replace<span class=\"token punctuation\">(</span><span class=\"token variable\">$version</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\d+$\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>Last 1\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          NuCache <span class=\"token variable\">$package</span> <span class=\"token variable\">$v</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"<span class=\"token variable\">$package</span> <span class=\"token variable\">$version</span> - not found\"</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token variable\">$catalogEntries</span> = GetJson <span class=\"token variable\">$registration</span><span class=\"token punctuation\">.</span>catalogEntry\n\n  <span class=\"token variable\">$exists</span> = <span class=\"token function\">Test-Path</span> <span class=\"token variable\">$target</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$exists</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$alg</span> = <span class=\"token variable\">$catalogEntries</span><span class=\"token punctuation\">.</span>packageHashAlgorithm\n      <span class=\"token variable\">$wantedHash</span> = <span class=\"token variable\">$catalogEntries</span><span class=\"token punctuation\">.</span>packageHash\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$alg</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">'SHA512'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token variable\">$hasher</span> = <span class=\"token namespace\">[System.Security.Cryptography.SHA512]</span>::Create<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$alg</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">'SHA256'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token variable\">$hasher</span> = <span class=\"token namespace\">[System.Security.Cryptography.SHA256]</span>::Create<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$alg</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">'SHA1'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token variable\">$hasher</span> = <span class=\"token namespace\">[System.Security.Cryptography.SHA1]</span>::Create<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$alg</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">'MD5'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token variable\">$hasher</span> = <span class=\"token namespace\">[System.Security.Cryptography.MD5]</span>::Create<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"Unknown <span class=\"token variable\">$alg</span> for <span class=\"token variable\">$package</span> <span class=\"token variable\">$version</span>\"</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$hasher</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token variable\">$stream</span> = <span class=\"token namespace\">[System.IO.File]</span>::OpenRead<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">Resolve-Path</span> <span class=\"token variable\">$target</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Path<span class=\"token punctuation\">)</span>\n          <span class=\"token variable\">$bytes</span> = <span class=\"token variable\">$hasher</span><span class=\"token punctuation\">.</span>ComputeHash<span class=\"token punctuation\">(</span><span class=\"token variable\">$stream</span><span class=\"token punctuation\">)</span>\n          <span class=\"token variable\">$actualHash</span> = <span class=\"token namespace\">[System.Convert]</span>::ToBase64String<span class=\"token punctuation\">(</span><span class=\"token variable\">$bytes</span><span class=\"token punctuation\">)</span>\n          <span class=\"token variable\">$stream</span><span class=\"token punctuation\">.</span>Dispose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token variable\">$hasher</span><span class=\"token punctuation\">.</span>Dispose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$actualHash</span> <span class=\"token operator\">-ne</span> <span class=\"token variable\">$wantedHash</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token variable\">$exists</span> = <span class=\"token boolean\">$false</span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-not</span> <span class=\"token variable\">$exists</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">New-Item</span> <span class=\"token punctuation\">(</span><span class=\"token namespace\">[System.IO.Path]</span>::GetDirectoryName<span class=\"token punctuation\">(</span><span class=\"token variable\">$target</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>ItemType Directory <span class=\"token operator\">-</span>ErrorAction SilentlyContinue <span class=\"token punctuation\">|</span> <span class=\"token function\">Out-Null</span>\n      <span class=\"token variable\">$ProgressPreference</span> = <span class=\"token string\">'SilentlyContinue'</span>    <span class=\"token comment\"># Subsequent calls do not display UI.</span>\n      <span class=\"token function\">Invoke-WebRequest</span> <span class=\"token operator\">-</span>Uri <span class=\"token punctuation\">(</span><span class=\"token variable\">$registration</span><span class=\"token punctuation\">.</span>packageContent<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>OutFile <span class=\"token variable\">$target</span>\n      <span class=\"token variable\">$ProgressPreference</span> = <span class=\"token string\">'Continue'</span>            <span class=\"token comment\"># Subsequent calls do display UI.</span>\n      <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"<span class=\"token variable\">$package</span> <span class=\"token variable\">$version</span> - downloaded\"</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\"># Write-Host \"$package $version - exists\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token variable\">$deps</span> = <span class=\"token variable\">$catalogEntries</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty dependencyGroups <span class=\"token operator\">-</span>ErrorAction SilentlyContinue <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> dependencies <span class=\"token operator\">-NE</span> <span class=\"token variable\">$null</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty dependencies <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> id<span class=\"token punctuation\">,</span> range <span class=\"token operator\">-</span>Unique <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> @<span class=\"token punctuation\">{</span>n=<span class=\"token string\">'Package'</span><span class=\"token punctuation\">;</span>e=<span class=\"token punctuation\">{</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span>ToLower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> @<span class=\"token punctuation\">{</span>n=<span class=\"token string\">'Version'</span><span class=\"token punctuation\">;</span>e=<span class=\"token punctuation\">{</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>range<span class=\"token punctuation\">.</span>Split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>TrimStart<span class=\"token punctuation\">(</span><span class=\"token string\">'['</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>TrimStart<span class=\"token punctuation\">(</span><span class=\"token string\">'('</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$d</span> in <span class=\"token variable\">$deps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$df</span> = <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$d</span><span class=\"token punctuation\">.</span>Package<span class=\"token punctuation\">)</span></span>.<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$d</span><span class=\"token punctuation\">.</span>Version<span class=\"token punctuation\">)</span></span>.nupkg\"</span>\n      <span class=\"token variable\">$dt</span> = <span class=\"token function\">Join-Path</span> <span class=\"token operator\">-</span>Path <span class=\"token string\">\"~/.nuget/nucache/packages\"</span> <span class=\"token operator\">-</span>ChildPath <span class=\"token variable\">$df</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Test-Path</span> <span class=\"token variable\">$dt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\"># Write-Host \"$($d.Package) $($d.Version) - exists\"</span>\n          <span class=\"token keyword\">continue</span>\n      <span class=\"token punctuation\">}</span>\n      NuCache <span class=\"token variable\">$d</span><span class=\"token punctuation\">.</span>Package <span class=\"token variable\">$d</span><span class=\"token punctuation\">.</span>Version\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$args</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-eq</span> 0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"NUCACHE\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"Commands and usage examples\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"nucache status`n`tdisplay current online/offline status\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"nucache offline`n`tswitch to offline mode\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"nucache online`n`tswitch to online mode\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"nucache sync`n`titerates over ~/.nuget/packages/**/*.nupkg files and downloads missing ones and their dependencies\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"nucache /path/to/project`n`titerates over /path/to/project/**/*.csproj files and downloads packages with dependencies\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"nucache Newstonsoft.Json`n`tdownloads latest version of concrete package and its dependencies\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"nucache Newstonsoft.Json 12.0.3`n`tdownloads concrete version of concrete package and its dependencies\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"nucache add package Newstonsoft.Json`n`tdownloads latest version of concrete package and its dependencies\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"nucache add package Newstonsoft.Json --version 12.0.3`n`tdownloads concrete version of concrete package and its dependencies\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"Workflows\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"Always offline - switch mode to offline it will force you to use nucache always, so before doing dotnet add package you will need to call nucache first\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"\"</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"Online/offline - switch between modes, whenever you will be online call nucache sync and nucache /path/to/project to sync packages, when become offline just switch mode\"</span>\n\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"\"</span>\n\n  <span class=\"token variable\">$count</span> = <span class=\"token punctuation\">(</span><span class=\"token function\">Get-ChildItem</span> <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:HOME<span class=\"token punctuation\">)</span></span>/.nuget/nucache/packages/*.nupkg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Count\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"Cached packages: <span class=\"token variable\">$count</span>\"</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dotnet nuget list source <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>Contains<span class=\"token punctuation\">(</span><span class=\"token string\">\"nucache\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"Current mode: online\"</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"Current mode: offline\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"\"</span>\n\n  <span class=\"token keyword\">exit</span> 0\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$args</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-eq</span> 1 <span class=\"token operator\">-and</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">\"status\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dotnet nuget list source <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>Contains<span class=\"token punctuation\">(</span><span class=\"token string\">\"nucache\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"online\"</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"offline\"</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">exit</span> 0\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$args</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-eq</span> 1 <span class=\"token operator\">-and</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">\"offline\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  dotnet nuget remove source nuget<span class=\"token punctuation\">.</span>org\n  dotnet nuget add source <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:HOME<span class=\"token punctuation\">)</span></span>/.nuget/nucache/packages\"</span> <span class=\"token operator\">--</span>name=nucache\n  <span class=\"token keyword\">exit</span> 0\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$args</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-eq</span> 1 <span class=\"token operator\">-and</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">\"online\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  dotnet nuget remove source nucache\n  dotnet nuget add source https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>api<span class=\"token punctuation\">.</span>nuget<span class=\"token punctuation\">.</span>org/v3/index<span class=\"token punctuation\">.</span>json <span class=\"token operator\">--</span>name=nuget<span class=\"token punctuation\">.</span>org\n  <span class=\"token keyword\">exit</span> 0\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$args</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-eq</span> 1 <span class=\"token operator\">-and</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">\"sync\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span> in <span class=\"token function\">Get-ChildItem</span> <span class=\"token operator\">-</span>Path <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:HOME<span class=\"token punctuation\">)</span></span>/.nuget/packages\"</span> <span class=\"token operator\">-</span>Recurse <span class=\"token operator\">-</span>Include <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>nupkg <span class=\"token operator\">-</span>ErrorAction SilentlyContinue <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty Name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Test-Path</span> <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:HOME<span class=\"token punctuation\">)</span></span>/.nuget/nucache/packages/<span class=\"token variable\">$item</span>\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">continue</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token variable\">$item</span> = <span class=\"token variable\">$item</span><span class=\"token punctuation\">.</span>Replace<span class=\"token punctuation\">(</span><span class=\"token string\">'.nupkg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n      <span class=\"token variable\">$idx</span> = <span class=\"token namespace\">[regex]</span>::Matches<span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\.\\d+\\.\\d+\\.\\d+\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty Index <span class=\"token operator\">-</span>First 1\n      <span class=\"token variable\">$package</span> = <span class=\"token variable\">$item</span><span class=\"token punctuation\">.</span>Substring<span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> <span class=\"token variable\">$idx</span><span class=\"token punctuation\">)</span>\n      <span class=\"token variable\">$version</span> = <span class=\"token variable\">$item</span><span class=\"token punctuation\">.</span>Substring<span class=\"token punctuation\">(</span><span class=\"token variable\">$idx</span> <span class=\"token operator\">+</span> 1<span class=\"token punctuation\">)</span>\n      NuCache <span class=\"token variable\">$package</span> <span class=\"token variable\">$version</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">exit</span> 0\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$args</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-eq</span> 1 <span class=\"token operator\">-and</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Test-Path</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$projects</span> = <span class=\"token function\">Get-ChildItem</span> <span class=\"token operator\">-</span>Path <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span>Recurse <span class=\"token operator\">-</span>Depth 4 <span class=\"token operator\">-</span>Include <span class=\"token string\">'*.csproj'</span>\n  <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$project</span> in <span class=\"token variable\">$projects</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token variable\">$xml</span> = <span class=\"token namespace\">[xml]</span><span class=\"token punctuation\">(</span><span class=\"token function\">Get-Content</span> <span class=\"token variable\">$project</span><span class=\"token punctuation\">.</span>FullName<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$reference</span> in <span class=\"token variable\">$xml</span><span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">.</span>ItemGroup<span class=\"token punctuation\">.</span>PackageReference<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-not</span> <span class=\"token variable\">$reference</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">continue</span> <span class=\"token punctuation\">}</span>\n          <span class=\"token variable\">$package</span> = <span class=\"token variable\">$reference</span><span class=\"token punctuation\">.</span>Include\n          <span class=\"token variable\">$version</span> = <span class=\"token variable\">$reference</span><span class=\"token punctuation\">.</span>Version\n          NuCache <span class=\"token variable\">$package</span> <span class=\"token variable\">$version</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">exit</span> 0\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$args</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-eq</span> 1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$package</span> = <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span>\n  <span class=\"token variable\">$version</span> = <span class=\"token variable\">$null</span>\n  NuCache <span class=\"token variable\">$package</span> <span class=\"token variable\">$version</span>\n  <span class=\"token keyword\">exit</span> 0\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$args</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-eq</span> 2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$package</span> = <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span>\n  <span class=\"token variable\">$version</span> = <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span>\n  NuCache <span class=\"token variable\">$package</span> <span class=\"token variable\">$version</span>\n  <span class=\"token keyword\">exit</span> 0\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$args</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-eq</span> 3 <span class=\"token operator\">-and</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">'add'</span> <span class=\"token operator\">-and</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">'package'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$package</span> = <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>2<span class=\"token punctuation\">]</span>\n  <span class=\"token variable\">$version</span> = <span class=\"token variable\">$null</span>\n  NuCache <span class=\"token variable\">$package</span> <span class=\"token variable\">$version</span>\n  <span class=\"token keyword\">exit</span> 0\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$args</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-eq</span> 5 <span class=\"token operator\">-and</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">'add'</span> <span class=\"token operator\">-and</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">'package'</span> <span class=\"token operator\">-and</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>3<span class=\"token punctuation\">]</span> <span class=\"token operator\">-eq</span> <span class=\"token string\">'--version'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$package</span> = <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>2<span class=\"token punctuation\">]</span>\n  <span class=\"token variable\">$version</span> = <span class=\"token variable\">$args</span><span class=\"token punctuation\">[</span>4<span class=\"token punctuation\">]</span>\n  NuCache <span class=\"token variable\">$package</span> <span class=\"token variable\">$version</span>\n  <span class=\"token keyword\">exit</span> 0\n<span class=\"token punctuation\">}</span></code></pre></div></p>\n<p>Workflows</p>\n<p>Always offline - switch mode to offline it will force you to use nucache always, so before doing dotnet add package you will need to call nucache first</p>\n<p>Online/offline - switch between modes, whenever you will be online call nucache sync and nucache /path/to/project to sync packages, when become offline just switch mode</p>\n<p>Paths:</p>\n<ul>\n<li><code class=\"language-text\">~/.nuget/nucache/bin/nucache</code> - the script itself</li>\n<li><code class=\"language-text\">~/.nuget/nucache/http</code> - cache for http responses</li>\n<li><code class=\"language-text\">~/.nuget/nucache/packages</code> - saved packages</li>\n</ul>"}},"pageContext":{"id":"1d5ca482-eef8-5d30-ae45-74b4ac6213da"}},"staticQueryHashes":[],"slicesMap":{}}