{"componentChunkName":"component---src-templates-note-js","path":"/php-tabbed-text-tree-parser","result":{"data":{"remark":{"fields":{"path":"php-tabbed-text-tree-parser"},"meta":{"title":""},"headings":[{"value":"Php tabbed text tree parser"}],"html":"<h1>Php tabbed text tree parser</h1>\n<p>This code parses tabbed text trees into DomDocument xml tree</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token comment\">/**\n    * Parses tabbed lines to xml tree\n    *\n    * @author mac\n    */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">TabbedLinesTree</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n        * Parses tabbed list to xml tree\n        *\n        * @param string $text\n        * @param string $delimiter\n        * @return DomDocument $dom\n        */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$text</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$delimiter</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\\t\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$delimiterRE</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'/'</span> <span class=\"token operator\">.</span> <span class=\"token function\">preg_quote</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$delimiter</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$lines</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">,</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$text</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$dom</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DomDocument</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1.0'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$dom</span><span class=\"token operator\">-></span><span class=\"token property\">formatOutput</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$root</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$dom</span><span class=\"token operator\">-></span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'items'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$dom</span><span class=\"token operator\">-></span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$root</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$parent</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$root</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$prev_depth</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$prev_parent</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$root</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$prev_item</span> <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$line</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$value</span> <span class=\"token operator\">=</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// escape empty items</span>\n\n                <span class=\"token variable\">$depth</span> <span class=\"token operator\">=</span> <span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$delimiterRE</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$line</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$matches</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">// if depth is bigger that in previous step then it is child</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$depth</span> <span class=\"token operator\">></span> <span class=\"token variable\">$prev_depth</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token variable\">$prev_depth</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$depth</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token variable\">$prev_parent</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$parent</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token variable\">$parent</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$prev_item</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// else it is child of previous parent</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$depth</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$prev_depth</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token variable\">$parent</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$prev_parent</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token variable\">$prev_depth</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$depth</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$depth</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token variable\">$parent</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$root</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token variable\">$prev_depth</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token variable\">$prev_parent</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$root</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token variable\">$prev_item</span> <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token variable\">$item</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$dom</span><span class=\"token operator\">-></span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'item'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$item</span><span class=\"token operator\">-></span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'value'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$parent</span><span class=\"token operator\">-></span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$prev_item</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$item</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$dom</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Here is usage example:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">require_once</span> <span class=\"token string single-quoted-string\">'TabbedLinesTree.php'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$text</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"Line 1\nLine 2\n    Line 2.1\n    Line 2.2\n\nLine 3\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$dom</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">TabbedLinesTree</span><span class=\"token operator\">::</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$text</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$dom</span><span class=\"token operator\">-></span><span class=\"token function\">saveXML</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/* Will output:\n\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?>\n&lt;items>\n    &lt;item value=\"Line 1\"/>\n    &lt;item value=\"Line 2\">\n    &lt;item value=\"Line 2.1\"/>\n    &lt;item value=\"Line 2.2\"/>\n    &lt;/item>\n    &lt;item value=\"Line 3\"/>\n&lt;/items>\n    */</span></span></code></pre></div>\n<p>Code with tests <a href=\"/c0af9bd147b687854ce4a9367f53eb60/TabbedLinesTree.tar.gz\">TabbedLinesTree.tar</a></p>"}},"pageContext":{"id":"f8ffeec8-60bc-5a80-9172-a58582c7d0f2"}},"staticQueryHashes":[]}