{"componentChunkName":"component---src-templates-note-js","path":"/azure-keyvault-kubernetes/","result":{"data":{"remark":{"fields":{"path":"azure-keyvault-kubernetes"},"meta":{"title":""},"headings":[{"value":"Sync Azure KeyVault secrets into Kubernetes"}],"html":"<h1>Sync Azure KeyVault secrets into Kubernetes</h1>\n<p>If, for some reasone, you want some secrets to be stored in KeyValut and side by side you want them in Kubernetes you have few options</p>\n<ul>\n<li>Secrets CSI - powerfull but is like a portal to the hell</li>\n<li>External Secrets Operator - deploys quadrillion of CRD, deplyoemtns and so on aka overcomplicated (but still chosen)</li>\n</ul>\n<p>Here, I'm noting for my self how similar thing may be achieved without relying on 3rd party dependencies</p>\n<p>Here is wanted pieces described via Terraform</p>\n<p><div class=\"gatsby-highlight\" data-language=\"tf\"><pre class=\"language-tf\"><code class=\"language-tf\">terraform {\n  required_providers {\n    azurerm = {\n      source  = &quot;hashicorp/azurerm&quot;\n      version = &quot;4.8.0&quot;\n    }\n  }\n}\n\nprovider &quot;azurerm&quot; {\n  tenant_id       = &quot;00000000-0000-0000-0000-000000000000&quot;\n  subscription_id = &quot;00000000-0000-0000-0000-000000000000&quot;\n  features {}\n}\n\nresource &quot;azurerm_resource_group&quot; &quot;example&quot; {\n  name     = &quot;example&quot;\n  location = &quot;northeurope&quot;\n}\n\nresource &quot;azurerm_key_vault&quot; &quot;example&quot; {\n  name                      = &quot;example&quot;\n  resource_group_name       = azurerm_resource_group.example.name\n  location                  = azurerm_resource_group.example.location\n  tenant_id                 = &quot;00000000-0000-0000-0000-000000000000&quot;\n  sku_name                  = &quot;standard&quot;\n  enable_rbac_authorization = true\n}\n\n# # let&#39;s pretend we will put here secret for other resources\n# resource &quot;azurerm_key_vault_secret&quot; &quot;example&quot; {\n#   name         = &quot;example&quot;\n#   value        = &quot;helloworld&quot;\n#   key_vault_id = azurerm_key_vault.example.id\n# }\n\n# let&#39;s create service account, which we will use inside kubernetes to access keyvault\nresource &quot;azurerm_user_assigned_identity&quot; &quot;example&quot; {\n  name                = &quot;example&quot;\n  location            = azurerm_resource_group.example.location\n  resource_group_name = azurerm_resource_group.example.name\n}\n\ndata &quot;azurerm_kubernetes_cluster&quot; &quot;kube&quot; {\n  name                = &quot;my-awesome-kubernetes-cluster&quot;\n  resource_group_name = &quot;example&quot;\n}\n\n# federated credentials will allow azure-workload-identity to impersonate service account\nresource &quot;azurerm_federated_identity_credential&quot; &quot;example&quot; {\n  name                = &quot;example&quot;\n  resource_group_name = azurerm_resource_group.example.name\n  issuer              = data.azurerm_kubernetes_cluster.kube.oidc_issuer_url\n  parent_id           = azurerm_user_assigned_identity.example.id\n  audience            = [&quot;api://AzureADTokenExchange&quot;]\n  subject             = &quot;system:serviceaccount:default:example&quot;\n}\n\n# this one is needed if we want reactive updates\nresource &quot;azurerm_eventgrid_system_topic&quot; &quot;example&quot; {\n  name                   = &quot;example&quot;\n  resource_group_name    = azurerm_resource_group.example.name\n  location               = azurerm_resource_group.example.location\n  source_arm_resource_id = azurerm_key_vault.example.id\n  topic_type             = &quot;Microsoft.KeyVault.vaults&quot;\n}\n\n# allow access for our service account to keyvault\nresource &quot;azurerm_role_assignment&quot; &quot;example-managed-identity&quot; {\n  principal_id         = azurerm_user_assigned_identity.example.principal_id\n  role_definition_name = &quot;Key Vault Administrator&quot;\n  scope                = azurerm_key_vault.example.id\n}\n\n# allow access for ourselves\nresource &quot;azurerm_role_assignment&quot; &quot;example-alexandrm&quot; {\n  principal_id         = &quot;00000000-0000-0000-0000-000000000000&quot;\n  role_definition_name = &quot;Key Vault Administrator&quot;\n  scope                = azurerm_key_vault.example.id\n}\n\n# # just as an example, instead, here we will add endpoint that will create kubernetes job\n# resource &quot;azurerm_eventgrid_system_topic_event_subscription&quot; &quot;example&quot; {\n#   name                = &quot;example&quot;\n#   system_topic        = azurerm_eventgrid_system_topic.example.name\n#   resource_group_name = azurerm_resource_group.example.name\n\n#   webhook_endpoint {\n#     url = &quot;https://webhook.site/1b1b1b1b-1b1b-1b1b-1b1b-1b1b1b1b1b1b&quot;\n#   }\n# }</code></pre></div></p>\n<p>Nothing special here, we are creating key vault, and service account and adjusting few related settings</p>\n<p>From a Kubernetes side we gonna need:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kustomize.config.k8s.io/v1beta1\n<span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> serviceaccount.yml\n  <span class=\"token punctuation\">-</span> clusterrolebinding.yml\n  <span class=\"token punctuation\">-</span> cronjob.yml\n<span class=\"token key atrule\">configMapGenerator</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> example\n    <span class=\"token key atrule\">files</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> sync.ps1\n<span class=\"token key atrule\">generatorOptions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">disableNameSuffixHash</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre></div></p>\n<p>I am ommiting service account and cluster role binding - nothing interesting there (but do not forget about <code class=\"language-text\">azure.workload.identity/use</code> label)</p>\n<p>Cron job is as simple as</p>\n<p><div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> batch/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> CronJob\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> example\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">suspend</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"0 0 * * *\"</span>\n  <span class=\"token key atrule\">successfulJobsHistoryLimit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">failedJobsHistoryLimit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">jobTemplate</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">azure.workload.identity/use</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"true\"</span>\n        <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">serviceAccountName</span><span class=\"token punctuation\">:</span> example\n          <span class=\"token key atrule\">restartPolicy</span><span class=\"token punctuation\">:</span> Never\n          <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> example\n              <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mcr.microsoft.com/powershell\n              <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">-</span> /bin/pwsh\n                <span class=\"token punctuation\">-</span> /example/sync.ps1\n              <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> example\n                  <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /example\n          <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> example\n              <span class=\"token key atrule\">configMap</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> example</code></pre></div></p>\n<p>As you may guess, nothing special here as well, once a while we are running sync script</p>\n<p><div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$secretName</span> = <span class=\"token string\">'example'</span>\n<span class=\"token variable\">$namespace</span> = <span class=\"token punctuation\">(</span><span class=\"token function\">Get-Content</span> <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>run/secrets/kubernetes<span class=\"token punctuation\">.</span>io/serviceaccount/namespace<span class=\"token punctuation\">)</span>\n<span class=\"token variable\">$body</span> = @<span class=\"token punctuation\">{</span>\n  apiVersion = <span class=\"token string\">'v1'</span>\n  kind       = <span class=\"token string\">'Secret'</span>\n  metadata   = @<span class=\"token punctuation\">{</span>\n    name      = <span class=\"token variable\">$secretName</span>\n    namespace = <span class=\"token variable\">$namespace</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">data</span>       = @<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\"># foo = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes('bar'))</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$secret</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token string\">\"https://<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:KUBERNETES_SERVICE_HOST<span class=\"token punctuation\">)</span></span>/api/v1/namespaces/<span class=\"token variable\">$namespace</span>/secrets/<span class=\"token variable\">$secretName</span>\"</span> <span class=\"token operator\">-</span>Headers @<span class=\"token punctuation\">{</span> authorization = <span class=\"token string\">\"Bearer <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token function\">Get-Content</span> <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>run/secrets/kubernetes<span class=\"token punctuation\">.</span>io/serviceaccount/token<span class=\"token punctuation\">)</span></span>\"</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">-</span>SkipCertificateCheck <span class=\"token operator\">-</span>SkipHttpErrorCheck <span class=\"token operator\">-</span>StatusCodeVariable status\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$status</span> <span class=\"token operator\">-ne</span> 200<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$secret</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token string\">\"https://<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:KUBERNETES_SERVICE_HOST<span class=\"token punctuation\">)</span></span>/api/v1/namespaces/<span class=\"token variable\">$namespace</span>/secrets\"</span> <span class=\"token operator\">-</span>Headers @<span class=\"token punctuation\">{</span> authorization = <span class=\"token string\">\"Bearer <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token function\">Get-Content</span> <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>run/secrets/kubernetes<span class=\"token punctuation\">.</span>io/serviceaccount/token<span class=\"token punctuation\">)</span></span>\"</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">-</span>SkipCertificateCheck <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject <span class=\"token variable\">$body</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$secret</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">data</span><span class=\"token punctuation\">.</span>PSObject<span class=\"token punctuation\">.</span>Properties <span class=\"token punctuation\">|</span> <span class=\"token function\">ForEach-Object</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$body</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">]</span> = <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>Value\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$changed</span> = <span class=\"token boolean\">$false</span>\n<span class=\"token variable\">$token</span> = $<span class=\"token punctuation\">(</span><span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token string\">\"https://login.microsoftonline.com/<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:AZURE_TENANT_ID<span class=\"token punctuation\">)</span></span>/oauth2/v2.0/token\"</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/x-www-form-urlencoded\"</span> <span class=\"token operator\">-</span>Body <span class=\"token string\">\"scope=https%3A%2F%2Fmactemp3.vault.azure.net%2F.default&amp;client_id=<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:AZURE_CLIENT_ID<span class=\"token punctuation\">)</span></span>&amp;client_assertion_type=urn%3Aietf%3Aparams%3Aoauth%3Aclient-assertion-type%3Ajwt-bearer&amp;client_assertion=<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token function\">Get-Content</span> <span class=\"token variable\">$env</span>:AZURE_FEDERATED_TOKEN_FILE<span class=\"token punctuation\">)</span></span>&amp;grant_type=client_credentials\"</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty access_token<span class=\"token punctuation\">)</span>\n<span class=\"token variable\">$urls</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token string\">\"https://example.vault.azure.net/secrets?api-version=7.4\"</span> <span class=\"token operator\">-</span>Headers @<span class=\"token punctuation\">{</span> authorization = <span class=\"token string\">\"Bearer <span class=\"token variable\">$token</span>\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty value <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty id\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span> in <span class=\"token variable\">$urls</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">$name</span> = <span class=\"token variable\">$url</span><span class=\"token punctuation\">.</span>Split<span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>1<span class=\"token punctuation\">]</span>\n  <span class=\"token variable\">$value</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span></span>?api-version=7.4\"</span> <span class=\"token operator\">-</span>Headers @<span class=\"token punctuation\">{</span> authorization = <span class=\"token string\">\"Bearer <span class=\"token variable\">$token</span>\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty value\n  <span class=\"token variable\">$encoded</span> = <span class=\"token namespace\">[Convert]</span>::ToBase64String<span class=\"token punctuation\">(</span><span class=\"token namespace\">[Text.Encoding]</span>::UTF8<span class=\"token punctuation\">.</span>GetBytes<span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$encoded</span> <span class=\"token operator\">-ne</span> <span class=\"token variable\">$body</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$body</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">data</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$name</span> = <span class=\"token variable\">$encoded</span>\n    <span class=\"token variable\">$changed</span> = <span class=\"token boolean\">$true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$changed</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Put <span class=\"token string\">\"https://<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:KUBERNETES_SERVICE_HOST<span class=\"token punctuation\">)</span></span>/api/v1/namespaces/<span class=\"token variable\">$namespace</span>/secrets/<span class=\"token variable\">$secretName</span>\"</span> <span class=\"token operator\">-</span>Headers @<span class=\"token punctuation\">{</span> authorization = <span class=\"token string\">\"Bearer <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token function\">Get-Content</span> <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>run/secrets/kubernetes<span class=\"token punctuation\">.</span>io/serviceaccount/token<span class=\"token punctuation\">)</span></span>\"</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">-</span>SkipCertificateCheck <span class=\"token operator\">-</span>ContentType <span class=\"token string\">\"application/json\"</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject <span class=\"token variable\">$body</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"No changes\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div></p>\n<p>here we are exchanging kubernetes token provided by azure workload identity to access token</p>\n<p>retrieving list of secrets from key vault</p>\n<p>and updating kubernetes secret if needed</p>\n<p>profit</p>\n<p>Why I do like this approach - it is 40 LoC of plain script that we may run any time we want, compare this to number of thigs being deployed by default out of the box by</p>"}},"pageContext":{"id":"d87c7183-6b5c-5fab-9032-5880cd6a93c9"}},"staticQueryHashes":[],"slicesMap":{}}