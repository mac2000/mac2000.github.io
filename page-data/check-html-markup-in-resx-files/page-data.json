{"componentChunkName":"component---src-templates-note-js","path":"/check-html-markup-in-resx-files/","result":{"data":{"remark":{"fields":{"path":"check-html-markup-in-resx-files"},"meta":{"title":""},"headings":[{"value":"Check HTML markup in ResX files"}],"html":"<h1>Check HTML markup in ResX files</h1>\n<p>So, we got almost one thousand of resource files translated for public part of our project.</p>\n<p>Unfortunatelly on such huge amounts of data there is big chanse for human mistakes. We broke few important pages in our site with not valid html markup from resx files.</p>\n<p>So here is nice and simple way to check if there any errors in resource files html:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token namespace\">[System.Reflection.Assembly]</span>::LoadFrom<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">Join-Path</span> <span class=\"token variable\">$PSScriptRoot</span> <span class=\"token operator\">-</span>ChildPath <span class=\"token string\">'HtmlAgilityPack.dll'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Out-Null</span>\n<span class=\"token variable\">$doc</span> = <span class=\"token function\">New-Object</span> HtmlAgilityPack<span class=\"token punctuation\">.</span>HtmlDocument\n\n\n<span class=\"token variable\">$files</span> = <span class=\"token function\">Get-ChildItem</span> <span class=\"token operator\">-</span>Path C:\\Rabota<span class=\"token punctuation\">.</span>UA\\trunk\\Version\\Rabota2<span class=\"token punctuation\">.</span>WebUI <span class=\"token operator\">-</span>File <span class=\"token operator\">-</span>Include <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>resx <span class=\"token operator\">-</span>Recurse <span class=\"token operator\">-</span>ErrorAction SilentlyContinue\n\n<span class=\"token variable\">$errors</span> = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span> in <span class=\"token variable\">$files</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Write-Verbose</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">.</span>FullName\n\n    <span class=\"token variable\">$items</span> = <span class=\"token punctuation\">(</span><span class=\"token namespace\">[xml]</span><span class=\"token variable\">$xml</span> = <span class=\"token function\">Get-Content</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">.</span>FullName <span class=\"token operator\">-</span>Encoding UTF8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span><span class=\"token keyword\">data</span>\n\n    <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span> in <span class=\"token variable\">$items</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$doc</span><span class=\"token punctuation\">.</span>LoadHtml<span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$doc</span><span class=\"token punctuation\">.</span>ParseErrors<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-gt</span> 0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">Write-Host</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">.</span>FullName <span class=\"token operator\">-</span>ForegroundColor Yellow <span class=\"token operator\">-</span>NoNewline\n            <span class=\"token function\">Write-Host</span> <span class=\"token punctuation\">(</span><span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$item</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>ForegroundColor Cyan\n\n            <span class=\"token variable\">$doc</span><span class=\"token punctuation\">.</span>ParseErrors <span class=\"token punctuation\">|</span> <span class=\"token function\">ft</span> <span class=\"token operator\">-</span>AutoSize\n\n            <span class=\"token variable\">$errors</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$doc</span><span class=\"token punctuation\">.</span>ParseErrors\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">Write-Progress</span> <span class=\"token operator\">-</span>Activity <span class=\"token string\">'Checking HTML'</span> <span class=\"token operator\">-</span>Status <span class=\"token variable\">$file</span><span class=\"token punctuation\">.</span>FullName <span class=\"token operator\">-</span>PercentComplete <span class=\"token punctuation\">(</span> <span class=\"token namespace\">[Array]</span>::IndexOf<span class=\"token punctuation\">(</span><span class=\"token variable\">$files</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token variable\">$files</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">*</span> 100 <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$errors</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-gt</span> 0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Write-Host</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Found '</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$errors</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">+</span> <span class=\"token string\">' errors'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>ForegroundColor Red\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Write-Host</span> <span class=\"token string\">'All seems to be OK'</span> <span class=\"token operator\">-</span>ForegroundColor Green\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>and its output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">C:\\Rabota.UA\\trunk\\Version\\Rabota2.WebUI\\App_GlobalResources\\cvbuilder.en.resx FinanceSkillsRightExample\n\n        Code Line LinePosition Reason                      SourceText StreamPosition\n        ---- ---- ------------ ------                      ---------- --------------\nTagNotClosed    3            1 End tag &lt;/ul> was not found                        34\nTagNotClosed    7           57 End tag &lt;/ul> was not found                       266\n\n\nC:\\Rabota.UA\\trunk\\Version\\Rabota2.WebUI\\App_GlobalResources\\cvbuilder.en.resx ITSkillsRightExample\n\n        Code Line LinePosition Reason                      SourceText StreamPosition\n        ---- ---- ------------ ------                      ---------- --------------\nTagNotClosed    3            1 End tag &lt;/ul> was not found                        34\nTagNotClosed    7           57 End tag &lt;/ul> was not found                       371\n\n...\n\nC:\\Rabota.UA\\trunk\\Version\\Rabota2.WebUI\\Controls\\CvBuilder\\App_LocalResources\\StepThree.ascx.resx Incomplete2\n\n                Code Line LinePosition Reason                      SourceText StreamPosition\n                ---- ---- ------------ ------                      ---------- --------------\nEndTagNotRequired    1           41 End tag &lt;/> is not required &lt;                      40\n\n\nC:\\Rabota.UA\\trunk\\Version\\Rabota2.WebUI\\Controls\\CvBuilder\\App_LocalResources\\StepThree.ascx.uk.resx Incomplete2\n\n                Code Line LinePosition Reason                      SourceText StreamPosition\n                ---- ---- ------------ ------                      ---------- --------------\nEndTagNotRequired    1           37 End tag &lt;/> is not required &lt;                      36\n\n\nFound 52 errors</code></pre></div>\n<p>The reason why I so excited about this stuf - think how could such script to be used to detect broken html in asp webforms user controls!</p>\n<p>Note: for this to work you will need <a href=\"http://htmlagilitypack.codeplex.com/\">HtmlAgilityPack.dll</a>, also do not forget to change path to root folder of your porject</p>\n<h2>Check broken HTML in WebForms User Controls</h2>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token namespace\">[System.Reflection.Assembly]</span>::LoadFrom<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">Join-Path</span> <span class=\"token variable\">$PSScriptRoot</span> <span class=\"token operator\">-</span>ChildPath <span class=\"token string\">'HtmlAgilityPack.dll'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Out-Null</span>\n<span class=\"token variable\">$doc</span> = <span class=\"token function\">New-Object</span> HtmlAgilityPack<span class=\"token punctuation\">.</span>HtmlDocument\n\n\n<span class=\"token variable\">$files</span> = <span class=\"token function\">Get-ChildItem</span> <span class=\"token operator\">-</span>Path C:\\Rabota<span class=\"token punctuation\">.</span>UA\\trunk\\Version\\Rabota2<span class=\"token punctuation\">.</span>WebUI <span class=\"token operator\">-</span>File <span class=\"token operator\">-</span>Include <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>ascx<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>aspx<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>master <span class=\"token operator\">-</span>Recurse <span class=\"token operator\">-</span>ErrorAction SilentlyContinue\n\n<span class=\"token variable\">$errors</span> = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span> in <span class=\"token variable\">$files</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Write-Verbose</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">.</span>FullName\n\n    <span class=\"token variable\">$doc</span><span class=\"token punctuation\">.</span>LoadHtml<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">Get-Content</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">.</span>FullName <span class=\"token operator\">-</span>Encoding UTF8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$doc</span><span class=\"token punctuation\">.</span>ParseErrors<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-gt</span> 0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Write-Host</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">.</span>FullName <span class=\"token operator\">-</span>ForegroundColor Yellow\n\n        <span class=\"token variable\">$doc</span><span class=\"token punctuation\">.</span>ParseErrors <span class=\"token punctuation\">|</span> <span class=\"token function\">ft</span> <span class=\"token operator\">-</span>AutoSize\n\n        <span class=\"token variable\">$errors</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$doc</span><span class=\"token punctuation\">.</span>ParseErrors\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">Write-Progress</span> <span class=\"token operator\">-</span>Activity <span class=\"token string\">'Checking HTML'</span> <span class=\"token operator\">-</span>Status <span class=\"token variable\">$file</span><span class=\"token punctuation\">.</span>FullName <span class=\"token operator\">-</span>PercentComplete <span class=\"token punctuation\">(</span> <span class=\"token namespace\">[Array]</span>::IndexOf<span class=\"token punctuation\">(</span><span class=\"token variable\">$files</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token variable\">$files</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">*</span> 100 <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$errors</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-gt</span> 0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Write-Host</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Found '</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$errors</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">+</span> <span class=\"token string\">' errors'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>ForegroundColor Red\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Write-Host</span> <span class=\"token string\">'All seems to be OK'</span> <span class=\"token operator\">-</span>ForegroundColor Green\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>What you should be avare of - it is not silver bullet and can not find matchin tags for stuffs like Repeater > Header(Footer)Template</p>"}},"pageContext":{"id":"79e4b8fa-def3-5ec3-a62a-76e26a323289"}},"staticQueryHashes":[],"slicesMap":{}}