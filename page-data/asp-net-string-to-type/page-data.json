{"componentChunkName":"component---src-templates-note-js","path":"/asp-net-string-to-type/","result":{"data":{"remark":{"fields":{"path":"asp-net-string-to-type"},"meta":{"title":""},"headings":[{"value":"Asp.net string to Type"}],"html":"<h1>Asp.net string to Type</h1>\n<p>I have string with class name, and want convert it to Type, here how it can be done:</p>\n<p><em>Do not forget</em> - class name must be full with namespace, for example <code class=\"language-text\">RabotaUA.Entity.Model.SaleCompanyInfo</code></p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Tmp</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Type</span> <span class=\"token function\">StringToType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> typeName<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Reflection<span class=\"token punctuation\">.</span>Assembly</span> assembly <span class=\"token keyword\">in</span> AppDomain<span class=\"token punctuation\">.</span>CurrentDomain<span class=\"token punctuation\">.</span><span class=\"token function\">GetAssemblies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/*AssemblyLocator.GetAssemblies()*/</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Type</span> foundType <span class=\"token operator\">=</span> assembly<span class=\"token punctuation\">.</span><span class=\"token function\">GetType</span><span class=\"token punctuation\">(</span>typeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>foundType <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span> foundType<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In some cases this class will be also very useful</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AssemblyLocator</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">ReadOnlyCollection<span class=\"token punctuation\">&lt;</span>Assembly<span class=\"token punctuation\">></span></span> AllAssemblies<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">ReadOnlyCollection<span class=\"token punctuation\">&lt;</span>Assembly<span class=\"token punctuation\">></span></span> BinAssemblies<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token function\">AssemblyLocator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        AllAssemblies <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ReadOnlyCollection<span class=\"token punctuation\">&lt;</span>Assembly<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>\n            BuildManager<span class=\"token punctuation\">.</span><span class=\"token function\">GetReferencedAssemblies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Cast</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Assembly<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">IList<span class=\"token punctuation\">&lt;</span>Assembly<span class=\"token punctuation\">></span></span> binAssemblies <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Assembly<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> binFolder <span class=\"token operator\">=</span> HttpRuntime<span class=\"token punctuation\">.</span>AppDomainAppPath <span class=\"token operator\">+</span> <span class=\"token string\">\"bin\\\\\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">IList<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> dllFiles <span class=\"token operator\">=</span> Directory<span class=\"token punctuation\">.</span><span class=\"token function\">GetFiles</span><span class=\"token punctuation\">(</span>binFolder<span class=\"token punctuation\">,</span> <span class=\"token string\">\"*.dll\"</span><span class=\"token punctuation\">,</span> SearchOption<span class=\"token punctuation\">.</span>TopDirectoryOnly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> dllFile <span class=\"token keyword\">in</span> dllFiles<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">AssemblyName</span> assemblyName <span class=\"token operator\">=</span> AssemblyName<span class=\"token punctuation\">.</span><span class=\"token function\">GetAssemblyName</span><span class=\"token punctuation\">(</span>dllFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">Assembly</span> locatedAssembly <span class=\"token operator\">=</span> AllAssemblies<span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=></span>\n                AssemblyName<span class=\"token punctuation\">.</span><span class=\"token function\">ReferenceMatchesDefinition</span><span class=\"token punctuation\">(</span>\n                    a<span class=\"token punctuation\">.</span><span class=\"token function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> assemblyName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>locatedAssembly <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                binAssemblies<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>locatedAssembly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        BinAssemblies <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ReadOnlyCollection<span class=\"token punctuation\">&lt;</span>Assembly<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>binAssemblies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">ReadOnlyCollection<span class=\"token punctuation\">&lt;</span>Assembly<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetAssemblies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> AllAssemblies<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">ReadOnlyCollection<span class=\"token punctuation\">&lt;</span>Assembly<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetBinFolderAssemblies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> BinAssemblies<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}},"pageContext":{"id":"cbfd78eb-bb4f-5b0d-8aef-f219edb11768"}},"staticQueryHashes":[],"slicesMap":{}}