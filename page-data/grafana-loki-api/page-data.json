{"componentChunkName":"component---src-templates-note-js","path":"/grafana-loki-api/","result":{"data":{"remark":{"fields":{"path":"grafana-loki-api"},"meta":{"title":""},"headings":[{"value":"Grafana Loki API"}],"html":"<h1>Grafana Loki API</h1>\n<p>In my case I wanted to periodically check logs and notify teammates about problems before user does</p>\n<p>Here are few samples</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl port-forward loki-0 <span class=\"token number\">3100</span>:3100\n\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-vv</span> <span class=\"token parameter variable\">-G</span> <span class=\"token parameter variable\">-s</span>  <span class=\"token string\">\"http://localhost:3100/loki/api/v1/query\"</span> <span class=\"token punctuation\">\\</span>\n  --data-urlencode <span class=\"token punctuation\">\\</span>\n  <span class=\"token string\">'query={app=\"dracula\"} |= `Error trying to resolve field`'</span> <span class=\"token operator\">|</span> jq</code></pre></div>\n<p>which will return something like</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"resultType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"streams\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"result\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"stream\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"container\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"contoso\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"filename\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/var/log/pods/production_contoso-xxxxxxxx/contoso/0.log\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"job\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"production/contoso\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"namespace\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"production\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"node_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node001\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"pod\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"contoso-xxxxxxx-yyyyyy\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"stream\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"stdout\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"app\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"contoso\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"values\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"1667069275158472827\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"{\\\"level\\\":\\\"warn\\\",\\\"operation\\\":\\\"query\\\",\\\"name\\\":\\\"sayHi\\\"}\"</span>\n          <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>with that in place we can wirte some kind of demo:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> https <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/loki/api/v1/query_range'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://localhost:3100'</span><span class=\"token punctuation\">)</span>\nurl<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'query'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"{app=\\\"dracula\\\"} |= `\\\"isEmployer\\\":\\\"1\\\"` | json | __error__ != `JSONParserErr`\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// url.searchParams.set('query', \"{app=\\\"dracula\\\"} | json | __error__ != `JSONParserErr`\")</span>\n<span class=\"token comment\">// url.searchParams.set('start', '2022-10-03T09:00:00.0Z') // Math.round(new Date(2022, 10, 3, 9, 0, 0) / 1000))</span>\n<span class=\"token comment\">// url.searchParams.set('end', '2022-10-03T10:00:00.0Z') // , Math.round(new Date(2022, 10, 3, 11, 0, 0) / 1000))</span>\n\nurl<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'start'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Math.round(new Date(2022, 10, 3, 9, 0, 0) / 1000))</span>\nurl<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// , Math.round(new Date(2022, 10, 3, 11, 0, 0) / 1000))</span>\n\n\n<span class=\"token comment\">// 1664756200</span>\n\n<span class=\"token keyword\">let</span> counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> body <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">chunk</span> <span class=\"token operator\">=></span> body <span class=\"token operator\">+=</span> chunk<span class=\"token punctuation\">)</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> result <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> events <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span> <span class=\"token operator\">=></span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> items <span class=\"token operator\">=</span> events\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> e<span class=\"token operator\">?.</span>token<span class=\"token operator\">?.</span>email<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">notebook</span><span class=\"token operator\">:</span> e<span class=\"token operator\">?.</span>token<span class=\"token operator\">?.</span>notebookId<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> e<span class=\"token operator\">?.</span>error<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> e<span class=\"token operator\">?.</span>name<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>email <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>notebook <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>error <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// console.log(items)</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> items<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// console.log(item)</span>\n            <span class=\"token comment\">// counter++</span>\n            <span class=\"token comment\">// if (counter &lt; 2) {</span>\n            <span class=\"token comment\">//     continue</span>\n            <span class=\"token comment\">// }</span>\n\n            <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">User </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>email<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> (</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>notebook<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">) had troubles while executing '</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">' because of '</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">' (details are in monitoring) and there is a chance he will complain to CC</span><span class=\"token template-punctuation string\">`</span></span>\n\n            <span class=\"token comment\">// https.request('https://slack.com/api/chat.postMessage', {</span>\n            <span class=\"token comment\">//     method: 'POST',</span>\n            <span class=\"token comment\">//     headers: {</span>\n            <span class=\"token comment\">//         'Content-Type': 'application/json',</span>\n            <span class=\"token comment\">//         'Authorization': 'Bearer xoxb-xxxxxxx'</span>\n            <span class=\"token comment\">//     }</span>\n            <span class=\"token comment\">// }).end(JSON.stringify({</span>\n            <span class=\"token comment\">//     channel: '@mac',</span>\n            <span class=\"token comment\">//     text</span>\n            <span class=\"token comment\">// }))</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">// if (counter++>5) {</span>\n            <span class=\"token comment\">//     break</span>\n            <span class=\"token comment\">// }</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// console.log(response.status, rest)</span>\n        <span class=\"token comment\">// console.log(status, result.map(r => Object.keys(r)))</span>\n        <span class=\"token comment\">// console.log(result.map(r => JSON.parse(r.values[0][1])).filter(r => !!r.token))</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div></p>"}},"pageContext":{"id":"e8540b5c-391e-5b22-a8ba-3cfefb525dea"}},"staticQueryHashes":[],"slicesMap":{}}