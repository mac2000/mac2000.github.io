{"componentChunkName":"component---src-templates-note-js","path":"/microk8s-storage-retain","result":{"data":{"remark":{"fields":{"path":"microk8s-storage-retain"},"meta":{"title":""},"headings":[{"value":"Microk8s Storage Retain Policy"}],"html":"<h1>Microk8s Storage Retain Policy</h1>\n<p>By defaul Microk8s storage plugin creates persistent volumes with delete policy, which means that whenever you delete your claims you will loose your data</p>\n<p>To keep your data you gonna need to create storage class and persisten volume before hand</p>\n<p>So for example on a Microk8s server:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /data/demo\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'Hello'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /data/demo/index.html\n<span class=\"token function\">cat</span> /data/demo/index.html</code></pre></div>\n<p>Then create <strong>storage class</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> storage.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> StorageClass\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n<span class=\"token comment\"># In Microk8s when storage plugin enabled it will be only one available provisioner</span>\n<span class=\"token key atrule\">provisioner</span><span class=\"token punctuation\">:</span> microk8s.io/hostpath\n<span class=\"token key atrule\">reclaimPolicy</span><span class=\"token punctuation\">:</span> Retain</code></pre></div>\n<p>now if we ran <code class=\"language-text\">kubectl get storage class</code> should see:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">NAME                          PROVISIONER            RECLAIMPOLICY\nmicrok8s-hostpath (default)   microk8s.io/hostpath   Delete\ndemo                          microk8s.io/hostpath   Retain</code></pre></div>\n<p>Now it is time for <strong>persisten-volume</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> PersistentVolume\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># Here we are asking to use our custom storage class</span>\n  <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> demo\n  <span class=\"token key atrule\">capacity</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 100M\n  <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> ReadWriteOnce\n  <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># Should be created upfront</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'/data/demo'</span></code></pre></div>\n<p>If everything fine we should see it by running <code class=\"language-text\">kubectl get pv</code></p>\n<p>Last piece is a <strong>persisten-volume-claim</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> PersistentVolumeClaim\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># Once again our custom storage class here</span>\n  <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> demo\n  <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> ReadWriteOnce\n  <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 100M</code></pre></div>\n<p>Take a note, that if you gonna create/delete claim few time, Kubernetes will not give volume for a second claim and will create one with delete policy and mark previous as released, so <code class=\"language-text\">kubectl get pv</code> will show you two rows instead of expected one. To fix this you need also delete and recreate persisten volume.</p>\n<p>And now we can use our volume:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> demo\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> demo\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> demo\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span>alpine\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n          <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /usr/share/nginx/html\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n          <span class=\"token key atrule\">persistentVolumeClaim</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">claimName</span><span class=\"token punctuation\">:</span> demo</code></pre></div>\n<h2>Host path alternative</h2>\n<p>Also there is a workaround without husling at all with all this volumes, we can mount host path directly, like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> demo\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> demo\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> demo\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">:</span>alpine\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n          <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /usr/share/nginx/html\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n          <span class=\"token comment\"># instead of volume claim</span>\n          <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /data/demo\n            <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> DirectoryOrCreate</code></pre></div>\n<p>Which technically will work same way as with retain policy</p>\n<p>From github <a href=\"https://github.com/ubuntu/microk8s/issues/290\">issue</a> it seems that:</p>\n<ul>\n<li>used storage provisioner not only not recommended but also not developed anymore</li>\n<li>there is an <a href=\"https://github.com/rancher/local-path-provisioner\">alternative</a> by ranches which also used in <a href=\"https://github.com/deckhouse/deckhouse/tree/main/modules/031-local-path-provisioner\">deckhouse</a></li>\n</ul>\n<h2>Links</h2>\n<ul>\n<li><a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/\">Configure a Pod to Use a PersistentVolume for Storage</a></li>\n<li><a href=\"https://github.com/ubuntu/microk8s/issues/290\">microk8s hostpath provisioner ignores \"reclaimPolicy: Retain\" for dynamic volume provisioning</a></li>\n<li><a href=\"https://github.com/rancher/local-path-provisioner\">rancher local-path-provisioner</a></li>\n</ul>"}},"pageContext":{"id":"30e055ac-021c-54c6-ad26-2baa5f150c6a"}},"staticQueryHashes":[]}