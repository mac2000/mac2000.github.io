{"componentChunkName":"component---src-templates-note-js","path":"/kafka-message-debugger/","result":{"data":{"remark":{"fields":{"path":"kafka-message-debugger"},"meta":{"title":""},"headings":[{"value":"Kafka Message Debugger"}],"html":"<h1>Kafka Message Debugger</h1>\n<p>One day engineer came complaining that his consumer suddenly started to restart every few minutes</p>\n<p>At the very end we have found that somehow health check from dotnet started to write plain text ping messages into topic</p>\n<p>And consumer was not ready for that</p>\n<p>Here is sample app that may be used to dramatically decrease research time of suche scenarious:</p>\n<p><div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"context\"</span>\n\t<span class=\"token string\">\"crypto/tls\"</span>\n\t<span class=\"token string\">\"encoding/binary\"</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"os\"</span>\n\t<span class=\"token string\">\"strconv\"</span>\n\t<span class=\"token string\">\"time\"</span>\n\n\t<span class=\"token string\">\"github.com/confluentinc/confluent-kafka-go/schemaregistry\"</span>\n\t<span class=\"token string\">\"github.com/linkedin/goavro\"</span>\n\tkafka <span class=\"token string\">\"github.com/segmentio/kafka-go\"</span>\n\t<span class=\"token string\">\"github.com/segmentio/kafka-go/sasl/plain\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\ttopic <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TOPIC\"</span><span class=\"token punctuation\">)</span>\n\toffset<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">ParseInt</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span><span class=\"token function\">Getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OFFSET\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n\tclient<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> schemaregistry<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>schemaregistry<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">{</span>\n\t\tBasicAuthCredentialsSource<span class=\"token punctuation\">:</span> <span class=\"token string\">\"USER_INFO\"</span><span class=\"token punctuation\">,</span>\n\t\tSchemaRegistryURL<span class=\"token punctuation\">:</span>          os<span class=\"token punctuation\">.</span><span class=\"token function\">Getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SCHEMA_URL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\tBasicAuthUserInfo<span class=\"token punctuation\">:</span>          os<span class=\"token punctuation\">.</span><span class=\"token function\">Getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SCHEMA_CREDS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tdialer <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>kafka<span class=\"token punctuation\">.</span>Dialer<span class=\"token punctuation\">{</span>\n\t\tTimeout<span class=\"token punctuation\">:</span>   <span class=\"token number\">10</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">,</span>\n\t\tDualStack<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\tTLS<span class=\"token punctuation\">:</span>       <span class=\"token operator\">&amp;</span>tls<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tSASLMechanism<span class=\"token punctuation\">:</span> plain<span class=\"token punctuation\">.</span>Mechanism<span class=\"token punctuation\">{</span>\n\t\t\tUsername<span class=\"token punctuation\">:</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BROKER_USERNAME\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\tPassword<span class=\"token punctuation\">:</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BROKER_PASSWORD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\n\treader <span class=\"token operator\">:=</span> kafka<span class=\"token punctuation\">.</span><span class=\"token function\">NewReader</span><span class=\"token punctuation\">(</span>kafka<span class=\"token punctuation\">.</span>ReaderConfig<span class=\"token punctuation\">{</span>\n\t\tBrokers<span class=\"token punctuation\">:</span>   <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{</span>os<span class=\"token punctuation\">.</span><span class=\"token function\">Getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BROKER\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tTopic<span class=\"token punctuation\">:</span>     topic<span class=\"token punctuation\">,</span>\n\t\tPartition<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t\tDialer<span class=\"token punctuation\">:</span>    dialer<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">defer</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\treader<span class=\"token punctuation\">.</span><span class=\"token function\">SetOffset</span><span class=\"token punctuation\">(</span><span class=\"token function\">int64</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\tm<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">ReadMessage</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Topic:     %s\\n\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>Topic<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Time:      %s\\n\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>Time<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Partition: %d\\n\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>Partition<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Offset:    %d\\n\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>Offset<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bytes:     %v\\n\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"String:    %s\\n\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Magic:     %v\\n\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> m<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bytes:     %v\\n\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Schema ID: %d\\n\"</span><span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">.</span>BigEndian<span class=\"token punctuation\">.</span><span class=\"token function\">Uint32</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\tschema<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">GetBySubjectAndID</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s-value\"</span><span class=\"token punctuation\">,</span> topic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">.</span>BigEndian<span class=\"token punctuation\">.</span><span class=\"token function\">Uint32</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nSchema:\\n%s\\n\\n\"</span><span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">.</span>Schema<span class=\"token punctuation\">)</span>\n\n\tcodec<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> goavro<span class=\"token punctuation\">.</span><span class=\"token function\">NewCodec</span><span class=\"token punctuation\">(</span>schema<span class=\"token punctuation\">.</span>Schema<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\tnative<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> codec<span class=\"token punctuation\">.</span><span class=\"token function\">NativeFromBinary</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Deserialized:\\n%v\\n\"</span><span class=\"token punctuation\">,</span> native<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div></p>\n<p>It will connect to desired topic in kafka, read concrete message and try to deserialize it and print all details</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">env</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> .env <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span><span class=\"token variable\">)</span></span> go run main.go</code></pre></div>\n<p>Output will be something like:</p>\n<div class=\"gatsby-highlight\" data-language=\"log\"><pre class=\"language-log\"><code class=\"language-log\"><span class=\"token property\">Topic:</span>     VacancyView\n<span class=\"token property\">Time:</span>      <span class=\"token date number\">2022-10-20</span> <span class=\"token time number\">10:11:16.704 +0000</span> UTC\n\n<span class=\"token property\">Partition:</span> <span class=\"token number\">0</span>\n<span class=\"token property\">Offset:</span>    <span class=\"token number\">2186</span>\n\n<span class=\"token property\">Bytes:</span>     <span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token date number\">0 1 134</span> <span class=\"token number\">252</span> <span class=\"token number\">132</span> <span class=\"token number\">252</span> <span class=\"token date number\">233 8 162</span> <span class=\"token number\">226</span> <span class=\"token date number\">138 13 42</span> <span class=\"token date number\">49 51 52</span> <span class=\"token date number\">48 55 49</span> <span class=\"token date number\">55 51 56</span> <span class=\"token date number\">49 46 49</span> <span class=\"token date number\">54 53 54</span> <span class=\"token date number\">55 48 53</span> <span class=\"token date number\">55 54 50</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">*</span><span class=\"token number\">1340717381.1656705762</span>\n<span class=\"token property\">Magic:</span>     <span class=\"token boolean\">true</span>\n<span class=\"token property\">Bytes:</span>     <span class=\"token punctuation\">[</span><span class=\"token date number\">0 1 134</span> <span class=\"token number\">252</span><span class=\"token punctuation\">]</span>\n<span class=\"token property\">Schema ID:</span> <span class=\"token number\">100092</span>\n\n<span class=\"token property\">Schema:</span>\n<span class=\"token operator\">{</span><span class=\"token string\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"record\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"VacancyView\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"namespace\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"KafkaModels\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"fields\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token operator\">{</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"VacancyId\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"int\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"doc\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Vacancy identifier, sql: dbo.Vacancy.id, es: vaclist._id\"</span><span class=\"token operator\">}</span><span class=\"token punctuation\">,</span><span class=\"token operator\">{</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"UserId\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"int\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"doc\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"User identifier, dbo.EmailSource.id\"</span><span class=\"token operator\">}</span><span class=\"token punctuation\">,</span><span class=\"token operator\">{</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"ClientId\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"string\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"doc\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Client identifier, '_ga' cookie being set by Google Analytics\"</span><span class=\"token operator\">}</span><span class=\"token punctuation\">]</span><span class=\"token operator\">}</span>\n\n<span class=\"token property\">Deserialized:</span>\nmap<span class=\"token punctuation\">[</span>ClientId<span class=\"token operator\">:</span><span class=\"token number\">1340717381.1656705762</span> UserId<span class=\"token operator\">:</span><span class=\"token number\">13719697</span> VacancyId<span class=\"token operator\">:</span><span class=\"token number\">9256706</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>And if there wont be magic byte it will try to do its best to decode from json or plain text</p>"}},"pageContext":{"id":"d3cba977-3698-5ee7-93c9-3db3b939a9bd"}},"staticQueryHashes":[],"slicesMap":{}}