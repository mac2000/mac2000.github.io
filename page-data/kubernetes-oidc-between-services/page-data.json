{"componentChunkName":"component---src-templates-note-js","path":"/kubernetes-oidc-between-services/","result":{"data":{"remark":{"fields":{"path":"kubernetes-oidc-between-services"},"meta":{"title":""},"headings":[{"value":"Kubernetes OpenId Connect auth between services"},{"value":"Kube API"}],"html":"<h1>Kubernetes OpenId Connect auth between services</h1>\n<p>TLDR: For service to service communication inside kubernetes instead of sharing api keys we may use kubernetes auth for passwordless auth between services, e.g. imagine that you have \"sms\" api running in your cluster, its job - send sms, it is availble only for your other services, and instead of giving it api key we gonna use service accounts so other services may talk to sms api without shared secret</p>\n<p>In Azure AKS we have enabled OIDC, as a result can use projected tokens</p>\n<p><a href=\"https://banzaicloud.com/blog/kubernetes-oidc/\">OIDC issuer discovery for Kubernetes service accounts</a> was my starting point in this journey</p>\n<p>Before doing anything else I want to see what we have out of the box</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl run my-shell <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--image</span> ubuntu -- <span class=\"token function\">bash</span>\n<span class=\"token function\">cat</span> /var/run/secrets/kubernetes.io/serviceaccount/token</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"aud\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"https://westeurope.oic.prod-aks.azure.com/695e64b5/0152ceb3/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://myaks.hcp.westeurope.azmk8s.io\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"\\\"myaks.hcp.westeurope.azmk8s.io\\\"\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exp\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1723699192</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"iat\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692163192</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"iss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://westeurope.oic.prod-aks.azure.com/695e64b5/0152ceb3/\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"kubernetes.io\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"namespace\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mynamespace\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"pod\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"my-shell\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"uid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fb79574f\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"serviceaccount\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"uid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"43c70ddf\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"warnafter\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692166799</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"nbf\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692163192</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"sub\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"system:serviceaccount:mynamespace:default\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Notes:</p>\n<ul>\n<li>it is an JWT token</li>\n<li>it has issuer that is publicly available and has <code class=\"language-text\">/.well-known/openid-configuration</code></li>\n<li>subject is set to default service account</li>\n<li>expiration is 1 year</li>\n</ul>\n<p>So techincally speaking we already may use it in case if we do not care about subjects and audiences</p>\n<p>We can change subject by running our application under dedicated service account like so</p>\n<p><div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mactemp\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mactemp\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mactemp\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">serviceAccountName</span><span class=\"token punctuation\">:</span> mactemp\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx</code></pre></div></p>\n<p>The only difference from previous example is <code class=\"language-text\">system:serviceaccount:mynamespace:mactemp</code> being set as subject</p>\n<h2>Projected Service Account Token</h2>\n<p><div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ServiceAccount\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mactemp\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mactemp\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> mactemp\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">serviceAccountName</span><span class=\"token punctuation\">:</span> mactemp\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mactemp\n          <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> nginx\n          <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> oidc<span class=\"token punctuation\">-</span>token\n              <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /var/run/secrets/tokens\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> oidc<span class=\"token punctuation\">-</span>token\n          <span class=\"token key atrule\">projected</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">sources</span><span class=\"token punctuation\">:</span>\n              <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">serviceAccountToken</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> oidc<span class=\"token punctuation\">-</span>token\n                  <span class=\"token key atrule\">expirationSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">600</span>\n                  <span class=\"token key atrule\">audience</span><span class=\"token punctuation\">:</span> hello</code></pre></div></p>\n<p>Now our token lives here <code class=\"language-text\">/var/run/secrets/tokens/oidc-token</code> and has following payload:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"aud\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"hello\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exp\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692164244</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"iat\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692163644</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"iss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://westeurope.oic.prod-aks.azure.com/695e64b5/0152ceb3/\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"kubernetes.io\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"namespace\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mynamespace\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"pod\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mactemp-5985c9d795-fvglk\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"uid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0178de50\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"serviceaccount\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mactemp\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"uid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"690dfae9\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"nbf\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692163644</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"sub\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"system:serviceaccount:mynamespace:mactemp\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Notes:</p>\n<ul>\n<li>now we can customize audience <code class=\"language-text\">aud</code></li>\n<li>subject <code class=\"language-text\">sub</code> is set to service account</li>\n<li>expiration <code class=\"language-text\">exp</code> is 10 minutes</li>\n<li>token is replaced automatically, so after 10 minutes file contents is being updated</li>\n</ul>\n<p>With that in place our application may use it to authenticate requests against other apps, and other apps will look something like this (dotnet, partial sample)</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Security<span class=\"token punctuation\">.</span>Claims</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Authentication<span class=\"token punctuation\">.</span>JwtBearer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Microsoft<span class=\"token punctuation\">.</span>Identity<span class=\"token punctuation\">.</span>Web</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> builder <span class=\"token operator\">=</span> WebApplication<span class=\"token punctuation\">.</span><span class=\"token function\">CreateBuilder</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbuilder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token function\">AddAuthorization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddAuthentication</span><span class=\"token punctuation\">(</span>JwtBearerDefaults<span class=\"token punctuation\">.</span>AuthenticationScheme<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">AddJwtBearer</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        options<span class=\"token punctuation\">.</span>Authority <span class=\"token operator\">=</span> <span class=\"token string\">\"https://westeurope.oic.prod-aks.azure.com/695e64b5/0152ceb3/\"</span><span class=\"token punctuation\">;</span>\n        options<span class=\"token punctuation\">.</span>Audience <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> app <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">Build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">UseAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">UseAuthorization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">MapGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ClaimsPrincipal</span> user<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>Claims<span class=\"token punctuation\">.</span><span class=\"token function\">Select</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">KeyValuePair<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>And suddenly we have our authentication setup and applications can talk to each other without the need of shared api keys - aka passwordless approach</p>\n<p>Also, for AKS this OIDC endpoint is publicly available so can be consumed by external apps as well, which means we can for example authenticate against CloudElastic, Confluent Kafka, etc without passwords</p>\n<p>Also there is this <code class=\"language-text\">kubernetes.io</code> custom clain which will contain namespace and pod names, that theoretically can be used for granular restrictions (aka with this in place we may not bother with custom service accounts at all and leave default aud)</p>\n<p>The last caveat is local development, when we are using Azure Identitity it is as easy as calling DefaultCredentials, but what should we do here?</p>\n<p>So far I can not find any way to call kube api directly to sign such token and it seems that workaround will be to call kubectl exec mypod cat path/to/token, at least it will definitely work</p>\n<p>I do like this approach little bit more than Azure AD because there is no need to create quadrillion managed service accounts for each and every application</p>\n<h2>kind</h2>\n<p>just to verify if it will work in non AKS cluster</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kind create cluster\nkubectl <span class=\"token function\">wait</span> <span class=\"token parameter variable\">--for</span><span class=\"token operator\">=</span>condition<span class=\"token operator\">=</span>ready <span class=\"token function\">node</span> <span class=\"token parameter variable\">--all</span> <span class=\"token parameter variable\">--timeout</span><span class=\"token operator\">=</span>90s\nkubectl apply <span class=\"token parameter variable\">-f</span> projected.yml\nkubectl <span class=\"token function\">wait</span> <span class=\"token parameter variable\">--for</span><span class=\"token operator\">=</span>condition<span class=\"token operator\">=</span>ready pods <span class=\"token parameter variable\">-l</span> <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>mactemp <span class=\"token parameter variable\">--timeout</span><span class=\"token operator\">=</span>90s\nkubectl <span class=\"token builtin class-name\">exec</span> mactemp-db7686c79-9mwth -- <span class=\"token function\">cat</span> /var/run/secrets/tokens/oidc-token</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"aud\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"hello\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exp\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692166019</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"iat\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692165419</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"iss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://kubernetes.default.svc.cluster.local\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"kubernetes.io\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"namespace\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"pod\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mactemp-db7686c79-9mwth\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"uid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"420f5867\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"serviceaccount\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mactemp\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"uid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"08e39557\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"nbf\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692165419</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"sub\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"system:serviceaccount:default:mactemp\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Note: issuer is now internal and will have self signed certificate</p>\n<h1>Kube API</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl proxy\n<span class=\"token function\">curl</span> http://localhost:8001/api/v1/namespaces/production/serviceaccounts/mactemp</code></pre></div>\n<p>/api/v1/namespaces/<namespace>/serviceaccounts/<service-account-name>: The kubelet queries this endpoint to retrieve the service account details, including the secret name containing the token.\n/api/v1/namespaces/<namespace>/secrets/<secret-name>: Once the secret name is obtained, the kubelet queries this endpoint to fetch the secret data, which inclu</p>\n<p>Another way more detailed article is: <a href=\"https://learnk8s.io/microservices-authentication-kubernetes\">Authentication between microservices using Kubernetes identities</a></p>\n<p>And second one <a href=\"https://unofficial-kubernetes.readthedocs.io/en/latest/tasks/configure-pod-container/configure-service-account/#manually-create-a-service-account-api-token\">Manually create a service account API token</a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># manually create and assign secret for given service account</span>\nkubectl apply <span class=\"token parameter variable\">-f</span> - <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mactemp-secret\n  annotations:\n    kubernetes.io/service-account.name: mactemp\ntype: kubernetes.io/service-account-token\nEOF</span>\n\n<span class=\"token comment\"># retrieve token</span>\nkubectl get secret mactemp-secret <span class=\"token parameter variable\">-o</span> <span class=\"token assign-left variable\">jsonpath</span><span class=\"token operator\">=</span><span class=\"token string\">'{.data.token}'</span> <span class=\"token operator\">|</span> base64 <span class=\"token parameter variable\">-d</span>\n<span class=\"token comment\"># note: after service account deletion this secret will be deleted automatically</span></code></pre></div>\n<p>and in both case (default or projected) payload is:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"iss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"kubernetes/serviceaccount\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"kubernetes.io/serviceaccount/namespace\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mynamespace\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"kubernetes.io/serviceaccount/secret.name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mactemp-secret\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"kubernetes.io/serviceaccount/service-account.name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mactemp\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"kubernetes.io/serviceaccount/service-account.uid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"d3372b60\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"sub\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"system:serviceaccount:mynamespace:mactemp\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Verifying token</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># note: -o yaml used to print response in yaml</span>\nkubectl apply <span class=\"token parameter variable\">-o</span> yaml <span class=\"token parameter variable\">-f</span> - <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF\nkind: TokenReview\napiVersion: authentication.k8s.io/v1\nmetadata:\n  name: test\nspec:\n  token: <span class=\"token variable\"><span class=\"token variable\">$(</span>kubectl get secret mactemp-secret <span class=\"token parameter variable\">-o</span> <span class=\"token assign-left variable\">jsonpath</span><span class=\"token operator\">=</span><span class=\"token string\">'{.data.token}'</span> <span class=\"token operator\">|</span> base64 <span class=\"token parameter variable\">-d</span><span class=\"token variable\">)</span></span>\nEOF</span></code></pre></div>\n<p>it will return big yaml where we are looking for <code class=\"language-text\">authenticated: true</code></p>\n<p>And the same for projected token</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-o</span> yaml <span class=\"token parameter variable\">-f</span> - <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF\nkind: TokenReview\napiVersion: authentication.k8s.io/v1\nmetadata:\n  name: test\nspec:\n  token: <span class=\"token variable\"><span class=\"token variable\">$(</span>kubectl <span class=\"token builtin class-name\">exec</span> <span class=\"token punctuation\">$(</span>kubectl get po <span class=\"token parameter variable\">-l</span> <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>mactemp <span class=\"token parameter variable\">-o</span> custom-columns<span class=\"token operator\">=</span>:metadata.name --no-headers<span class=\"token punctuation\">)</span> -- <span class=\"token function\">cat</span> /var/run/secrets/tokens/oidc-token<span class=\"token variable\">)</span></span>\nEOF</span></code></pre></div>\n<p>Gives us error: invalid bearer token, token audiences \"hello\" is invalid for the target audiences \"<a href=\"https://westeurope.oic.prod-aks.azure.com/695e64b5\">https://westeurope.oic.prod-aks.azure.com/695e64b5</a>\", \"myaks.hcp.westeurope.azmk8s.io\" the server has asked for the client to provide credentials</p>\n<p>To fix that we need path audiences like so</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl apply <span class=\"token parameter variable\">-o</span> yaml <span class=\"token parameter variable\">-f</span> - <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF\nkind: TokenReview\napiVersion: authentication.k8s.io/v1\nmetadata:\n  name: test\nspec:\n  audiences:\n    - hello\n  token: <span class=\"token variable\"><span class=\"token variable\">$(</span>kubectl <span class=\"token builtin class-name\">exec</span> <span class=\"token punctuation\">$(</span>kubectl get po <span class=\"token parameter variable\">-l</span> <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>mactemp <span class=\"token parameter variable\">-o</span> custom-columns<span class=\"token operator\">=</span>:metadata.name --no-headers<span class=\"token punctuation\">)</span> -- <span class=\"token function\">cat</span> /var/run/secrets/tokens/oidc-token<span class=\"token variable\">)</span></span>\nEOF</span></code></pre></div>\n<p>With that in place we can verify token without the need to know anything about oidc and jwks</p>\n<p>The caveat here is that: we can not modify audience for default service account approach and we can not retrieve token for projected tokens without running pod first</p>\n<p>Also note that manually created secret does not have expiration at all so it will live forever</p>\n<p>And finally from <a href=\"https://medium.com/@gowthamshankar09/how-to-create-serviceaccount-secret-in-kubernetes-1-24-36a61bdb73ad\">How to create ServiceAccount Secret in Kubernetes 1.24</a> found wanted command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl create token mactemp</code></pre></div>\n<p>which returns</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"aud\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"https://westeurope.oic.prod-aks.azure.com/695e64b5/0152ceb3/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://myaks.hcp.westeurope.azmk8s.io\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"\\\"myaks.hcp.westeurope.azmk8s.io\\\"\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exp\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692173481</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"iat\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692169881</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"iss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://westeurope.oic.prod-aks.azure.com/695e64b5/0152ceb3/\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"kubernetes.io\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"namespace\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mynamespace\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"serviceaccount\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mactemp\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"uid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5842a7ce\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"nbf\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1692169881</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"sub\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"system:serviceaccount:mynamespace:mactemp\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Notes:</p>\n<ul>\n<li>token expires in 1 hour</li>\n</ul>\n<p>And thankfully it has some options</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl create token mactemp <span class=\"token parameter variable\">--duration</span> 10m <span class=\"token parameter variable\">--audience</span> hello</code></pre></div>\n<p>To see whats going on under the hood pass <code class=\"language-text\">-v=9</code></p>\n<p>And it seems that request will be something like this (note: we are using proxy here to not bother with auth so far)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl proxy\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-X</span> POST <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Content-Type: application/json\"</span> <span class=\"token string\">\"http://localhost:8001/api/v1/namespaces/production/serviceaccounts/mactemp/token\"</span> <span class=\"token parameter variable\">-d</span> <span class=\"token string\">'{\n  \"kind\":\"TokenRequest\",\n  \"apiVersion\":\"authentication.k8s.io/v1\",\n  \"spec\":{\n    \"audiences\":[\"hello\"],\n    \"expirationSeconds\":600\n  }\n}'</span></code></pre></div>\n<p>and response will be</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"kind\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TokenRequest\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"apiVersion\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"authentication.k8s.io/v1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"metadata\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mactemp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"namespace\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"production\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"creationTimestamp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2023-08-16T07:19:22Z\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"managedFields\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"manager\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"curl\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"operation\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Update\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"apiVersion\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"authentication.k8s.io/v1\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"time\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2023-08-16T07:19:22Z\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"fieldsType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"FieldsV1\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"fieldsV1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"f:spec\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"f:audiences\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"f:expirationSeconds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"subresource\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"token\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"spec\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"audiences\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"hello\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"expirationSeconds\"</span><span class=\"token operator\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"boundObjectRef\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"token\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eyJhbGciOiJSUzI....\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"expirationTimestamp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2023-08-16T07:29:22Z\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Which means we should be able to do it programmatically if that is not done yet already in client libraries</p>\n<p>Starting from one of the articles going to give it a try in golang first</p>\n<p><div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"context\"</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\n\tauthv1 <span class=\"token string\">\"k8s.io/api/authentication/v1\"</span>\n\tmetav1 <span class=\"token string\">\"k8s.io/apimachinery/pkg/apis/meta/v1\"</span>\n\n\t<span class=\"token string\">\"k8s.io/client-go/kubernetes\"</span>\n\t<span class=\"token string\">\"k8s.io/client-go/tools/clientcmd\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">/*\nTaken from \"out of the cluster\" example\nhttps://github.com/kubernetes/client-go/blob/master/examples/out-of-cluster-client-configuration/main.go\n*/</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// in my case each cluster has its own config file</span>\n\tconfig<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> clientcmd<span class=\"token punctuation\">.</span><span class=\"token function\">BuildConfigFromFlags</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/Users/mac/Documents/dotfiles/kube/prod.yml\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tclientset<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> kubernetes<span class=\"token punctuation\">.</span><span class=\"token function\">NewForConfig</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// namespaces, err := clientset.CoreV1().Namespaces().List(context.Background(), metav1.ListOptions{})</span>\n\t<span class=\"token comment\">// if err != nil {</span>\n\t<span class=\"token comment\">// \tpanic(err)</span>\n\t<span class=\"token comment\">// }</span>\n\t<span class=\"token comment\">// for _, ns := range namespaces.Items {</span>\n\t<span class=\"token comment\">// \tfmt.Printf(\"Namespace: %s\\n\", ns.Name)</span>\n\t<span class=\"token comment\">// }</span>\n\n\texpirationSeconds <span class=\"token operator\">:=</span> <span class=\"token function\">int64</span><span class=\"token punctuation\">(</span><span class=\"token number\">600</span><span class=\"token punctuation\">)</span>\n\tr<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> clientset<span class=\"token punctuation\">.</span><span class=\"token function\">CoreV1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ServiceAccounts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"production\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">CreateToken</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">Background</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mactemp\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>authv1<span class=\"token punctuation\">.</span>TokenRequest<span class=\"token punctuation\">{</span>\n\t\tSpec<span class=\"token punctuation\">:</span> authv1<span class=\"token punctuation\">.</span>TokenRequestSpec<span class=\"token punctuation\">{</span>\n\t\t\tAudiences<span class=\"token punctuation\">:</span>         <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\tExpirationSeconds<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>expirationSeconds<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> metav1<span class=\"token punctuation\">.</span>CreateOptions<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">.</span>Token<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div></p>\n<p>Which techinically doing the same as we did with curl and kubectl create token</p>\n<p>Now it is dotnet turn</p>\n<p><div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">k8s</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\nhttps://github.com/kubernetes-client/csharp\n\ndotnet add package KubernetesClient\n*/</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> config <span class=\"token operator\">=</span> KubernetesClientConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">IsInCluster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">?</span> KubernetesClientConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">InClusterConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">:</span> KubernetesClientConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">BuildConfigFromConfigFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Users/mac/Documents/dotfiles/kube/prod.yml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// leave empty to use default config</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Kubernetes</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// var namespaces = client.CoreV1.ListNamespace();</span>\n<span class=\"token comment\">// foreach (var ns in namespaces.Items) {</span>\n<span class=\"token comment\">//     Console.WriteLine(ns.Metadata.Name);</span>\n<span class=\"token comment\">// }</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> client<span class=\"token punctuation\">.</span>CoreV1<span class=\"token punctuation\">.</span><span class=\"token function\">CreateNamespacedServiceAccountTokenAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">k8s<span class=\"token punctuation\">.</span>Models<span class=\"token punctuation\">.</span>Authenticationv1TokenRequest</span> <span class=\"token punctuation\">{</span>\n  Spec <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">k8s<span class=\"token punctuation\">.</span>Models<span class=\"token punctuation\">.</span>V1TokenRequestSpec</span> <span class=\"token punctuation\">{</span>\n    Audiences <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"hello\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    ExpirationSeconds <span class=\"token operator\">=</span> <span class=\"token number\">600</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mactemp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"production\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">.</span>Token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></p>\n<p>So now the goal is to have something similar to Azure Identity where we have single Default Credentials method that makes everything automatically under the hood, iterating over all possible options and choosing first one, in our case there are two options - we are either inside kubernetes or outside</p>\n<h2>dotnet http client with kubernetes tokens</h2>\n<p>From <a href=\"https://stackoverflow.com/a/66448119/1168586\">this</a> answer on stackoverflow landed to article: <a href=\"https://learn.microsoft.com/en-us/aspnet/core/fundamentals/http-requests?view=aspnetcore-5.0\">Make HTTP requests using IHttpClientFactory in ASP.NET Core</a></p>\n<p>So just to recap how it may look like in dotnet (boilerplate, also I do believe there should be something that already handles all this)</p>\n<p>Here is our consumer</p>\n<p><div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Net</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Security<span class=\"token punctuation\">.</span>Claims</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Authentication<span class=\"token punctuation\">.</span>JwtBearer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> builder <span class=\"token operator\">=</span> WebApplication<span class=\"token punctuation\">.</span><span class=\"token function\">CreateBuilder</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// just for demo, listen 0.0.0.0:8000</span>\nbuilder<span class=\"token punctuation\">.</span>WebHost<span class=\"token punctuation\">.</span><span class=\"token function\">ConfigureKestrel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> serverOptions<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> serverOptions<span class=\"token punctuation\">.</span><span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span>IPAddress<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">,</span> <span class=\"token number\">8000</span><span class=\"token punctuation\">,</span> listenOptions <span class=\"token operator\">=></span> listenOptions<span class=\"token punctuation\">.</span><span class=\"token function\">UseConnectionLogging</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbuilder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token function\">AddAuthorization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddAuthentication</span><span class=\"token punctuation\">(</span>JwtBearerDefaults<span class=\"token punctuation\">.</span>AuthenticationScheme<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">AddJwtBearer</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        options<span class=\"token punctuation\">.</span>Authority <span class=\"token operator\">=</span> <span class=\"token string\">\"https://westeurope.oic.prod-aks.azure.com/695e64b5-2d13-4ea8-bb11-a6fda2d60c41/0152ceb3-63e2-4b13-9240-c0dab87fdd0f/\"</span><span class=\"token punctuation\">;</span>\n        options<span class=\"token punctuation\">.</span>Audience <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> app <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">Build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">UseAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">UseAuthorization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">MapGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ClaimsPrincipal</span> user<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>Claims<span class=\"token punctuation\">.</span><span class=\"token function\">Select</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">KeyValuePair<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div></p>\n<p>we may call it like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> http://localhost:8000/ <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Authorization: Bearer <span class=\"token variable\"><span class=\"token variable\">$(</span>kubectl <span class=\"token parameter variable\">-n</span> production create token mactemp <span class=\"token parameter variable\">--duration</span> 10m <span class=\"token parameter variable\">--audience</span> hello<span class=\"token variable\">)</span></span>\"</span></code></pre></div>\n<p>and it will respond:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"aud\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hello\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"exp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1692179705\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"iat\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1692179105\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"iss\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://westeurope.oic.prod-aks.azure.com/695e64b5-2d13-4ea8-bb11-a6fda2d60c41/0152ceb3-63e2-4b13-9240-c0dab87fdd0f/\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"kubernetes.io\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{\\\"namespace\\\":\\\"production\\\",\\\"serviceaccount\\\":{\\\"name\\\":\\\"mactemp\\\",\\\"uid\\\":\\\"5842a7ce-efec-413d-8cf9-c7d992287017\\\"}}\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nbf\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1692179105\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"system:serviceaccount:production:mactemp\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>With that in place our client will be something like this (please not it is just an boilerplate demo):</p>\n<p><div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>Http<span class=\"token punctuation\">.</span>Headers</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">k8s</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Refit</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> builder <span class=\"token operator\">=</span> WebApplication<span class=\"token punctuation\">.</span><span class=\"token function\">CreateBuilder</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// depending on where our app is running we need either cluster or local token provider</span>\nbuilder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddSingleton</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>IKubernetesTokenProvider<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=></span> KubernetesClientConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">IsInCluster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">?</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ClusterTokenProvider</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/var/run/secrets/tokens/oidc-token\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LocalTokenProvider</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"production\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mactemp\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"hello\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/Users/mac/Documents/dotfiles/kube/prod.yml\"</span> <span class=\"token comment\">/* do not pass me to use default kube config */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbuilder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddSingleton</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>BearerTokenHandler<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// register our client with handler</span>\nbuilder<span class=\"token punctuation\">.</span>Services\n  <span class=\"token punctuation\">.</span><span class=\"token function\">AddHttpClient</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo\"</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=></span> c<span class=\"token punctuation\">.</span>BaseAddress <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Uri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">AddTypedClient</span><span class=\"token punctuation\">(</span>RestService<span class=\"token punctuation\">.</span>For<span class=\"token operator\">&lt;</span>IDemoClient<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddHttpMessageHandler</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>BearerTokenHandler<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> app <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">Build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">MapGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IDemoClient</span> demo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">await</span> demo<span class=\"token punctuation\">.</span><span class=\"token function\">GetAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IKubernetesTokenProvider</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">GetTokenAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CancellationToken</span> cancellationToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// will read mounted token file</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ClusterTokenProvider</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IKubernetesTokenProvider</span></span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _tokenFilePath<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">ClusterTokenProvider</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> tokenFilePath<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    _tokenFilePath <span class=\"token operator\">=</span> tokenFilePath<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">GetTokenAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CancellationToken</span> cancellationToken<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> File<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAllTextAsync</span><span class=\"token punctuation\">(</span>_tokenFilePath<span class=\"token punctuation\">,</span> cancellationToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// for local development, will use kubernetes api to get token</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LocalTokenProvider</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IKubernetesTokenProvider</span></span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">IKubernetes</span> _kubernetes<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _namespaceName<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _serviceAccountName<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">IList<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> _audiences<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">LocalTokenProvider</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> namespaceName<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> serviceAccountName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IList<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> audiences<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">?</span></span> kubeConfigFilePath <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    _namespaceName <span class=\"token operator\">=</span> namespaceName<span class=\"token punctuation\">;</span>\n    _serviceAccountName <span class=\"token operator\">=</span> serviceAccountName<span class=\"token punctuation\">;</span>\n    _audiences <span class=\"token operator\">=</span> audiences<span class=\"token punctuation\">;</span>\n    _kubernetes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Kubernetes</span><span class=\"token punctuation\">(</span>KubernetesClientConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">BuildConfigFromConfigFile</span><span class=\"token punctuation\">(</span>kubeConfigFilePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">GetTokenAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CancellationToken</span> cancellationToken<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> _kubernetes<span class=\"token punctuation\">.</span>CoreV1<span class=\"token punctuation\">.</span><span class=\"token function\">CreateNamespacedServiceAccountTokenAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">k8s<span class=\"token punctuation\">.</span>Models<span class=\"token punctuation\">.</span>Authenticationv1TokenRequest</span> <span class=\"token punctuation\">{</span>\n      Spec <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">k8s<span class=\"token punctuation\">.</span>Models<span class=\"token punctuation\">.</span>V1TokenRequestSpec</span> <span class=\"token punctuation\">{</span>\n        Audiences <span class=\"token operator\">=</span> _audiences<span class=\"token punctuation\">,</span>\n        ExpirationSeconds <span class=\"token operator\">=</span> <span class=\"token number\">600</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> _serviceAccountName<span class=\"token punctuation\">,</span> _namespaceName<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">cancellationToken</span><span class=\"token punctuation\">:</span> cancellationToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">.</span>Token<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BearerTokenHandler</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">DelegatingHandler</span></span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">IKubernetesTokenProvider</span> _tokenProvider<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">BearerTokenHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IKubernetesTokenProvider</span> tokenProvider<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    _tokenProvider <span class=\"token operator\">=</span> tokenProvider<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>HttpResponseMessage<span class=\"token punctuation\">></span></span> <span class=\"token function\">SendAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpRequestMessage</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CancellationToken</span> cancellationToken<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>request<span class=\"token punctuation\">.</span>Headers<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Authorization\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// TODO: instead doing it each time may and should be cached till expired / or should it be done in token provider instead or should we have cached token provider</span>\n      request<span class=\"token punctuation\">.</span>Headers<span class=\"token punctuation\">.</span>Authorization <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AuthenticationHeaderValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bearer\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">await</span> _tokenProvider<span class=\"token punctuation\">.</span><span class=\"token function\">GetTokenAsync</span><span class=\"token punctuation\">(</span>cancellationToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">SendAsync</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> cancellationToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// our client interface (using refit)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IDemoClient</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Get</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n  <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>IList<span class=\"token punctuation\">&lt;</span>KeyValuePair<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">GetAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div></p>\n<p>With this in place we are making an call to our client, under the hood it does receive access token and calls our consumer with this token bypassing the response - profit</p>"}},"pageContext":{"id":"a9aee024-e061-54ee-8777-c1db195bd370"}},"staticQueryHashes":[],"slicesMap":{}}