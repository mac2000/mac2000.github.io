{"componentChunkName":"component---src-templates-note-js","path":"/minified-elastic-container","result":{"data":{"remark":{"fields":{"path":"minified-elastic-container"},"meta":{"title":""},"headings":[{"value":"minified elasticsearch container"}],"html":"<h1>minified elasticsearch container</h1>\n<p>sample script pieces to create an minified clone of production elasticsearch</p>\n<h2>step 1: export data from production elasticsearch</h2>\n<p>with help of this script we will grap 1K of documents from each index, plus their mappings and analysis and save all that to <code class=\"language-text\">data.json</code> file</p>\n<p><div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$max</span> = 1000\n<span class=\"token variable\">$endpoint</span> = <span class=\"token string\">'https://xxxxxx.es.europe-west3.gcp.cloud.es.io:9243'</span>\n<span class=\"token variable\">$username</span> = <span class=\"token string\">'elastic'</span>\n<span class=\"token variable\">$password</span> = <span class=\"token string\">'xxxxxxx'</span>\n\n<span class=\"token variable\">$headers</span> =  @<span class=\"token punctuation\">{</span>Authorization=<span class=\"token punctuation\">(</span><span class=\"token string\">\"Basic {0}\"</span> <span class=\"token operator\">-</span>f <span class=\"token punctuation\">(</span><span class=\"token namespace\">[Convert]</span>::ToBase64String<span class=\"token punctuation\">(</span><span class=\"token namespace\">[Text.Encoding]</span>::ASCII<span class=\"token punctuation\">.</span>GetBytes<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0}:{1}\"</span> <span class=\"token operator\">-</span>f <span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$aliases</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token string\">\"<span class=\"token variable\">$endpoint</span>/_cat/aliases?format=json\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span>\n<span class=\"token variable\">$indices</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token string\">\"<span class=\"token variable\">$endpoint</span>/_cat/indices?format=json\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span>\n<span class=\"token variable\">$data</span> = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token variable\">$timer</span> = <span class=\"token namespace\">[System.Diagnostics.Stopwatch]</span>::StartNew<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$index</span> in <span class=\"token variable\">$indices</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$index</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">.</span>StartsWith<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">continue</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$index</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">.</span>StartsWith<span class=\"token punctuation\">(</span><span class=\"token string\">'apm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">continue</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token variable\">$settings</span> = <span class=\"token function\">Invoke-WebRequest</span> <span class=\"token operator\">-</span>UseBasicParsing <span class=\"token string\">\"<span class=\"token variable\">$endpoint</span>/<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$index</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></span>/_settings\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty Content <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertFrom-Json</span> <span class=\"token operator\">-</span>AsHashtable\n\n    <span class=\"token variable\">$mapping</span> = <span class=\"token function\">Invoke-WebRequest</span> <span class=\"token operator\">-</span>UseBasicParsing <span class=\"token string\">\"<span class=\"token variable\">$endpoint</span>/<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$index</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></span>/_mapping\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty Content <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertFrom-Json</span> <span class=\"token operator\">-</span>AsHashtable\n\n    <span class=\"token variable\">$docs</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method POST <span class=\"token string\">\"<span class=\"token variable\">$endpoint</span>/<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$index</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></span>/_search\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">'application/json'</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n        query = @<span class=\"token punctuation\">{</span> match_all = @<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n        size = <span class=\"token variable\">$max</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty hits <span class=\"token operator\">-</span>ErrorAction SilentlyContinue <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty hits <span class=\"token operator\">-</span>ErrorAction SilentlyContinue\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-not</span> <span class=\"token variable\">$docs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$docs</span> = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token variable\">$alias</span> = <span class=\"token variable\">$aliases</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> index <span class=\"token operator\">-EQ</span> $<span class=\"token punctuation\">(</span><span class=\"token variable\">$index</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty alias\n\n    <span class=\"token variable\">$data</span> <span class=\"token operator\">+=</span> <span class=\"token namespace\">[PSCustomObject]</span>@<span class=\"token punctuation\">{</span>\n        index = <span class=\"token variable\">$index</span><span class=\"token punctuation\">.</span>index\n        mapping = <span class=\"token variable\">$mapping</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$index</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'mappings'</span><span class=\"token punctuation\">]</span>\n        docs = <span class=\"token variable\">$docs</span>\n        alias = <span class=\"token variable\">$alias</span>\n        analysis = <span class=\"token variable\">$settings</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$index</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'settings'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'analysis'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\"># Write-Progress -Activity 'Exporting' -Status $index.index -PercentComplete ( [Array]::IndexOf($indices, $index) / $indices.Count * 100 )</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$alias</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"<span class=\"token variable\">$alias</span> -> <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$index</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></span> <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$docs</span><span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span></span> <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$timer</span><span class=\"token punctuation\">.</span>Elapsed<span class=\"token punctuation\">)</span></span>\"</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$index</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></span> <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$docs</span><span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span></span> <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$timer</span><span class=\"token punctuation\">.</span>Elapsed<span class=\"token punctuation\">)</span></span>\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject <span class=\"token variable\">$data</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Out-File</span> <span class=\"token operator\">-</span>Encoding utf8 <span class=\"token string\">'data.json'</span>\n<span class=\"token variable\">$size</span> = <span class=\"token namespace\">[math]</span>::round<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span> <span class=\"token function\">Get-ChildItem</span> <span class=\"token string\">'data.json'</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty Size <span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> 1024 <span class=\"token operator\">/</span> 1024<span class=\"token punctuation\">)</span>\n<span class=\"token variable\">$count</span> = <span class=\"token variable\">$data</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty docs <span class=\"token punctuation\">|</span> <span class=\"token function\">Measure-Object</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty Count\n<span class=\"token function\">Write-Host</span> <span class=\"token string\">\"Done reading <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$count</span><span class=\"token punctuation\">)</span></span> docs from <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$indices</span><span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span></span> indices (<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$size</span><span class=\"token punctuation\">)</span></span>mb) in <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$timer</span><span class=\"token punctuation\">.</span>Elapsed<span class=\"token punctuation\">)</span></span>\"</span></code></pre></div></p>\n<h2>step 2: import data into local elastic</h2>\n<p>with this script we are starting local elastic and importing data from previous step, after that we are stoping container and grabing its data</p>\n<p><div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$endpoint</span> = <span class=\"token string\">'http://localhost:9200'</span>\n<span class=\"token variable\">$username</span> = <span class=\"token string\">'elastic'</span>\n<span class=\"token variable\">$password</span> = <span class=\"token string\">'xxxxxxx'</span>\n\n<span class=\"token variable\">$headers</span> =  @<span class=\"token punctuation\">{</span>Authorization=<span class=\"token punctuation\">(</span><span class=\"token string\">\"Basic {0}\"</span> <span class=\"token operator\">-</span>f <span class=\"token punctuation\">(</span><span class=\"token namespace\">[Convert]</span>::ToBase64String<span class=\"token punctuation\">(</span><span class=\"token namespace\">[Text.Encoding]</span>::ASCII<span class=\"token punctuation\">.</span>GetBytes<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0}:{1}\"</span> <span class=\"token operator\">-</span>f <span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$timer</span> = <span class=\"token namespace\">[System.Diagnostics.Stopwatch]</span>::StartNew<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndocker <span class=\"token function\">rm</span> <span class=\"token operator\">-</span>f elastic\ndocker run <span class=\"token operator\">-</span>d <span class=\"token operator\">--</span>name=elastic <span class=\"token operator\">-</span>e discovery<span class=\"token punctuation\">.</span><span class=\"token function\">type</span>=single-node <span class=\"token operator\">-</span>e xpack<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>enabled=true <span class=\"token operator\">-</span>e ELASTIC_PASSWORD=$<span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>p 9200:9200 docker<span class=\"token punctuation\">.</span>elastic<span class=\"token punctuation\">.</span>co/elasticsearch/elasticsearch:8<span class=\"token punctuation\">.</span>5<span class=\"token punctuation\">.</span>0\n<span class=\"token function\">Start-Sleep</span> <span class=\"token operator\">-</span>Seconds 20\n<span class=\"token variable\">$items</span> = <span class=\"token function\">Get-Content</span> <span class=\"token operator\">-</span>Encoding utf8 <span class=\"token string\">'data.json'</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertFrom-Json</span> <span class=\"token operator\">-</span>AsHashtable\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span> in <span class=\"token variable\">$items</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Write-Host</span> <span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token variable\">$body</span> = @<span class=\"token punctuation\">{</span>\n        settings = @<span class=\"token punctuation\">{</span>\n            number_of_replicas = 0\n        <span class=\"token punctuation\">}</span>\n        mappings = <span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string\">'mapping'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string\">'analysis'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$body</span><span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>analysis = <span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string\">'analysis'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Put <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$endpoint</span><span class=\"token punctuation\">)</span></span>/<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span>\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">'application/json;charset=utf-8'</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject <span class=\"token variable\">$body</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>acknowledged<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"created\"</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$res</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Out-Host</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token variable\">$ndjson</span> = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$doc</span> in <span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string\">'docs'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$ndjson</span> <span class=\"token operator\">+=</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Compress <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n            index = @<span class=\"token punctuation\">{</span>\n                _index = <span class=\"token variable\">$doc</span><span class=\"token punctuation\">.</span>_index\n                _id = <span class=\"token variable\">$doc</span><span class=\"token punctuation\">.</span>_id\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$ndjson</span> <span class=\"token operator\">+=</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Compress <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject <span class=\"token variable\">$doc</span><span class=\"token punctuation\">.</span>_source\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$ndjson</span><span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-gt</span> 0<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$endpoint</span><span class=\"token punctuation\">)</span></span>/_bulk\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">'application/x-ndjson;charset=utf-8'</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ndjson</span> <span class=\"token operator\">-join</span> <span class=\"token string\">\"`n\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"`n\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-not</span> <span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string\">'docs'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span></span> docs added\"</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$res</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Out-Host</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string\">'alias'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$res</span> = <span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$endpoint</span><span class=\"token punctuation\">)</span></span>/_aliases\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span> <span class=\"token operator\">-</span>ContentType <span class=\"token string\">'application/json'</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 100 <span class=\"token operator\">-</span>InputObject @<span class=\"token punctuation\">{</span>\n            actions = @<span class=\"token punctuation\">(</span>@<span class=\"token punctuation\">{</span>\n                add = @<span class=\"token punctuation\">{</span>\n                    index = <span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">]</span>\n                    alias = <span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string\">'alias'</span><span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">.</span>acknowledged<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">Write-Host</span> <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string\">'alias'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span> -> <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span><span class=\"token punctuation\">[</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span>\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$endpoint</span><span class=\"token punctuation\">)</span></span>/_flush\"</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$headers</span>\n<span class=\"token function\">Start-Sleep</span> <span class=\"token operator\">-</span>Seconds 10\n\ndocker stop elastic\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Test-Path</span> <span class=\"token keyword\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Remove-Item</span> <span class=\"token keyword\">data</span> <span class=\"token operator\">-</span>Force <span class=\"token operator\">-</span>Recurse\n<span class=\"token punctuation\">}</span>\ndocker <span class=\"token function\">cp</span> elastic:<span class=\"token operator\">/</span>usr/share/elasticsearch/<span class=\"token keyword\">data</span> <span class=\"token punctuation\">.</span>\ndocker <span class=\"token function\">rm</span> elastic\n\n<span class=\"token variable\">$size</span> = <span class=\"token namespace\">[math]</span>::Round<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">Get-ChildItem</span> <span class=\"token keyword\">data</span> <span class=\"token operator\">-</span>Recurse <span class=\"token operator\">-</span>ErrorAction SilentlyContinue <span class=\"token punctuation\">|</span> <span class=\"token function\">Measure-Object</span> <span class=\"token operator\">-</span>Property Size <span class=\"token operator\">-</span>Sum <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>ExpandProperty Sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> 1024 <span class=\"token operator\">/</span> 1024<span class=\"token punctuation\">)</span>\n<span class=\"token function\">Write-Host</span> <span class=\"token string\">\"Done restoring <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$items</span><span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span></span> indices (<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$size</span><span class=\"token punctuation\">)</span></span>mb) in <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$timer</span><span class=\"token punctuation\">.</span>Elapsed<span class=\"token punctuation\">)</span></span>\"</span></code></pre></div></p>\n<h2>step 3: create container</h2>\n<p>now we are going to build our prepared image with help of following docker file</p>\n<p><div class=\"gatsby-highlight\" data-language=\"none\"><pre class=\"language-none\"><code class=\"language-none\">FROM docker.elastic.co/elasticsearch/elasticsearch:8.5.0\n\nENV discovery.type=single-node\nENV xpack.security.enabled=true\nENV ELASTIC_PASSWORD=xxxxxxx\n\nCOPY --chown=elasticsearch ./data/ /usr/share/elasticsearch/data/\n\nEXPOSE 9200</code></pre></div></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> elastic <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">9200</span>:9200 <span class=\"token parameter variable\">--name</span><span class=\"token operator\">=</span>elastic elastic\n<span class=\"token function\">sleep</span> <span class=\"token number\">20</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-u</span> elastic:xxxxxxx http://localhost:9200/_cat/indices\n<span class=\"token function\">docker</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> elastic\n\n<span class=\"token function\">docker</span> tag elastic gcr.io/contoso/minielastic\n<span class=\"token function\">docker</span> push gcr.io/contoso/minielastic</code></pre></div>\n<p>and from now on, we may use this image for local development without being dependant on internet</p>"}},"pageContext":{"id":"31041958-fa6d-5e8e-aea0-bc7fab8633b9"}},"staticQueryHashes":[]}