{"componentChunkName":"component---src-templates-note-js","path":"/php-stemmer-morphy","result":{"data":{"remark":{"fields":{"path":"php-stemmer-morphy"},"meta":{"title":""},"headings":[{"value":"PHP Stemming with PHP Morphy"}],"html":"<h1>PHP Stemming with PHP Morphy</h1>\n<p>Here is short note how <a href=\"http://phpmorphy.sourceforge.net/\">phpmorphy</a> can be used in composer based projects to get base worm of word (en, ru)</p>\n<p><strong>composer.json</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"repositories\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"package\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"package\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"phpmorphy/ru\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.3.7\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dist\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://sourceforge.net/projects/phpmorphy/files/phpmorphy-dictionaries/0.3.x/ru_RU/morphy-0.3.x-ru_RU-nojo-utf8.zip/download\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"zip\"</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"package\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"package\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"phpmorphy/en\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.3.7\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dist\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://sourceforge.net/projects/phpmorphy/files/phpmorphy-dictionaries/0.3.x/en_EN/morphy-0.3.x-en_EN-windows-1250.zip/download\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"zip\"</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"package\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"package\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"phpmorphy/phpmorphy\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.3.7\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"dist\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://sourceforge.net/projects/phpmorphy/files/phpmorphy/0.3.7/phpmorphy-0.3.7.zip/download\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"zip\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"require\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"phpmorphy/ru\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"phpmorphy/en\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"x\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"autoload\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"files\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/common.php\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"require\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"phpmorphy/phpmorphy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.3.x\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>play.php</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">require_once</span> <span class=\"token string single-quoted-string\">'vendor/autoload.php'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Morphy</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n        * @var phpMorphy\n        */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$enMorphy</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n        * @var phpMorphy\n        */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$ruMorphy</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$storage</span> <span class=\"token operator\">=</span> <span class=\"token constant\">PHPMORPHY_STORAGE_FILE</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">ruMorphy</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">phpMorphy</span><span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">phpMorphy_FilesBundle</span><span class=\"token punctuation\">(</span><span class=\"token function\">realpath</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PHPMORPHY_DIR</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'/../../ru/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'rus'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'storage'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$storage</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">enMorphy</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">phpMorphy</span><span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">phpMorphy_FilesBundle</span><span class=\"token punctuation\">(</span><span class=\"token function\">realpath</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PHPMORPHY_DIR</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'/../../en/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'eng'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'storage'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$storage</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n        * @param string $word to get base from\n        * @return string\n        */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">base</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$word</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$sanitizedWord</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">sanitize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$word</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">getMorphy</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sanitizedWord</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">getBaseForm</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sanitizedWord</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$result</span> <span class=\"token operator\">?</span> <span class=\"token function\">mb_strtolower</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_shift</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'UTF-8'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n        * @param string $word to sanitize\n        * @return string\n        */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">sanitize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$word</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">mb_strtoupper</span><span class=\"token punctuation\">(</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$word</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'UTF-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n        * @param string $word\n        * @return phpMorphy\n        */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getMorphy</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$word</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">isRussian</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$word</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">ruMorphy</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">enMorphy</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n        * @param string $word to check\n        * @return bool\n        */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">isRussian</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$word</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[А-Я]/u'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$word</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token constant boolean\">true</span> <span class=\"token punctuation\">:</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token variable\">$morphy</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Morphy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$morphy</span><span class=\"token operator\">-></span><span class=\"token function\">base</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Киеве'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// киев</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$morphy</span><span class=\"token operator\">-></span><span class=\"token function\">base</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Cities'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// city</span></span></code></pre></div>\n<p>Pretty of php morphy that there is no external dependencies, and it can be executed even on shared hostings.</p>\n<p>For more complex projects probably ElasticSearch will be better solution, it can not only stem but also tokenize text and do many more.</p>\n<p>Also there is NLTK project in python which can do all this.</p>"}},"pageContext":{"id":"bd5b2aa2-a85d-5426-9d2b-80c44cb080a0"}},"staticQueryHashes":[]}