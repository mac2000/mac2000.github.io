{"componentChunkName":"component---src-templates-note-js","path":"/azure-search-cyrillic","result":{"data":{"remark":{"fields":{"path":"azure-search-cyrillic"},"meta":{"title":""},"headings":[{"value":"Azure Search Cyrillic"}],"html":"<h1>Azure Search Cyrillic</h1>\n<p>Azure Search does not work pretty well at this moment with stemmers also there is no ngram etc. But there is still a way to make this work</p>\n<p>Here is my experiment, suppose we have \"Vacancies\" index with some job offers in Russian, we want to search over them</p>\n<p>All requests will be made with Powershell for simplicity</p>\n<p>To reproduce them you gonna need your API key</p>\n<p>Each vacancy in index has just one field \"Position\" against which search will be performed</p>\n<p><strong>Note:</strong> For powershell to produce right json do not forget to add something like <code class=\"language-text\">-Depth 10</code> to <code class=\"language-text\">ConvertTo-Json</code> calls</p>\n<p><strong>Note:</strong> For things to work propertly do not forget to convert your data into UTF-8 with <code class=\"language-text\">[System.Text.Encoding]::UTf8.GetBytes(...)</code></p>\n<p><strong>Setting up</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$Headers</span> = @<span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">'Content-Type'</span> = <span class=\"token string\">'application/json; charset=utf-8'</span>\n\t<span class=\"token string\">'api-key'</span> = <span class=\"token string\">'********************************'</span> <span class=\"token comment\"># Provide Your API key</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Delete <span class=\"token operator\">-</span>Uri <span class=\"token string\">'https://testrus.search.windows.net/indexes/vacancies?api-version=2015-02-28-Preview'</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$Headers</span></code></pre></div>\n<h2>Search with default analyzers</h2>\n<p><strong>Create index</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$IndexDefinition</span> = @<span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">'name'</span> = <span class=\"token string\">'vacancies'</span>\n\t<span class=\"token string\">'fields'</span> = @<span class=\"token punctuation\">(</span>\n\t\t@<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'name'</span> = <span class=\"token string\">'VacancyId'</span>\n\t\t\t<span class=\"token string\">'type'</span> = <span class=\"token string\">'Edm.String'</span>\n\t\t\t<span class=\"token string\">'searchable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'filterable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'sortable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'facetable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'key'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'retrievable'</span> = <span class=\"token boolean\">$True</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t@<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'name'</span> = <span class=\"token string\">'Position'</span>\n\t\t\t<span class=\"token string\">'type'</span> = <span class=\"token string\">'Edm.String'</span>\n\t\t\t<span class=\"token string\">'searchable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'filterable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'sortable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'facetable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'key'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'retrievable'</span> = <span class=\"token boolean\">$True</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">'https://testrus.search.windows.net/indexes?api-version=2015-02-28-Preview'</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$Headers</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token variable\">$IndexDefinition</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 10<span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>Insert some data</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$Documents</span> = @<span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">'value'</span> = @<span class=\"token punctuation\">(</span>\n\t\t@<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'VacancyId'</span> = <span class=\"token string\">'1'</span>\n\t\t\t<span class=\"token string\">'Position'</span> = <span class=\"token string\">'Менеджер по продажам в Киеве'</span> <span class=\"token comment\"># Translation: Sales manager in Kiev</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t@<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'VacancyId'</span> = <span class=\"token string\">'2'</span>\n\t\t\t<span class=\"token string\">'Position'</span> = <span class=\"token string\">'1-С Программист Киев'</span> <span class=\"token comment\"># Translation: 1-C programmer Kiev</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t@<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'VacancyId'</span> = <span class=\"token string\">'3'</span>\n\t\t\t<span class=\"token string\">'Position'</span> = <span class=\"token string\">'1-С Программист во Львове'</span> <span class=\"token comment\"># Translation: 1-C programmer Lviv</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t@<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'VacancyId'</span> = <span class=\"token string\">'4'</span>\n\t\t\t<span class=\"token string\">'Position'</span> = <span class=\"token string\">'Acme ищет менеджера по продажам'</span> <span class=\"token comment\"># Translation: Acme search sales manager</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">'https://testrus.search.windows.net/indexes/vacancies/docs/index?api-version=2015-02-28-Preview'</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$Headers</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token namespace\">[System.Text.Encoding]</span>::UTf8<span class=\"token punctuation\">.</span>GetBytes<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$Documents</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 10<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Notice that first two vacancies has <code class=\"language-text\">Киев</code> word at the end (It is capital city of Ukraine) and notice that first vacancy has additional letter <code class=\"language-text\">е</code> at the end</p>\n<p>So, what I want is to perform search over <code class=\"language-text\">киеве</code> and get two first vacancies (search request and index should be stemmed)</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Get <span class=\"token operator\">-</span>Uri <span class=\"token string\">'https://testrus.search.windows.net/indexes/vacancies/docs?api-version=2015-02-28-Preview&amp;search=киеве'</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$Headers</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">select</span> <span class=\"token operator\">-</span>ExpandProperty value</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">@search.score VacancyId Position\n------------- --------- --------\n\t0,74075186 1         Менеджер по продажам в Киеве</code></pre></div>\n<p>But there is only one :(</p>\n<h2>Azure search and Apache Lucene?</h2>\n<p>Apache has made greate product called <code class=\"language-text\">Apache Lucene</code> which is used by many projects (eg: Apache Solr, ElasticSearch etc) it has freaking amount of features and analyzers</p>\n<p>Azure Search provides us ability to use preconfigured Lucene analyzers</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$IndexDefinition</span> = @<span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">'name'</span> = <span class=\"token string\">'vacancies'</span>\n\t<span class=\"token string\">'fields'</span> = @<span class=\"token punctuation\">(</span>\n\t\t@<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'name'</span> = <span class=\"token string\">'VacancyId'</span>\n\t\t\t<span class=\"token string\">'type'</span> = <span class=\"token string\">'Edm.String'</span>\n\t\t\t<span class=\"token string\">'searchable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'filterable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'sortable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'facetable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'key'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'retrievable'</span> = <span class=\"token boolean\">$True</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t@<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'name'</span> = <span class=\"token string\">'Position'</span>\n\t\t\t<span class=\"token string\">'type'</span> = <span class=\"token string\">'Edm.String'</span>\n\t\t\t<span class=\"token string\">'searchable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'filterable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'sortable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'facetable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'key'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'retrievable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'analyzer'</span> = <span class=\"token string\">'ru.lucene'</span> <span class=\"token comment\"># &lt;--- Here is tricky part</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">'https://testrus.search.windows.net/indexes?api-version=2015-02-28-Preview'</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$Headers</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token variable\">$IndexDefinition</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 10<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Do not forget to delete index first, otherwise you will get error <code class=\"language-text\">Cannot create index 'vacancies' because it already exists.</code></p>\n<p>Now we can insert data absolutely like before and try run our search again</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Get <span class=\"token operator\">-</span>Uri <span class=\"token string\">'https://testrus.search.windows.net/indexes/vacancies/docs?api-version=2015-02-28-Preview&amp;search=киеве'</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$Headers</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">select</span> <span class=\"token operator\">-</span>ExpandProperty value <span class=\"token punctuation\">|</span> <span class=\"token function\">ft</span> <span class=\"token operator\">-</span>AutoSize</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">@search.score VacancyId Position\n------------- --------- --------\n\t0,8465736 1         Менеджер по продажам в Киеве</code></pre></div>\n<p>So here is funny stuff, from one side Azure giving us serious analyzer tool, but only with preconfigured options which is not working :)</p>\n<h2>Microsoft Natural Language Processing</h2>\n<p>Thank to gods Azure provide to us another probably even cooler way to analyze our data with their NLP (which is by the way used in Office and Bing)</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$IndexDefinition</span> = @<span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">'name'</span> = <span class=\"token string\">'vacancies'</span>\n\t<span class=\"token string\">'fields'</span> = @<span class=\"token punctuation\">(</span>\n\t\t@<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'name'</span> = <span class=\"token string\">'VacancyId'</span>\n\t\t\t<span class=\"token string\">'type'</span> = <span class=\"token string\">'Edm.String'</span>\n\t\t\t<span class=\"token string\">'searchable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'filterable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'sortable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'facetable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'key'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'retrievable'</span> = <span class=\"token boolean\">$True</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t@<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'name'</span> = <span class=\"token string\">'Position'</span>\n\t\t\t<span class=\"token string\">'type'</span> = <span class=\"token string\">'Edm.String'</span>\n\t\t\t<span class=\"token string\">'searchable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'filterable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'sortable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'facetable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'key'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'retrievable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'analyzer'</span> = <span class=\"token string\">'ru.microsoft'</span> <span class=\"token comment\"># &lt;--- Microsoft NLP can stemm russian words</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">'https://testrus.search.windows.net/indexes?api-version=2015-02-28-Preview'</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$Headers</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token variable\">$IndexDefinition</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 10<span class=\"token punctuation\">)</span></code></pre></div>\n<p>As usual do not forget delete old index first, and now magic happens:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Get <span class=\"token operator\">-</span>Uri <span class=\"token string\">'https://testrus.search.windows.net/indexes/vacancies/docs?api-version=2015-02-28-Preview&amp;search=киеве'</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$Headers</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">select</span> <span class=\"token operator\">-</span>ExpandProperty value <span class=\"token punctuation\">|</span> <span class=\"token function\">ft</span> <span class=\"token operator\">-</span>AutoSize</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">@search.score VacancyId Position\n------------- --------- --------\n\t0,30007723 1         Менеджер по продажам в Киеве\n\t0,30007723 2         1-С Программист Киев</code></pre></div>\n<p>At last, we got our two documents and all seems to work right</p>\n<p><strong>Tip:</strong> Do not forget that you can have in our index <code class=\"language-text\">PositionRaw</code>, <code class=\"language-text\">PositionLucene</code>, 'PositionMicrosoft` fields with different analyzers to perform queries against all analyzers. Unfortunatelly it is not so elegant like in ElasticSearch, but come on Azure Search released few days ago :)</p>\n<h2>Azure Search Suggesters and Analyzers</h2>\n<p>There is always something wrong when all seems to be good :)</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$IndexDefinition</span> = @<span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">'name'</span> = <span class=\"token string\">'vacancies'</span>\n\t<span class=\"token string\">'fields'</span> = @<span class=\"token punctuation\">(</span>\n\t\t@<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'name'</span> = <span class=\"token string\">'VacancyId'</span>\n\t\t\t<span class=\"token string\">'type'</span> = <span class=\"token string\">'Edm.String'</span>\n\t\t\t<span class=\"token string\">'searchable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'filterable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'sortable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'facetable'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'key'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'retrievable'</span> = <span class=\"token boolean\">$True</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t@<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'name'</span> = <span class=\"token string\">'Position'</span>\n\t\t\t<span class=\"token string\">'type'</span> = <span class=\"token string\">'Edm.String'</span>\n\t\t\t<span class=\"token string\">'searchable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'filterable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'sortable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'facetable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'key'</span> = <span class=\"token boolean\">$False</span>\n\t\t\t<span class=\"token string\">'retrievable'</span> = <span class=\"token boolean\">$True</span>\n\t\t\t<span class=\"token string\">'analyzer'</span> = <span class=\"token string\">'ru.microsoft'</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">)</span>\n\t<span class=\"token string\">'suggesters'</span> = @<span class=\"token punctuation\">(</span>\n\t\t@<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token string\">'name'</span> = <span class=\"token string\">'sg'</span>\n\t\t\t<span class=\"token string\">'searchMode'</span> = <span class=\"token string\">'analyzingInfixMatching'</span>\n\t\t\t<span class=\"token string\">'sourceFields'</span> = @<span class=\"token punctuation\">(</span><span class=\"token string\">'Position'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">Invoke-RestMethod</span> <span class=\"token operator\">-</span>Method Post <span class=\"token operator\">-</span>Uri <span class=\"token string\">'https://testrus.search.windows.net/indexes?api-version=2015-02-28-Preview'</span> <span class=\"token operator\">-</span>Headers <span class=\"token variable\">$Headers</span> <span class=\"token operator\">-</span>Body <span class=\"token punctuation\">(</span><span class=\"token variable\">$IndexDefinition</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">ConvertTo-Json</span> <span class=\"token operator\">-</span>Depth 10<span class=\"token punctuation\">)</span></code></pre></div>\n<p>If you will try create index with suggesters over fields that use <strong>any</strong> analyzer you will get <code class=\"language-text\">Field 'Position' in suggester 'sg' uses a custom analyzer, suggesters are not currently supported with custom analyzers.</code></p>\n<p>Hope to see this feature somewhere in the future</p>"}},"pageContext":{"id":"d455051b-3d86-5f5d-b0d1-70a5b39177cb"}},"staticQueryHashes":[]}