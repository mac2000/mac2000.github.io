{"componentChunkName":"component---src-templates-note-js","path":"/net-sortedset/","result":{"data":{"remark":{"fields":{"path":"net-sortedset"},"meta":{"title":""},"headings":[{"value":".Net SortedSet"}],"html":"<h1>.Net SortedSet</h1>\n<p><a href=\"http://habrahabr.ru/blogs/net/102697/#habracut\">Новая коллекция SortedSet в .Net 4.0</a></p>\n<p><a href=\"http://www.codeproject.com/KB/cs/SortedSet_T__Collection.aspx\">http://www.codeproject.com/KB/cs/SortedSet_T__Collection.aspx</a></p>\n<h2>User type example</h2>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Text</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">SortedSetTest</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IComparable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> Id<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> Name<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            id <span class=\"token operator\">=</span> Id<span class=\"token punctuation\">;</span>\n            name <span class=\"token operator\">=</span> Name<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">CompareTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> other<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">&lt;</span> other<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">></span> other<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> u1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> u2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> u3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> u4 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> u5 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> u6 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user6\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> elements1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SortedSet<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>u1<span class=\"token punctuation\">,</span>u2<span class=\"token punctuation\">,</span>u1<span class=\"token punctuation\">,</span>u3<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> elements2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SortedSet<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>u1<span class=\"token punctuation\">,</span>u3<span class=\"token punctuation\">,</span>u4<span class=\"token punctuation\">,</span>u1<span class=\"token punctuation\">,</span>u3<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> union <span class=\"token operator\">=</span> elements1<span class=\"token punctuation\">.</span><span class=\"token function\">Union</span><span class=\"token punctuation\">(</span>elements2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> u <span class=\"token keyword\">in</span> union<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0,-4} {1}\"</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}},"pageContext":{"id":"e3a9ef2a-a677-5dde-a587-6e66342cd329"}},"staticQueryHashes":[],"slicesMap":{}}