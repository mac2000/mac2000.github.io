{"componentChunkName":"component---src-templates-note-js","path":"/asp-net-mssql-database-crud-examples","result":{"data":{"remark":{"fields":{"path":"asp-net-mssql-database-crud-examples"},"meta":{"title":""},"headings":[{"value":"ASP.Net MsSQL DataBase CRUD examples"}],"html":"<h1>ASP.Net MsSQL DataBase CRUD examples</h1>\n<p>Примеры crud для MsSQL из asp.net</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\">SqlConnection</span> con <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlConnection</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>Configuration<span class=\"token punctuation\">.</span>ConfigurationManager<span class=\"token punctuation\">.</span>ConnectionStrings<span class=\"token punctuation\">[</span><span class=\"token string\">\"RabotaUA\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncon<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//simplest</span>\n<span class=\"token comment\">//SqlCommand q = new SqlCommand(\"SELECT * FROM ChannelEvents\", con);</span>\n<span class=\"token comment\">//SqlDataReader r = q.ExecuteReader();</span>\n\n<span class=\"token comment\">//params</span>\n<span class=\"token class-name\">SqlCommand</span> q <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM ChannelEvents WHERE EventId = @EventId\"</span><span class=\"token punctuation\">,</span> con<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">SqlParameter</span> param  <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SqlParameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nparam<span class=\"token punctuation\">.</span>ParameterName <span class=\"token operator\">=</span> <span class=\"token string\">\"@EventId\"</span><span class=\"token punctuation\">;</span>\nparam<span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nq<span class=\"token punctuation\">.</span>Parameters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">SqlDataReader</span> r <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//for update, delete</span>\n<span class=\"token comment\">//SqlCommand sqlComm = new SqlCommand(\"DELETE FROM users WHERE userid=1\", sqlConn);</span>\n<span class=\"token comment\">//sqlComm.ExecuteNonQuery();</span>\n\n<span class=\"token comment\">//return first value from first column</span>\n<span class=\"token comment\">//SqlCommand sqlComm = new SqlCommand(\"SELECT COUNT(*) FROM users\", sqlConn);</span>\n<span class=\"token comment\">//int userCount = (int)sqlComm.ExecuteScalar();</span>\n\n<span class=\"token class-name\">StringBuilder</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> r<span class=\"token punctuation\">.</span>FieldCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        sb<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sb<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;br />\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    sb<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;hr />\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nr<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncon<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> sb<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>"}},"pageContext":{"id":"a1760bb7-21fc-5aa9-9fe8-f749d902b615"}},"staticQueryHashes":[]}