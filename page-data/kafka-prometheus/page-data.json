{"componentChunkName":"component---src-templates-note-js","path":"/kafka-prometheus/","result":{"data":{"remark":{"fields":{"path":"kafka-prometheus"},"meta":{"title":""},"headings":[{"value":"Kafka Prometheus Exporter"}],"html":"<h1>Kafka Prometheus Exporter</h1>\n<p>Kafka exporter for prometheus configuration example</p>\n<p>How it will works:</p>\n<p>In Java there is a way to pass so called javaagent which can modify bytecode before it will be ran by JVM</p>\n<p>Really good explanation is available in this <a href=\"https://www.youtube.com/watch?v=BjyI93c8ltA&#x26;t=740s\">video</a> starting from 12:20</p>\n<p>Confluent already <a href=\"https://github.com/prometheus/jmx_exporter\">created</a> and <a href=\"https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/\">published</a> jmx exporter we need</p>\n<p>Also there are <a href=\"https://github.com/confluentinc/jmx-monitoring-stacks/tree/6.1.0-post/shared-assets/jmx-exporter\">configuration examples</a> that will be used as a starting point</p>\n<h2>Kafka</h2>\n<p>Before anything else lets setup basic kafka (more datailed description can be found <a href=\"/kafka-sasl-ssl\">here</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /opt/confluent-community-7.0.1.tar.gz https://packages.confluent.io/archive/7.0/confluent-community-7.0.1.tar.gz\n<span class=\"token function\">sudo</span> <span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xzf</span> /opt/confluent-community-7.0.1.tar.gz <span class=\"token parameter variable\">-C</span> /opt\n<span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> /opt/confluent-community-7.0.1.tar.gz\n<span class=\"token function\">sudo</span> <span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /opt/confluent-7.0.1 /opt/confluent</code></pre></div>\n<h2>JMX Exporter for Kafka</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> /opt/confluent-7.0.1/share/java/prometheus\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /opt/confluent-7.0.1/share/java/prometheus/jmx_prometheus_javaagent-0.16.1.jar https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.16.1/jmx_prometheus_javaagent-0.16.1.jar</code></pre></div>\n<p>configs</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> /etc/confluent\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/confluent/zookeeper.yml https://raw.githubusercontent.com/confluentinc/jmx-monitoring-stacks/6.1.0-post/shared-assets/jmx-exporter/zookeeper.yml\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/confluent/kafka_broker.yml https://raw.githubusercontent.com/confluentinc/jmx-monitoring-stacks/6.1.0-post/shared-assets/jmx-exporter/kafka_broker.yml\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/confluent/confluent_schemaregistry.yml https://raw.githubusercontent.com/confluentinc/jmx-monitoring-stacks/6.1.0-post/shared-assets/jmx-exporter/confluent_schemaregistry.yml\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/confluent/confluent_rest.yml https://raw.githubusercontent.com/confluentinc/jmx-monitoring-stacks/6.1.0-post/shared-assets/jmx-exporter/confluent_rest.yml</code></pre></div>\n<p>start zookeeper</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">EXTRA_ARGS</span><span class=\"token operator\">=</span>-javaagent:/opt/confluent-7.0.1/share/java/prometheus/jmx_prometheus_javaagent-0.16.1.jar<span class=\"token operator\">=</span><span class=\"token number\">9101</span>:/etc/confluent/zookeeper.yml /opt/confluent-7.0.1/bin/zookeeper-server-start /opt/confluent-7.0.1/etc/kafka/zookeeper.properties</code></pre></div>\n<p>start kafka</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">EXTRA_ARGS</span><span class=\"token operator\">=</span>-javaagent:/opt/confluent-7.0.1/share/java/prometheus/jmx_prometheus_javaagent-0.16.1.jar<span class=\"token operator\">=</span><span class=\"token number\">9102</span>:/etc/confluent/kafka_broker.yml /opt/confluent-7.0.1/bin/kafka-server-start /opt/confluent-7.0.1/etc/kafka/server.properties</code></pre></div>\n<p>start schema registry</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">EXTRA_ARGS</span><span class=\"token operator\">=</span>-javaagent:/opt/confluent-7.0.1/share/java/prometheus/jmx_prometheus_javaagent-0.16.1.jar<span class=\"token operator\">=</span><span class=\"token number\">9103</span>:/etc/confluent/confluent_rest.yml /opt/confluent-7.0.1/bin/schema-registry-start /opt/confluent-7.0.1/etc/schema-registry/schema-registry.properties</code></pre></div>\n<p>start rest proxy</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">KAFKAREST_OPTS</span><span class=\"token operator\">=</span>-javaagent:/opt/confluent-7.0.1/share/java/prometheus/jmx_prometheus_javaagent-0.16.1.jar<span class=\"token operator\">=</span><span class=\"token number\">9104</span>:/etc/confluent/confluent_schemaregistry.yml /opt/confluent-7.0.1/bin/kafka-rest-start /opt/confluent-7.0.1/etc/kafka-rest/kafka-rest.properties</code></pre></div>\n<p>for metrics to appear we need to wait few minutes, meanwhile lets do some stuff:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># create topic</span>\n/opt/confluent-7.0.1/bin/kafka-topics --bootstrap-server localhost:9092 <span class=\"token parameter variable\">--partitions</span> <span class=\"token number\">1</span> <span class=\"token parameter variable\">--create</span> <span class=\"token parameter variable\">--topic</span> demo\n/opt/confluent-7.0.1/bin/kafka-topics --bootstrap-server localhost:9092 <span class=\"token parameter variable\">--list</span>\n\n<span class=\"token comment\"># optionaly start consumer</span>\n/opt/confluent-7.0.1/bin/kafka-console-consumer --bootstrap-server localhost:9092 <span class=\"token parameter variable\">--topic</span> demo\n\n<span class=\"token comment\"># start producer and send few messages</span>\n/opt/confluent-7.0.1/bin/kafka-console-producer --bootstrap-server localhost:9092 <span class=\"token parameter variable\">--topic</span> demo</code></pre></div>\n<p>and if everything fine we should get our metrics:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> http://localhost:9101/metrics\n<span class=\"token function\">curl</span> http://localhost:9102/metrics</code></pre></div>\n<p>in my case it is single node dev environment, so from one hand I wish not to expose cluster metrics, from another go thrue <a href=\"https://github.com/confluentinc/jmx-monitoring-stacks/tree/6.1.0-post/jmxexporter-prometheus-grafana/assets/grafana/provisioning/dashboards\">grafana dashboards</a> to see what is collected and here are my minimal valuable configs</p>\n<h2>Zookeeper</h2>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">lowercaseOutputName</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">lowercaseOutputLabelNames</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">pattern</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"org.apache.ZooKeeperService&lt;name0=(.+), name1=InMemoryDataTree>&lt;>(WatchCount|NodeCount): (\\\\d+)\"</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> zookeeper_inmemorydatatree_$2\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> GAUGE\n    <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">server_name</span><span class=\"token punctuation\">:</span> $1\n      <span class=\"token key atrule\">server_id</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">pattern</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'org.apache.ZooKeeperService&lt;name0=(.+)>&lt;>(.+): (.+)'</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> zookeeper_$2\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> GAUGE</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token comment\"># 106mb ram usage</span>\nprocess_resident_memory_bytes 1.21942016E8\n\n<span class=\"token comment\"># CPU Usage</span>\nprocess_cpu_seconds_total 2.99\n<span class=\"token comment\"># irate(process_cpu_seconds_total{job=\\\"zookeeper\\\"}[5m])*100</span>\n\n<span class=\"token comment\"># JVM Memory Used - 34mb</span>\n<span class=\"token key attr-name\">jvm_memory_bytes_used{area</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"heap\",} 2.9829424E7</span>\n<span class=\"token key attr-name\">jvm_memory_bytes_used{area</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"nonheap\",} 2.0637672E7</span>\n<span class=\"token comment\">; sum without(area)(jvm_memory_bytes_used{job=\\\"zookeeper\\\"})</span>\n<span class=\"token comment\"># JVM Memory Max - 512mb - seems like xmx</span>\n<span class=\"token key attr-name\">jvm_memory_bytes_max{area</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"heap\",} 5.36870912E8</span>\n<span class=\"token comment\">; jvm_memory_bytes_max{job=\\\"zookeeper\\\",area=\\\"heap\\\"}</span>\n\n<span class=\"token comment\"># Time spent in GC</span>\n<span class=\"token key attr-name\">jvm_gc_collection_seconds_count{gc</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"G1 Young Generation\",} 2.0</span>\n<span class=\"token key attr-name\">jvm_gc_collection_seconds_sum{gc</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"G1 Young Generation\",} 0.018</span>\n<span class=\"token key attr-name\">jvm_gc_collection_seconds_count{gc</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"G1 Old Generation\",} 0.0</span>\n<span class=\"token key attr-name\">jvm_gc_collection_seconds_sum{gc</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"G1 Old Generation\",} 0.0</span>\n<span class=\"token comment\">; sum without(gc)(rate(jvm_gc_collection_seconds_sum{job=\\\"zookeeper\\\"}[5m]))</span>\n\n<span class=\"token comment\"># For clusters: Quorum Size of Zookeeper ensemble</span>\n<span class=\"token comment\"># count(zookeeper_status_quorumsize{job=\\\"zookeeper\\\"})</span>\n\n<span class=\"token comment\"># Number of Alive Connections</span>\nzookeeper_numaliveconnections 1.0\n<span class=\"token comment\">; sum(zookeeper_numaliveconnections{job=\\\"zookeeper\\\"})</span>\n\n<span class=\"token comment\"># Number of queued requests in the server. This goes up when the server receives more requests than it can process</span>\nzookeeper_outstandingrequests 0.0\n<span class=\"token comment\">; zookeeper_outstandingrequests{job=\\\"zookeeper\\\"}</span>\n\n<span class=\"token comment\"># Number of ZNodes</span>\n<span class=\"token key attr-name\">zookeeper_inmemorydatatree_nodecount{server_id</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"1\",server_name=\"StandaloneServer_port2181\",} 134.0</span>\n<span class=\"token comment\">; avg(zookeeper_inmemorydatatree_nodecount{job=\\\"zookeeper\\\"})</span>\n\n<span class=\"token comment\"># Number of Watchers</span>\n<span class=\"token key attr-name\">zookeeper_inmemorydatatree_watchcount{server_id</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"1\",server_name=\"StandaloneServer_port2181\",} 0.0</span>\n<span class=\"token comment\">; sum(zookeeper_inmemorydatatree_watchcount{job=\\\"zookeeper\\\"})</span>\n\n<span class=\"token comment\"># millisecond Amount of time it takes for the server to respond to a client request</span>\nzookeeper_ticktime 3000.0\nzookeeper_minrequestlatency 0.0\n<span class=\"token comment\">; zookeeper_minrequestlatency{job=\\\"zookeeper\\\"} * zookeeper_ticktime</span>\n<span class=\"token comment\">; zookeeper_avgrequestlatency{job=\\\"zookeeper\\\"} * zookeeper_ticktime</span>\n<span class=\"token comment\">; zookeeper_maxrequestlatency{job=\\\"zookeeper\\\"} * zookeeper_ticktime</span>\n\n<span class=\"token comment\"># bytes probably</span>\nzookeeper_datadirsize 2.01350043E8\nzookeeper_logdirsize  2.01350043E8</code></pre></div>\n<h2>Kafka</h2>\n<p>TODO: config and number of metrics are huge, need more time to figure out what is needed and what isnt</p>\n<p>This one from kafka cluster dashboard</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token comment\"># Number of active controllers in the cluster</span>\nkafka_controller_kafkacontroller_activecontrollercount 1.0\n<span class=\"token comment\"># stat: kafka_controller_kafkacontroller_activecontrollercount{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\"} > 0</span>\n\n<span class=\"token comment\"># Online Partitions count</span>\nkafka_server_replicamanager_partitioncount 51.0\n<span class=\"token comment\"># stat: sum(kafka_server_replicamanager_partitioncount{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\"})</span>\n\n<span class=\"token comment\"># Broker network throughput</span>\nkafka_server_brokertopicmetrics_bytesinpersec 2002.0\n<span class=\"token key attr-name\">kafka_server_brokertopicmetrics_bytesinpersec{topic</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"demo\",} 2002.0</span>\nkafka_server_brokertopicmetrics_bytesoutpersec 0.0\n<span class=\"token comment\"># sum(rate(kafka_server_brokertopicmetrics_bytesinpersec{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\",topic!=\\\"\\\"}[5m]))</span>\n<span class=\"token comment\"># sum(rate(kafka_server_brokertopicmetrics_bytesoutpersec{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\",topic!=\\\"\\\"}[5m]))</span>\n\n<span class=\"token comment\"># Offline Partitions Count</span>\nkafka_controller_kafkacontroller_offlinepartitionscount 0.0\n<span class=\"token comment\"># sum(kafka_controller_kafkacontroller_offlinepartitionscount{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\"})</span>\n\n<span class=\"token comment\"># Produce request rate</span>\n<span class=\"token key attr-name\">kafka_network_requestmetrics_requestspersec{request</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"Produce\",version=\"9\",} 23.0</span>\n<span class=\"token comment\"># sum(rate(kafka_network_requestmetrics_requestspersec{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\",request=\\\"Produce\\\"}[5m]))</span>\n\n<span class=\"token comment\"># Consumer Fetch Request Per Sec</span>\n<span class=\"token key attr-name\">kafka_network_requestmetrics_requestspersec{request</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"FetchConsumer\",version=\"11\",} 2.0</span>\n<span class=\"token comment\"># sum(rate(kafka_network_requestmetrics_requestspersec{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\",request=\\\"FetchConsumer\\\"}[5m]))</span>\n\n<span class=\"token comment\"># Broker Fetch Request Per Sec</span>\n<span class=\"token comment\"># sum(rate(kafka_network_requestmetrics_requestspersec{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\",request=\\\"Fetch\\\"}[5m]))</span>\n\n<span class=\"token comment\"># Offset Commit Request Per Sec</span>\n<span class=\"token key attr-name\">kafka_network_requestmetrics_requestspersec{request</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"OffsetCommit\",version=\"11\",} 2.0</span>\n<span class=\"token comment\"># sum(rate(kafka_network_requestmetrics_requestspersec{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\",request=\\\"OffsetCommit\\\"}[5m]))</span>\n\n<span class=\"token comment\"># CPU usage</span>\nprocess_cpu_seconds_total 7.67\n<span class=\"token comment\"># irate(process_cpu_seconds_total{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\"}[5m])*100</span>\n\n<span class=\"token comment\"># JVM Memory Used</span>\n<span class=\"token key attr-name\">jvm_memory_bytes_used{area</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"heap\",} 1.66297072E8</span>\n<span class=\"token key attr-name\">jvm_memory_bytes_max{area</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"heap\",} 1.073741824E9</span>\n<span class=\"token comment\"># sum without(area)(jvm_memory_bytes_used{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\"})</span>\n<span class=\"token comment\"># jvm_memory_bytes_max{job=\\\"kafka-broker\\\",area=\\\"heap\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\"}</span>\n\n<span class=\"token comment\"># Time spent in GC (% time in GC, threthold 80%)</span>\n<span class=\"token key attr-name\">jvm_gc_collection_seconds_sum{gc</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"G1 Young Generation\",} 0.052</span>\n<span class=\"token comment\"># sum without(gc)(rate(jvm_gc_collection_seconds_sum{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\"}[5m]))</span>\n\n<span class=\"token comment\"># Messages In</span>\nkafka_server_brokertopicmetrics_messagesinpersec 69.0\n<span class=\"token key attr-name\">kafka_server_brokertopicmetrics_messagesinpersec{topic</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"demo\",} 69.0</span>\n<span class=\"token comment\"># sum without(instance,topic)(rate(kafka_server_brokertopicmetrics_messagesinpersec{job=\\\"kafka-broker\\\",env=\\\"$env\\\",topic!=\\\"\\\"}[5m]))</span>\n\n<span class=\"token comment\"># Network Processor Avg Usage Percent - Average fraction of time the network processor threads are idle. Values are between 0 (all resources are used) and 100 (all resources are available)</span>\nkafka_network_socketserver_networkprocessoravgidlepercent 1.0\n<span class=\"token comment\"># 1-kafka_network_socketserver_networkprocessoravgidlepercent{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\"}</span>\n\n<span class=\"token comment\"># Zookeeper Request Latency - Latency in millseconds for ZooKeeper requests from broker</span>\nkafka_server_zookeeperclientmetrics_zookeeperrequestlatencyms 108.0\n<span class=\"token key attr-name\">kafka_server_zookeeperclientmetrics_zookeeperrequestlatencyms{quantile</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"0.50\",} 3.0</span>\n<span class=\"token key attr-name\">kafka_server_zookeeperclientmetrics_zookeeperrequestlatencyms{quantile</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"0.95\",} 9.0</span>\n<span class=\"token comment\"># kafka_server_zookeeperclientmetrics_zookeeperrequestlatencyms{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\",quantile=~\\\"$percentile\\\"}</span>\n\n<span class=\"token comment\"># Log size per Topic</span>\n<span class=\"token key attr-name\">kafka_log_log_size{partition</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"0\",topic=\"demo\",} 2898.0</span>\n<span class=\"token comment\"># sum(kafka_log_log_size{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\"}) by (topic)</span>\n\n<span class=\"token comment\"># Producer - RequestQueueTimeMs - A high value can imply there aren't enough IO threads or the CPU is a bottleneck, or the request queue isnt large enough. The request queue size should match the number of connections.</span>\n<span class=\"token key attr-name\">kafka_network_requestmetrics_requestqueuetimems{request</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"Produce\",} 23.0</span>\n<span class=\"token key attr-name\">kafka_network_requestmetrics_requestqueuetimems{request</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"Produce\",quantile=\"0.50\",} 0.0</span>\n<span class=\"token comment\"># kafka_network_requestmetrics_requestqueuetimems{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\",quantile=~\\\"$percentile\\\",request=\\\"Produce\\\"}</span>\n<span class=\"token comment\"># kafka_network_requestmetrics_requestqueuetimems{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\",quantile=~\\\"$percentile\\\",request=\\\"Produce\\\"}</span>\n\n<span class=\"token comment\"># In most cases, a high value can imply slow local storage or the storage is a bottleneck. One should also investigate LogFlushRateAndTimeMs to know how long page flushes are taking, which will also indicate a slow disk. In the case of FetchFollower requests, time spent in LocalTimeMs can be the result of a ZooKeeper write to change the ISR</span>\n<span class=\"token key attr-name\">kafka_network_requestmetrics_localtimems{request</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"Produce\",} 23.0</span>\n<span class=\"token key attr-name\">kafka_network_requestmetrics_localtimems{request</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"Produce\",quantile=\"0.50\",} 1.0</span>\n<span class=\"token comment\"># kafka_network_requestmetrics_localtimems{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\",quantile=~\\\"$percentile\\\",request=\\\"Produce\\\"}</span>\n\n<span class=\"token comment\"># A high value can imply a slow network connection. For fetch request, if the remote time is high, it could be that there is not enough data to give in a fetch response. This can happen when the consumer or replica is caught up and there is no new incoming data. If this is the case, remote time will be close to the max wait time, which is normal. Max wait time is configured via replica.fetch.wait.max.ms and fetch.max.wait.ms.</span>\n<span class=\"token key attr-name\">kafka_network_requestmetrics_remotetimems{request</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"Produce\",} 23.0</span>\n<span class=\"token key attr-name\">kafka_network_requestmetrics_remotetimems{request</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"Produce\",quantile=\"0.50\",} 0.0</span>\n<span class=\"token comment\"># kafka_network_requestmetrics_remotetimems{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\",quantile=~\\\"$percentile\\\",request=\\\"Produce\\\"}</span>\n\n<span class=\"token comment\"># A high value can imply there aren't enough network threads or the network cant dequeue responses quickly enough, causing back pressure in the response queue.</span>\n<span class=\"token key attr-name\">kafka_network_requestmetrics_responsequeuetimems{request</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"Produce\",} 23.0</span>\n<span class=\"token comment\"># kafka_network_requestmetrics_responsequeuetimems{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\",quantile=~\\\"$percentile\\\",request=\\\"Produce\\\"}</span>\n\n<span class=\"token comment\"># A high value can imply the zero-copy from disk to the network is slow, or the network is the bottleneck because the network cant dequeue responses of the TCP socket as quickly as theyre being created. If the network buffer gets full, Kafka will block.</span>\n<span class=\"token key attr-name\">kafka_network_requestmetrics_responsesendtimems{request</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"Produce\",} 23.0</span>\n<span class=\"token comment\"># kafka_network_requestmetrics_responsesendtimems{job=\\\"kafka-broker\\\",env=\\\"$env\\\",instance=~\\\"$instance\\\",quantile=~\\\"$percentile\\\",request=\\\"Produce\\\"}</span>\n\n<span class=\"token comment\"># Same set for {request=\"Fetch\"}</span>\n\n<span class=\"token comment\"># Connections count per listener</span>\n<span class=\"token key attr-name\">kafka_server_socketservermetrics_connection_count{listener</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"PLAINTEXT\",network_processor=\"0\",} 1.0</span>\n<span class=\"token comment\"># sum(kafka_server_socketservermetrics_connection_count{job=\\\"kafka-broker\\\", env=\\\"$env\\\", instance=~\\\"$instance\\\"}) by (listener)</span>\n\n<span class=\"token comment\"># Connections creation rate per listener</span>\n<span class=\"token key attr-name\">kafka_server_socketservermetrics_connection_creation_rate{listener</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"PLAINTEXT\",network_processor=\"1\",} 0.0</span>\n<span class=\"token comment\"># sum(kafka_server_socketservermetrics_connection_creation_rate{job=\\\"kafka-broker\\\", env=\\\"$env\\\", instance=~\\\"$instance\\\"}) by (listener)</span>\n\n<span class=\"token comment\"># Connections close rate per listener</span>\n<span class=\"token key attr-name\">kafka_server_socketservermetrics_connection_close_rate{listener</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"PLAINTEXT\",network_processor=\"1\",} 0.0</span>\n<span class=\"token comment\"># sum(kafka_server_socketservermetrics_connection_close_rate{job=\\\"kafka-broker\\\", env=\\\"$env\\\", instance=~\\\"$instance\\\"}) by (listener)</span>\n\n<span class=\"token comment\"># Connections per client version</span>\n<span class=\"token key attr-name\">kafka_server_socketservermetrics_connections{client_software_name</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"apache-kafka-java\",client_software_version=\"7.0.1-ccs\",listener=\"PLAINTEXT\",network_processor=\"2\",} 0.0</span>\n<span class=\"token comment\"># sum(kafka_server_socketservermetrics_connections{job=\\\"kafka-broker\\\", env=\\\"$env\\\", instance=~\\\"$instance\\\"}) by (client_software_name, client_software_version)</span>\n\n<span class=\"token comment\"># Number of consumer group per state</span>\n<span class=\"token comment\"># sum(kafka_coordinator_group_groupmetadatamanager_numgroupsstable{job=\\\"kafka-broker\\\", env=\\\"$env\\\", instance=~\\\"$instance\\\"})</span>\n<span class=\"token comment\"># sum(kafka_coordinator_group_groupmetadatamanager_numgroupspreparingrebalance{job=\\\"kafka-broker\\\", env=\\\"$env\\\", instance=~\\\"$instance\\\"})</span>\n<span class=\"token comment\"># sum(kafka_coordinator_group_groupmetadatamanager_numgroupsdead{job=\\\"kafka-broker\\\", env=\\\"$env\\\", instance=~\\\"$instance\\\"})</span>\n<span class=\"token comment\"># sum(kafka_coordinator_group_groupmetadatamanager_numgroupscompletingrebalance{job=\\\"kafka-broker\\\", env=\\\"$env\\\", instance=~\\\"$instance\\\"})</span>\n<span class=\"token comment\"># sum(kafka_coordinator_group_groupmetadatamanager_numgroupsempty{job=\\\"kafka-broker\\\", env=\\\"$env\\\", instance=~\\\"$instance\\\"})</span></code></pre></div>\n<p>And this is from kafka topics dashboard:</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token comment\"># Total # of Topics</span>\nkafka_controller_kafkacontroller_globaltopiccount 2.0\n<span class=\"token comment\"># sum(kafka_controller_kafkacontroller_globaltopiccount)</span>\n\n<span class=\"token comment\"># Messages In</span>\nkafka_server_brokertopicmetrics_messagesinpersec 69.0\n<span class=\"token key attr-name\">kafka_server_brokertopicmetrics_messagesinpersec{topic</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"demo\",} 69.0</span>\n<span class=\"token comment\"># sum without(instance) (rate(kafka_server_brokertopicmetrics_messagesinpersec{job=\\\"kafka-broker\\\",topic=~\\\"$topic\\\",env=~\\\"$env\\\"}[5m]))</span>\n\n<span class=\"token comment\"># Log size</span>\n<span class=\"token key attr-name\">kafka_log_log_size{partition</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"0\",topic=\"demo\",} 2898.0</span>\n<span class=\"token comment\"># sum(kafka_log_log_size{job=\\\"kafka-broker\\\",env=\\\"$env\\\",topic=~\\\"$topic\\\"}) by (topic)</span>\n\n<span class=\"token comment\"># Total # of Partitions</span>\nkafka_controller_kafkacontroller_globalpartitioncount 51.0\n<span class=\"token comment\"># sum(kafka_controller_kafkacontroller_globalpartitioncount)</span>\n\n<span class=\"token comment\"># Bytes In</span>\n<span class=\"token key attr-name\">kafka_server_brokertopicmetrics_bytesinpersec{topic</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"demo\",} 2002.0</span>\n<span class=\"token comment\"># sum without(instance) (rate(kafka_server_brokertopicmetrics_bytesinpersec{job=\\\"kafka-broker\\\",topic=~\\\"$topic\\\",env=~\\\"$env\\\"}[5m]))</span>\n\n<span class=\"token comment\"># Bytes Out</span>\nkafka_server_brokertopicmetrics_bytesoutpersec 0.0\n<span class=\"token comment\"># sum without(instance) (rate(kafka_server_brokertopicmetrics_bytesoutpersec{job=\\\"kafka-broker\\\",topic=~\\\"$topic\\\",env=~\\\"$env\\\"}[5m]))</span>\n\n<span class=\"token comment\"># Produce Request per sec</span>\n<span class=\"token key attr-name\">kafka_server_brokertopicmetrics_totalproducerequestspersec{topic</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"demo\",} 23.0</span>\n<span class=\"token comment\"># sum(rate(kafka_server_brokertopicmetrics_totalproducerequestspersec{job=\\\"kafka-broker\\\", env=\\\"$env\\\", topic=~\\\"$topic\\\"}[5m])) by (topic)</span>\n\n<span class=\"token comment\"># Fetch Request per sec</span>\nkafka_server_brokertopicmetrics_totalfetchrequestspersec 0.0\n<span class=\"token comment\"># sum(rate(kafka_server_brokertopicmetrics_totalfetchrequestspersec{job=\\\"kafka-broker\\\", env=\\\"$env\\\",topic=~\\\"$topic\\\"}[5m])) by (topic)</span>\n\n<span class=\"token comment\"># Start Offset</span>\n<span class=\"token key attr-name\">kafka_log_log_logstartoffset{partition</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"0\",topic=\"demo\",} 0.0</span>\n<span class=\"token comment\"># kafka_log_log_logstartoffset{job=\\\"kafka-broker\\\",env=~\\\"$env\\\",topic=~\\\"$topic\\\"}</span>\n\n<span class=\"token comment\"># End Offset</span>\n<span class=\"token key attr-name\">kafka_log_log_logendoffset{partition</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"0\",topic=\"demo\",} 86.0</span>\n<span class=\"token comment\"># kafka_log_log_logendoffset{job=\\\"kafka-broker\\\",env=~\\\"$env\\\",topic=~\\\"$topic\\\"}</span></code></pre></div>\n<h2>Schema Registry</h2>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token comment\"># Schema Registry Instances</span>\nkafka_schema_registry_registered_count 0.0\n<span class=\"token comment\"># count(kafka_schema_registry_registered_count{job=\\\"schema-registry\\\",env=\\\"$env\\\"})</span>\n\n<span class=\"token comment\"># CPU Usage</span>\nprocess_cpu_seconds_total 8.27\n<span class=\"token comment\"># irate(process_cpu_seconds_total{job=\\\"schema-registry\\\",env=\\\"$env\\\"}[5m])*100</span>\n\n<span class=\"token comment\"># JVM Memory, JVM GC</span>\n<span class=\"token comment\"># ...</span>\n\n<span class=\"token comment\"># Active Connections</span>\nkafka_schema_registry_jetty_metrics_connections_active 0.0\n<span class=\"token comment\"># kafka_schema_registry_jetty_metrics_connections_active{job=\\\"schema-registry\\\",env=\\\"$env\\\"}</span>\n\n<span class=\"token comment\"># Requests Rate</span>\nkafka_schema_registry_jersey_metrics_request_rate 0.05037445007891997\n<span class=\"token comment\"># kafka_schema_registry_jersey_metrics_request_rate{job=\\\"schema-registry\\\",env=\\\"$env\\\"}</span>\n\n<span class=\"token comment\"># Requests latency 99p</span>\nkafka_schema_registry_jersey_metrics_request_latency_99 50.0\n<span class=\"token comment\"># kafka_schema_registry_jersey_metrics_request_latency_99{job=\\\"schema-registry\\\",env=\\\"$env\\\"}</span></code></pre></div>\n<p>There is much more interesting metrics, like compatibility check errors, auth errors and so on, need to return back to it after some data will be collected</p>\n<p>The same is true for kafka rest</p>\n<p>Also both have <a href=\"https://github.com/confluentinc/jmx-monitoring-stacks/blob/6.1.0-post/jmxexporter-prometheus-grafana/assets/grafana/provisioning/dashboards/kafka-consumer.json\">consumers</a> and <a href=\"https://github.com/confluentinc/jmx-monitoring-stacks/blob/6.1.0-post/jmxexporter-prometheus-grafana/assets/grafana/provisioning/dashboards/kafka-producer.json\">producers</a></p>\n<p><strong>consumer</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># The number of commit calls per second\nkafka_consumer_consumer_coordinator_metrics_commit_rate{job=\"schema\"}\n\n# The average time in ms a request was throttled by a broker\nkafka_consumer_consumer_fetch_manager_metrics_fetch_throttle_time_avg{job=\"schema\"}\n\n# Rate of failed authentication attempts\nkafka_consumer_consumer_metrics_failed_authentication_rate{job=\"schema\"}\n\n# The number of total rebalance events per hour, both successful and unsuccessful rebalance attempts\nkafka_consumer_consumer_coordinator_metrics_rebalance_rate_per_hour{job=\"schema\"} + kafka_consumer_consumer_coordinator_metrics_failed_rebalance_rate_per_hour{job=\"schema\"}\n\n# The average number of bytes consumed per second\nrate(kafka_consumer_consumer_fetch_manager_metrics_bytes_consumed_total{job=\"schema\",topic=\"_schemas\"}[1m])\n\n# The average number of records consumed per second\nrate(kafka_consumer_consumer_fetch_manager_metrics_records_consumed_total{job=\"schema\",topic=\"_schemas\"}[1m])\n\n# The number of fetch requests per second\nrate(kafka_consumer_consumer_fetch_manager_metrics_fetch_total{job=\"schema\"}[1m])\n\n# The average number of bytes fetched per request for a topic\nkafka_consumer_consumer_fetch_manager_metrics_fetch_size_avg{job=\"schema\",topic=\"_schemas\"}\n\n# The average time taken for a fetch request\nkafka_consumer_consumer_fetch_manager_metrics_fetch_latency_avg{job=\"schema\"}\n\n# The average time taken for a commit request\nkafka_consumer_consumer_coordinator_metrics_commit_latency_avg{job=\"schema\"}\n\n# The number of commit calls per second\nkafka_consumer_consumer_coordinator_metrics_commit_rate{job=\"schema\"}\n\n# Number of simultaneous connections\nkafka_consumer_consumer_metrics_connection_count{job=\"schema\"}\n\n# response rate per node\nkafka_consumer_consumer_node_metrics_response_rate{job=\"schema\"}</code></pre></div>\n<p><strong>producer</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># The average per-second number of retried record sends for a topic. An increase could signal connectivity problems from the application to the broker\nkafka_producer_producer_metrics_record_retry_rate{job=\"schema\"}\n\n# The average per-second number of record sends that resulted in errors.\nrate(kafka_producer_producer_metrics_record_error_total{job=\"schema\"}[1m])\n\n# he total amount of buffer memory that is not being used (either unallocated or in the free list)\nkafka_producer_producer_metrics_buffer_available_bytes{job=\"schema\"}\n\n# The average time in ms a request was throttled by a broker.\nkafka_producer_producer_metrics_produce_throttle_time_avg{job=\"schema\"}\n\n# The average compression rate of record batches for a topic, defined as the average ratio of the compressed batch size over the uncompressed size.\nkafka_producer_producer_metrics_compression_rate_avg{job=\"schema\"}\n\n# The average request latency in ms\nkafka_producer_producer_metrics_request_latency_avg{job=\"schema\"}\n\n# The average time in ms record batches spent in the send buffer\nkafka_producer_producer_metrics_record_queue_time_avg{job=\"schema\"}\n\n# The rate of failed authentication per seconds\nrate(kafka_producer_producer_metrics_failed_authentication_total{job=\"schema\"}[1m])\n\n# The average number of bytes sent per second to the broker.\nrate(kafka_producer_producer_metrics_outgoing_byte_total{job=\"schema\"}[1m])\n\n# The average number of bytes sent per second to the broker per topic.\nsum(rate(kafka_producer_producer_topic_metrics_byte_total{job=\"schema\"}[1m])) by (instance,topic)\n\n# The average number of messages sent per second to the broker.\nrate(kafka_producer_producer_metrics_record_send_total{job=\"schema\"}[1m])\n\n# The average number of messages sent per second to the broker per topic.\nsum(rate(kafka_producer_producer_topic_metrics_record_send_total{job=\"schema\"}[1m])) by (instance, topic)\n\n# The average number of bytes sent per partition per-request.\nkafka_producer_producer_metrics_batch_size_avg{job=\"schema\"}\n\n# The current number of in-flight requests awaiting a response.\nkafka_producer_producer_metrics_requests_in_flight{job=\"schema\"}\n\n# The average record size\nkafka_producer_producer_metrics_record_size_avg{job=\"schema\"}\n\n# The average number of requests sent per second to the broker.\nrate(kafka_producer_producer_metrics_request_total{job=\"schema\"}[1m])\n\n# The average number of records per request.\nkafka_producer_producer_metrics_request_size_avg{job=\"schema\"}\n\n# The average number of response received per second to the broker.\nrate(kafka_producer_producer_metrics_response_total{job=\"schema\"}[1m])\n\n# The current number of active connections.\nrate(kafka_producer_producer_metrics_connection_count{job=\"schema\"}[1m])\n\n# New connections established per second in the window.\nkafka_producer_producer_metrics_connection_creation_rate{job=\"schema\"}\n\n# Connections closed per second in the window.\nkafka_producer_producer_metrics_connection_close_rate{job=\"schema\"}\n\n# The fraction of time the I/O thread spent doing I/O.\nkafka_producer_producer_metrics_io_ratio{job=\"schema\"}\n\n# The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds.\nkafka_producer_producer_metrics_io_wait_time_ns_avg{job=\"schema\"}\n\n# The average length of time for I/O per select call in nanoseconds.\nkafka_producer_producer_metrics_io_time_ns_avg{job=\"schema\"}\n\n# The fraction of time the I/O thread spent waiting.\nkafka_producer_producer_metrics_io_wait_ratio{job=\"schema\"}\n\n# Number of times the I/O layer checked for new I/O to perform per second.\nkafka_producer_producer_metrics_select_rate{job=\"schema\"}</code></pre></div>\n<p><strong>jetty</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># The number of requests in the jetty thread pool queue\nkafka_schema_registry_jetty_metrics_request_queue_size{job=\"schema\"}\n</code></pre></div>\n<p><strong>jersey</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># The average number of HTTP requests per second\nkafka_schema_registry_jersey_metrics_subjects_get_schema_request_rate{job=\"schema\"}\n\n# The average number of HTTP requests per second.\nkafka_schema_registry_jersey_metrics_subjects_versions_deleteschemaversion_schema_request_rate\n\n# The average number of HTTP responses per second.\nkafka_schema_registry_jersey_metrics_schemas_get_schemas_response_rate\n\n# The average number of requests per second that resulted in HTTP error responses\nkafka_schema_registry_jersey_metrics_metadata_id_request_error_rate\n\n# bazillion of metrics per endpoint to measure number of requests, timing, error rate</code></pre></div>\n<p>Links:</p>\n<ul>\n<li><a href=\"https://www.confluent.io/blog/monitor-kafka-clusters-with-prometheus-grafana-and-confluent/\">Monitoring Your Event Streams: Integrating Confluent with Prometheus and Grafana</a></li>\n<li><a href=\"https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/\">io.prometheus.jmx.jmx_prometheus_javaagent actual versions</a></li>\n<li><a href=\"/kafka-sasl-ssl\">kafka sasl_ssl</a></li>\n<li><a href=\"https://github.com/prometheus/jmx_exporter\">jmx exporter sources</a></li>\n<li><a href=\"https://github.com/confluentinc/jmx-monitoring-stacks/tree/6.1.0-post/shared-assets/jmx-exporter\">jmx configuration examples</a></li>\n<li><a href=\"https://github.com/confluentinc/jmx-monitoring-stacks/blob/6.1.0-post/jmxexporter-prometheus-grafana/docker-compose.override.yml\">example of docker compose with environment variables</a></li>\n</ul>"}},"pageContext":{"id":"fd51d5e1-9c5f-5980-8589-5cfcfc84d2e6"}},"staticQueryHashes":[],"slicesMap":{}}